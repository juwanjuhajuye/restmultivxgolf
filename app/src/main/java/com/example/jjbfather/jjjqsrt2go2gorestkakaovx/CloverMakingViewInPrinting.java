package com.example.jjbfather.jjjqsrt2go2gorestkakaovx;
//aa
import android.annotation.SuppressLint;
import android.content.SharedPreferences;
import android.graphics.BitmapFactory;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Typeface;
import android.os.Build;
import android.os.Environment;
import android.text.Layout;
import android.text.SpannableString;
import android.text.TextUtils;
import android.text.style.StyleSpan;
import android.util.Log;
import android.util.TypedValue;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import androidx.annotation.RequiresApi;

import com.example.jjbfather.jjjqsrt2go2gorestkakaovx.tablesale.TableSaleMain;
import com.printer.posbank.Printer;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.jsoup.helper.StringUtil;

import java.io.File;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;

import static android.content.Context.MODE_PRIVATE;

public class CloverMakingViewInPrinting {

    public static LinearLayout makingLinearLayout(final JSONObject data, final String paramPrintingType, final String paramCusMer) {
        if (data == null) {
            return  null;
        }

        GlobalMemberValues.logWrite("cloverprintinglog", "받은 데이터 : " + data.toString() + "\n");

        final LinearLayout.LayoutParams matchParentParams
                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32);
        matchParentParams.setMargins(0, 0, 0, 0);

        final LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
        if (GlobalMemberValues.B_ON_REPRINT){
            printingLn.setLayoutParams(new LinearLayout.LayoutParams(GlobalMemberValues.PRINTINGPAPERSIZE_ON_REPRINT, LinearLayout.LayoutParams.MATCH_PARENT));
        } else {
            printingLn.setLayoutParams(new LinearLayout.LayoutParams(GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, LinearLayout.LayoutParams.MATCH_PARENT));
        }

        if (!paramPrintingType.isEmpty()){
            if (paramPrintingType.equals("testPrintView")){
                printingLn.setLayoutParams(new LinearLayout.LayoutParams(571, LinearLayout.LayoutParams.MATCH_PARENT));
            }
        }

        printingLn.setOrientation(LinearLayout.VERTICAL);
        printingLn.setBackgroundColor(Color.parseColor("#ffffff"));

        // 가격표시앞에 $ 표시여부
        String tempDollarStr = "";
        if (GlobalMemberValues.ISDISPLAYPRICEDOLLAR) {
            tempDollarStr = "$";
        }
        final String finalTempDollarStr = tempDollarStr;

        final double[] mTotalTipAmount = {0};
        final ArrayList<String> tempArrListStrFile = new ArrayList<String>();
        Thread thread2 = new Thread() {
            @SuppressLint("LongLogTag")
            @Override
            public void run(){
                String main_Text = "";

                String merchantcustomerText = "";

                String str_saledate = "";
                String str_receiptno = "";
                String str_change = "";
                String str_cashtendered = "";
                String str_employeename = "";
                JSONArray jsonArray_saleitemlist = new JSONArray();
                String str_itemqty = "";
                String str_itemname = "";
                String str_itemamount = "";
                String str_itemprice = "";
                String str_itemidx = "";
                String str_itemdcextrastr = "";
                String str_itemtaxexempt = "";
                String str_subtotal = "";
                JSONArray jsonArray_creditcardtransaction = new JSONArray();
                String str_cardsalonsalescardidx = "";
                String str_cardchangeamount = "";
                String str_cardtype = "";
                String str_cardaid = "";
                String str_cardtvr = "";
                String str_cardtsi = "";
                String str_creditcardnumber = "";
                String str_cardrefnumber = "";
                String str_cardauthnumber = "";
                String str_storeaddress2 = "";
                String str_storeaddress1 = "";
                String str_giftcardtendered = "";
                String str_tax = "";
                String str_creditcardtendered = "";
                String str_checktendered = "";
                String str_pointtendered = "";
                String str_storestate = "";
                String str_storename = "";
                String str_storecity = "";
                String str_storezip = "";
                String str_saletime = "";
                String str_storephone = "";
                String str_totalamount = "";

                String str_customername = "";
                String str_customerphonenum = "";
                String str_customeraddress = "";
                String str_customermemo = "";
                String str_deliverymemo = "";

                String str_customerid = "";
                String str_customer_point_remaining = "";

                String str_alldiscountextrstr = "";
                String str_totalextradiscountprice="";

                String str_receiptprinttype = "";

                String str_cardsalesignatureimageyn = "N";

                String str_signatureTxt = "";

                String str_reprintyn = "N";

                String str_tipamount = "";

                String str_cardtipamount = "0";

                String str_optiontxt = "";
                String str_optionprice = "0.0";
                String str_additionaltxt1 = "";
                String str_additionalprice1 = "0.0";
                String str_additionaltxt2 = "";
                String str_additionalprice2 = "0.0";
                String str_kitchenmemo = "";
                String str_soldoutmemo = "";

                String str_deliverytakeaway = "";
                String str_deliverypickupfee = "";

                String str_receiptfooter = "";

                String str_customerOrderNumber = "";
                String str_customerPagerNumber = "";

                String str_returntipamount = "";
                String str_returnpickupdeliveryfee = "";

                String str_each_discount_extra_price = "";

                // Restaurant 관련
                String str_restaurant_tablename = "";
                String str_restaurant_tablepeoplecnt = "";

                double d_each_discount_total_price = 0;
                double d_each_extra_total_price = 0;

                // cardholder
                String str_cardholder = "";

                // tipcash
                String str_tipcash = "";
                // tipcard
                String str_tipcard = "";

                String str_service_fee = "";

                String str_earned_point = "";

                String str_itemCategoryName = "";
                String str_itemCategoryName2 = "";
                String str_itemCategoryName_temp = "";
                // delivery address
                String str_deliveryaddress = "";

                // delivery date
                String str_deliveryDate = "";

                // billpayamount
                double d_billpayamount = 0.00;
                double d_billtotalamount = 0.00;

                String str_bill_list_idx = "";
                String str_bill_list_holdcode = "";

                String str_billcartidx = "";
                String str_billtype = "";

                String str_cancelreason = "";

                String str_togo_delivery = "";


                String receiptType = "1";
                if (paramCusMer.contains("customer")) receiptType = "1";
                if (paramCusMer.contains("merchant")) receiptType = "2";
                String str_ordernumber_alignment_yn = "";
                if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("ordernumber_position",paramCusMer)){
                    str_ordernumber_alignment_yn = "T";
                } else {
                    str_ordernumber_alignment_yn = "B";
                }

                String str_ordertype_alignment_yn = "";
                if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("ordertypealignment",paramCusMer)){
                    str_ordertype_alignment_yn = "T";
                } else {
                    str_ordertype_alignment_yn = "B";
                }
                String str_pager_alignment_yn = "";
                if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("pagernumberalignment",paramCusMer)){
                    str_pager_alignment_yn = "T";
                } else {
                    str_pager_alignment_yn = "B";
                }

                String str_checkcompany = "";

                String str_isMaster = "";

                try {
                    str_saledate = GlobalMemberValues.getDataInJsonData(data, "saledate");
                    str_receiptno = GlobalMemberValues.getDataInJsonData(data, "receiptno");
                    str_cashtendered = GlobalMemberValues.getDataInJsonData(data, "cashtendered");
                    str_employeename = GlobalMemberValues.getDataInJsonData(data, "employeename");
                    str_subtotal = GlobalMemberValues.getDataInJsonData(data, "subtotal");
                    str_storeaddress2 = GlobalMemberValues.getDataInJsonData(data, "storeaddress2");
                    str_storeaddress1 = GlobalMemberValues.getDataInJsonData(data, "storeaddress1");
                    str_giftcardtendered = GlobalMemberValues.getDataInJsonData(data, "giftcardtendered");
                    str_tax = GlobalMemberValues.getDataInJsonData(data, "tax");
                    str_creditcardtendered = GlobalMemberValues.getDataInJsonData(data, "creditcardtendered");
                    str_checktendered = GlobalMemberValues.getDataInJsonData(data, "checktendered");
                    str_pointtendered = GlobalMemberValues.getDataInJsonData(data, "pointtendered");
                    str_storestate = GlobalMemberValues.getDataInJsonData(data, "storestate");
                    str_storename  = GlobalMemberValues.getDataInJsonData(data, "storename");
                    str_storecity = GlobalMemberValues.getDataInJsonData(data, "storecity");
                    str_storezip = GlobalMemberValues.getDataInJsonData(data, "storezip");
                    str_saletime = GlobalMemberValues.getDataInJsonData(data, "saletime");
                    str_storephone = GlobalMemberValues.getDataInJsonData(data, "storephone");
                    str_totalamount = GlobalMemberValues.getDataInJsonData(data, "totalamount");
                    str_customername = GlobalMemberValues.getDataInJsonData(data, "customername");

                    str_customerid = GlobalMemberValues.getDataInJsonData(data,"customerid");
                    str_customer_point_remaining = GlobalMemberValues.getDataInJsonData(data,"customer_point_remaining");

                    str_receiptprinttype = GlobalMemberValues.getDataInJsonData(data, "receiptprinttype");

                    str_change = GlobalMemberValues.getDataInJsonData(data, "change");
                    str_alldiscountextrstr = GlobalMemberValues.getDataInJsonData(data, "alldiscountextrstr");
                    str_totalextradiscountprice = GlobalMemberValues.getDataInJsonData(data, "totalextradiscountprice");

                    str_deliverypickupfee = GlobalMemberValues.getDataInJsonData(data, "deliverypickupfee");
                    str_receiptfooter = GlobalMemberValues.getDataInJsonData(data, "receiptfooter");
                    str_customerOrderNumber = GlobalMemberValues.getDataInJsonData(data, "customerordernumber");
                    str_customerPagerNumber = GlobalMemberValues.getDataInJsonData(data, "customerpagernumber");
                    str_tipamount = GlobalMemberValues.getDataInJsonData(data, "tipamount");
                    str_customerphonenum = GlobalMemberValues.getDataInJsonData(data, "customerphonenum");
                    str_customeraddress = GlobalMemberValues.getDataInJsonData(data, "customeraddress");

                    // jihun customer memo
                    str_customermemo = GlobalMemberValues.getDataInJsonData(data,"customermemo");
                    str_deliverymemo = GlobalMemberValues.getDataInJsonData(data,"deliverymemo");

                    str_returntipamount = GlobalMemberValues.getDataInJsonData(data, "returntipamount");
                    str_returnpickupdeliveryfee = GlobalMemberValues.getDataInJsonData(data, "returnpickupdeliveryfee");

                    // Restaurant 관련
                    str_restaurant_tablename = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablename");
                    str_restaurant_tablepeoplecnt = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablepeoplecnt");

                    if (!GlobalMemberValues.getDataInJsonData(data, "tablename").isEmpty()) {
                        str_restaurant_tablename = GlobalMemberValues.getDataInJsonData(data, "tablename");
                    }
                    if (!GlobalMemberValues.getDataInJsonData(data, "tableidx").isEmpty()){
                        str_restaurant_tablepeoplecnt = GlobalMemberValues.getDataInJsonData(data, "tableidx");
                    }

                    if (data.toString().contains("reprintyn")) {
                        str_reprintyn = GlobalMemberValues.getDataInJsonData(data, "reprintyn");
                    } else {
                        str_reprintyn = "N";
                    }

                    if (data.toString().contains("deliverytakeaway")) {
                        str_deliverytakeaway = GlobalMemberValues.getDataInJsonData(data, "deliverytakeaway");
                    } else {
                        str_deliverytakeaway = "T";
                    }

                    if (data.getJSONArray("saleitemlist") != null) {
                        jsonArray_saleitemlist = data.getJSONArray("saleitemlist");
                    }

                    if (data.toString().contains("creditcardtransaction")) {
                        jsonArray_creditcardtransaction = data.getJSONArray("creditcardtransaction");
                    }

                    // tip cash tip card
                    if (data.toString().contains("tipcash")){
                        str_tipcash = GlobalMemberValues.getDataInJsonData(data, "tipcash");
                    }

                    if (data.toString().contains("tipcard")){
                        str_tipcard = GlobalMemberValues.getDataInJsonData(data, "tipcard");
                    }

                    // service fee
                    if (data.toString().contains("servicefee")){
                        str_service_fee = GlobalMemberValues.getDataInJsonData(data, "servicefee");
                    }
                    // earned point
                    if (data.toString().contains("earnedpoint")){
                        str_earned_point = GlobalMemberValues.getDataInJsonData(data,"earnedpoint");
                    }
                    // delivery address
                    if (data.toString().contains("deliveryaddress")){
                        str_deliveryaddress = GlobalMemberValues.getDataInJsonData(data,"deliveryaddress");
                    }

                    if (data.toString().contains("deliverydate")) {
                        str_deliveryDate = GlobalMemberValues.getDataInJsonData(data,"deliverydate");
                    }

                    if (data.toString().contains("checkcompany")){//DOORDASH
                        str_checkcompany = GlobalMemberValues.getDataInJsonData(data,"checkcompany");
                    }

                    d_billpayamount = data.optDouble("billpayamount", 0.00);
                    d_billtotalamount = data.optDouble("billtotalamount", 0.00);

                    str_bill_list_idx = data.optString("bill_list_idx", "");

                    str_bill_list_holdcode = data.optString("bill_list_holdcode", "");

                    str_billcartidx = data.optString("billcartidx", "");
                    str_billtype = data.optString("billtype","");

                    str_cancelreason = data.optString("cancelreason", "");

                    if (data.toString().contains("isMaster")){
                        // master printing
                        str_isMaster = data.optString("isMaster", "N");
                    }

                } catch (JSONException e){
                    Log.e("PaymentPrint get str err!!!", e.toString());
                    GlobalMemberValues.logWrite("clovermakinglnerrorlog", "에러내용 : " + e.toString() + "\n");
                }

                if (GlobalMemberValues.isStrEmpty(str_customerOrderNumber)) {
                    str_customerOrderNumber = MainActivity.mDbInit.dbExecuteReadReturnString(
                            " select customerordernumber from salon_sales where salesCode = '" + str_receiptno + "' ");
                }
                if (GlobalMemberValues.isStrEmpty(str_customerOrderNumber)) {
                    str_customerOrderNumber = MssqlDatabase.getResultSetValueToString(
                            " select customerordernumber from salon_sales where salesCode = '" + str_receiptno + "' ");
                }

                if (str_isMaster == "Y" || str_isMaster.equals("Y")) {
                    String topReceiptTitle = "";
                    topReceiptTitle = ">>>>>> MASTER <<<<<<";

                    TextView pagerNoTv = new TextView(MainActivity.mContext);
                    pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                    pagerNoTv.setGravity(Gravity.CENTER);
                    pagerNoTv.setText(topReceiptTitle);
                    pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                    printingLn.addView(pagerNoTv);
                }

                if (str_reprintyn == "Y" || str_reprintyn.equals("Y")) {
                    String topReceiptTitle = "";
                    topReceiptTitle = ">>>>>> REPRINT <<<<<<";

                    TextView pagerNoTv = new TextView(MainActivity.mContext);
                    pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                    pagerNoTv.setGravity(Gravity.CENTER);
                    pagerNoTv.setText(topReceiptTitle);
                    pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                    printingLn.addView(pagerNoTv);
                }

                if (str_deliveryDate != "" && !str_deliveryDate.equals(" :00")){
                    TextView tv_deliveryDate_title = new TextView(MainActivity.mContext);
                    tv_deliveryDate_title.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    tv_deliveryDate_title.setGravity(Gravity.CENTER);
                    tv_deliveryDate_title.setText("*** Pickup Time ***");
                    tv_deliveryDate_title.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    tv_deliveryDate_title.setPaintFlags(tv_deliveryDate_title.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    GlobalMemberValues.setTextStyleOnClover(tv_deliveryDate_title);
                    printingLn.addView(tv_deliveryDate_title);

                    TextView tv_deliveryDate = new TextView(MainActivity.mContext);
                    tv_deliveryDate.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    tv_deliveryDate.setGravity(Gravity.CENTER);
                    tv_deliveryDate.setText(str_deliveryDate);
                    tv_deliveryDate.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    tv_deliveryDate.setPaintFlags(tv_deliveryDate.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    GlobalMemberValues.setTextStyleOnClover(tv_deliveryDate);
                    printingLn.addView(tv_deliveryDate);
                }

                if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                    String topReceiptTitle = "";
                    if (paramPrintingType.equals("void")) {
                        topReceiptTitle = "VOID";
                    } else {
                        topReceiptTitle = "RETURN";
                    }

                    TextView pagerNoTv = new TextView(MainActivity.mContext);
                    pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                    pagerNoTv.setGravity(Gravity.CENTER);
                    pagerNoTv.setText(topReceiptTitle);
                    pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 15);
                    GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                    printingLn.addView(pagerNoTv);
                }

                GlobalMemberValues globalMemberValues = new GlobalMemberValues();
                GlobalMemberValues.logWrite("restaurantdatalog", "getpostype : " + globalMemberValues.getPOSType().toUpperCase() + "\n");
                if ((globalMemberValues.getPOSType().toUpperCase() == "R" || globalMemberValues.getPOSType().toUpperCase().equals("R"))
                        && GlobalMemberValues.now_saletypeisrestaurant) {
                    //GlobalMemberValues.logWrite("restaurantdatalog", "여기..... jjj" + "\n");
                    // Restaurant 관련
                    if (!GlobalMemberValues.isStrEmpty(str_restaurant_tablename)) {
                        int fsize = 20;
                        if (GlobalMemberValues.isEloPro()) {
                            fsize = 50;
                        } else {
                            if (GlobalMemberValues.isDevicePAXFromDB()) {
                                fsize = 30;
                            }
                        }

                        if (GlobalMemberValues.isRealTable_tablename(str_restaurant_tablename)){
                            if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("tablenumber_yn",paramCusMer)){

                                TextView pagerNoTv = new TextView(MainActivity.mContext);
                                pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 140));
                                pagerNoTv.setGravity(Gravity.CENTER);
                                pagerNoTv.setText(str_restaurant_tablename);
                                pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 100);
                                pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                                GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                                printingLn.addView(pagerNoTv);
                            }
                        } else {
                            String pagenoTxt = GlobalMemberValues.getPagerNumberHeaderTxt() + str_customerPagerNumber + "\n";

                            TextView pagerNoTv = new TextView(MainActivity.mContext);
                            pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 140));
                            pagerNoTv.setGravity(Gravity.CENTER);
                            pagerNoTv.setText(pagenoTxt);
                            pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 100);
                            pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                            GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                            printingLn.addView(pagerNoTv);

                            // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                            printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                            // ------------------------------------------------------------------------------------------------------------------------------
                        }



                        // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                    }

                    // ------------------------------------------------------------------------------------------------------------------------------
                } else {
                    // Restaurant 관련
                    if (!GlobalMemberValues.isStrEmpty(str_restaurant_tablename)) {
                        int fsize = 20;
                        if (GlobalMemberValues.isEloPro()) {
                            fsize = 50;
                        } else {
                            if (GlobalMemberValues.isDevicePAXFromDB()) {
                                fsize = 30;
                            }
                        }

                        if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("tablenumber_yn",paramCusMer)){
                            TextView pagerNoTv = new TextView(MainActivity.mContext);
                            pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                            pagerNoTv.setGravity(Gravity.CENTER);

                            String str_station_number_type = GlobalMemberValues.getValueOnReceiptSetting("stationnumber_type",receiptType);

                            SpannableString spanString = new SpannableString(str_restaurant_tablename);
//                    spanString.setSpan(new UnderlineSpan(), 0, spanString.length(), 0);
                            switch (str_station_number_type){
                                case "1" :
                                    break;
                                case "2":
                                    spanString.setSpan(new StyleSpan(Typeface.BOLD), 0, spanString.length(), 0);
                                    break;
                                case "3":
                                    spanString.setSpan(new StyleSpan(Typeface.ITALIC), 0, spanString.length(), 0);
                                    break;
                            }

                            pagerNoTv.setText(spanString);

                            float textsize = GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + fsize; // normal size
                            String str_station_number_size = GlobalMemberValues.getValueOnReceiptSetting("stationnumber_size",receiptType);
                            switch (str_station_number_size){
                                case "1" :  // small
                                    textsize = textsize - 2;
                                    break;
                                case "2":   // medium
                                    break;
                                case "3":   // large
                                    textsize = textsize + 4;
                                    break;
                                case "4":   // x large
                                    textsize = textsize + 8;
                                    break;
                                case "5":   // xx large
                                    textsize = textsize + 12;
                                    break;
                            }

                            pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                            pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                            GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                            printingLn.addView(pagerNoTv);
                        }

                        // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                    }

                    if (paramPrintingType.equals("sales")) {
                        if (!GlobalMemberValues.isStrEmpty(str_customerPagerNumber)) {
                            if (str_pager_alignment_yn.equals("T")){
                                if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("pagernumber_yn",paramCusMer)){
                                    String pagenoTxt = GlobalMemberValues.getPagerNumberHeaderTxt() + str_customerPagerNumber + "\n";

                                    TextView pagerNoTv = new TextView(MainActivity.mContext);
                                    pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 140));
                                    pagerNoTv.setGravity(Gravity.CENTER);
                                    pagerNoTv.setText(pagenoTxt);
                                    pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 100);
                                    pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                                    GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                                    printingLn.addView(pagerNoTv);

                                    // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                    printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                                    // ------------------------------------------------------------------------------------------------------------------------------
                                }
                            }


                        }
                    }
                }

                // 로고 프린팅
                String logoprintingonreceiptyn = MainActivity.mDbInit.dbExecuteReadReturnString(
                        " select logoprintingonreceiptyn from salon_storestationsettings_deviceprinter ");
                if (GlobalMemberValues.isStrEmpty(logoprintingonreceiptyn)) {
                    logoprintingonreceiptyn = "N";
                }
                if (logoprintingonreceiptyn == "Y" || logoprintingonreceiptyn.equals("Y")) {
                    File path = GlobalMemberValues.ADFILELOCALPATH;
                    File isFile = new File(path, "receiptlogoimg.png"); //파일명까지 포함함 경로의 File 객체 생성
                    String adImage = isFile.getPath();
                    if (new File(adImage).exists()) {
                        ImageView logoimg = new ImageView(MainActivity.mContext);
//                        logoimg.setLayoutParams(new LinearLayout.LayoutParams(576, 200));
                        logoimg.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 200));
                        logoimg.setImageBitmap(BitmapFactory.decodeFile(isFile.getAbsolutePath()));
                        //logoimg.setScaleType(ImageView.ScaleType.FIT_CENTER);
                        printingLn.addView(logoimg);

                        // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                        // ------------------------------------------------------------------------------------------------------------------------------
                    }
                }
                if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("stationnumber_yn",paramCusMer)){
                    TextView stationNameTv = new TextView(MainActivity.mContext);
                    stationNameTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    stationNameTv.setGravity(Gravity.CENTER);
                    stationNameTv.setText("*** " + GlobalMemberValues.STATION_NAME + " ***");
                    stationNameTv.setPaintFlags(stationNameTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    stationNameTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    GlobalMemberValues.setTextStyleOnClover(stationNameTv);
                    printingLn.addView(stationNameTv);
                }

                if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("header_yn",paramCusMer)){

                    // Store 이름
                    TextView storenameTv = new TextView(MainActivity.mContext);
                    storenameTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    storenameTv.setGravity(Gravity.CENTER);
                    storenameTv.setText(str_storename);
                    storenameTv.setPaintFlags(storenameTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    storenameTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    GlobalMemberValues.setTextStyleOnClover(storenameTv);
                    printingLn.addView(storenameTv);

                    // Store 주소 1, 2
                    TextView storeaddrTv = new TextView(MainActivity.mContext);
                    storeaddrTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                    storeaddrTv.setGravity(Gravity.CENTER);
                    storeaddrTv.setText(str_storeaddress1 + " "+ str_storeaddress2);
                    storeaddrTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(storeaddrTv);
                    printingLn.addView(storeaddrTv);

                    // Store 주소 나머지
                    TextView storeaddretcTv = new TextView(MainActivity.mContext);
                    storeaddretcTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                    storeaddretcTv.setGravity(Gravity.CENTER);
                    storeaddretcTv.setText(str_storecity + " " + str_storestate + " "+ str_storezip);
                    storeaddretcTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(storeaddretcTv);
                    printingLn.addView(storeaddretcTv);

                    // Store 전화번호
                    TextView storetelTv = new TextView(MainActivity.mContext);
                    storetelTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                    storetelTv.setGravity(Gravity.CENTER);
                    storetelTv.setText("(TEL) "+ telNumberExch(str_storephone));
                    storetelTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(storetelTv);
                    printingLn.addView(storetelTv);

                    GlobalMemberValues.logWrite("cloverdatacheckreturnlog", "스토어명 : " + str_storename + "\n");
                    GlobalMemberValues.logWrite("cloverdatacheckreturnlog", "전화번호 : " + telNumberExch(str_storephone) + "\n");

                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }


                // Restaurant 관련
                if (GlobalMemberValues.isRealTable_tablename(str_restaurant_tablename)) {
                    if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("tablenumber_yn",paramCusMer)){
                        LinearLayout tableinfoLn = new LinearLayout(MainActivity.mContext);
                        tableinfoLn.setLayoutParams(matchParentParams);
                        tableinfoLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView tableinfoTv1 = new TextView(MainActivity.mContext);
                        tableinfoTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        tableinfoTv1.setText("Table Info.");
                        tableinfoTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(tableinfoTv1);
                        tableinfoTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        tableinfoLn.addView(tableinfoTv1);

                        TextView tableinfoTv2 = new TextView(MainActivity.mContext);
                        tableinfoTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        tableinfoTv2.setText(" : " + str_restaurant_tablename);
                        tableinfoTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(tableinfoTv2);
                        tableinfoTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        tableinfoLn.addView(tableinfoTv2);

                        printingLn.addView(tableinfoLn);
                        // 점선 ----------------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                        // ---------------------------------------------------------------------------------------------------------------------------------
                    }

                    // --------------------------------------------------------------------------------------------------------------------------------
                } else {
                    // 테이블 세일이 아닌 퀵 세일인 경우.
                    if (paramPrintingType.equals("sales")) {
                        if (!GlobalMemberValues.isStrEmpty(str_customerPagerNumber)) {
                                if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("pagernumber_yn",paramCusMer)){

                                    LinearLayout pagerLn = new LinearLayout(MainActivity.mContext);
                                    pagerLn.setLayoutParams(matchParentParams);
                                    pagerLn.setOrientation(LinearLayout.HORIZONTAL);

                                    TextView pagerTv1 = new TextView(MainActivity.mContext);
                                    pagerTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                    pagerTv1.setText("Pager No.");
                                    pagerTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(pagerTv1);
                                    pagerTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                    pagerLn.addView(pagerTv1);

                                    String pagenoTxt = GlobalMemberValues.getPagerNumberHeaderTxt() + str_customerPagerNumber + "\n";

                                    TextView pagerTv2 = new TextView(MainActivity.mContext);
                                    pagerTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                    pagerTv2.setText(" : " + pagenoTxt);
                                    pagerTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(pagerTv2);
                                    pagerTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                    pagerLn.addView(pagerTv2);

                                    printingLn.addView(pagerLn);
                                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                                    // ------------------------------------------------------------------------------------------------------------------------------
                                }
                        }
                    }
                }

                // Restaurant 관련
//                if ((globalMemberValues.getPOSType().toUpperCase() == "R" || globalMemberValues.getPOSType().toUpperCase().equals("R"))
//                        && GlobalMemberValues.now_saletypeisrestaurant) {
//                    LinearLayout tablepeoplecntLn = new LinearLayout(MainActivity.mContext);
//                    tablepeoplecntLn.setLayoutParams(matchParentParams);
//                    tablepeoplecntLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                    TextView tablepeoplecntTv1 = new TextView(MainActivity.mContext);
//                    tablepeoplecntTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                    tablepeoplecntTv1.setText("Customer Count");
//                    tablepeoplecntTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                    GlobalMemberValues.setTextStyleOnClover(tablepeoplecntTv1);
//                    tablepeoplecntTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                    tablepeoplecntLn.addView(tablepeoplecntTv1);
//
//                    TextView tablepeoplecntTv2 = new TextView(MainActivity.mContext);
//                    tablepeoplecntTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                    tablepeoplecntTv2.setText(" : " + str_restaurant_tablepeoplecnt);
//                    tablepeoplecntTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                    GlobalMemberValues.setTextStyleOnClover(tablepeoplecntTv2);
//                    tablepeoplecntTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
//                    tablepeoplecntLn.addView(tablepeoplecntTv2);
//
//                    printingLn.addView(tablepeoplecntLn);
//                    // --------------------------------------------------------------------------------------------------------------------------------
//
//                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
//                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
//                    // ---------------------------------------------------------------------------------------------------------------------------------
//                }

                if (!str_checkcompany.isEmpty()){
                    LinearLayout checkcompany_Ln = new LinearLayout(MainActivity.mContext);
                    checkcompany_Ln.setLayoutParams(matchParentParams);
                    checkcompany_Ln.setOrientation(LinearLayout.HORIZONTAL);

                    TextView checkcompanyLeftTv = new TextView(MainActivity.mContext);
                    checkcompanyLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    checkcompanyLeftTv.setText("["+str_checkcompany+"]");
                    checkcompanyLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(checkcompanyLeftTv);
                    checkcompanyLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    checkcompany_Ln.addView(checkcompanyLeftTv);

                    printingLn.addView(checkcompany_Ln);

                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                }


                if (GlobalMemberValues.isOrderNumberSectionViewOn()) {
                    if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("ordernumber_yn",paramCusMer)){

                        if (str_ordernumber_alignment_yn.equals("T")) {
                            // 주문번호 ------------------------------------------------------------------------------------------------------------------------

                            float textsize = GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER; // normal size
                            int layout_size = 32;
                            String str_station_number_size = GlobalMemberValues.getValueOnReceiptSetting("ordernumber_type",receiptType);
                            switch (str_station_number_size){
                                case "1" :  // small
                                    textsize = textsize - 2;
                                    layout_size = layout_size -2;
                                    break;
                                case "2":   // medium
                                    break;
                                case "3":   // large
                                    textsize = textsize + 4;
                                    layout_size = layout_size + 4;
                                    break;
                                case "4":   // x large
                                    textsize = textsize + 8;
                                    layout_size = layout_size + 8;
                                    break;
                                case "5":   // xx large
                                    textsize = textsize + 12;
                                    layout_size = layout_size + 12;
                                    break;
                            }


                            final LinearLayout.LayoutParams temp_matchParentParams
                                    = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, layout_size);
                            temp_matchParentParams.setMargins(0, 0, 0, 0);
                            LinearLayout salesCodeLn = new LinearLayout(MainActivity.mContext);
                            salesCodeLn.setLayoutParams(temp_matchParentParams);
                            salesCodeLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView customerOrderNumLeftTv = new TextView(MainActivity.mContext);
                            customerOrderNumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            customerOrderNumLeftTv.setText("Order No.");
                            customerOrderNumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                            GlobalMemberValues.setTextStyleOnClover(customerOrderNumLeftTv);
                            customerOrderNumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            salesCodeLn.addView(customerOrderNumLeftTv);

                            TextView customerOrderNumRightTv = new TextView(MainActivity.mContext);
                            customerOrderNumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            customerOrderNumRightTv.setText(" : " + str_customerOrderNumber);
                            customerOrderNumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                            GlobalMemberValues.setTextStyleOnClover(customerOrderNumRightTv);
                            customerOrderNumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            salesCodeLn.addView(customerOrderNumRightTv);

                            printingLn.addView(salesCodeLn);
                        }

                        // --------------------------------------------------------------------------------------------------------------------------------

                    }

                    // 수령타입 -----------------------------------------------------------------------------------------------------------------------
                    LinearLayout receivingTypeLn = new LinearLayout(MainActivity.mContext);
                    receivingTypeLn.setLayoutParams(matchParentParams);
                    receivingTypeLn.setOrientation(LinearLayout.HORIZONTAL);

                    String tempDeliveryTakeaway = "HERE";
                    if (!GlobalMemberValues.isStrEmpty(str_deliverytakeaway)) {
                        switch (str_deliverytakeaway) {
                            case "H" : {
                                tempDeliveryTakeaway = "HERE";
                                break;
                            }
                            case "T" : {
                                tempDeliveryTakeaway = "TO GO";
                                break;
                            }
                            case "D" : {
                                tempDeliveryTakeaway = "DELIVERY";
                                break;
                            }
                        }
                    }


                    if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("ordertype_yn",paramCusMer)){
                        if (str_ordertype_alignment_yn.equals("T")){
                            TextView receivingTypeLeftTv = new TextView(MainActivity.mContext);
                            receivingTypeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            receivingTypeLeftTv.setText("Pick Up Type");
                            receivingTypeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(receivingTypeLeftTv);
                            receivingTypeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            receivingTypeLn.addView(receivingTypeLeftTv);

                            TextView receivingTypeRightTv = new TextView(MainActivity.mContext);
                            receivingTypeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            receivingTypeRightTv.setText(" : " + tempDeliveryTakeaway);
                            receivingTypeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(receivingTypeRightTv);
                            receivingTypeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            receivingTypeLn.addView(receivingTypeRightTv);

                            printingLn.addView(receivingTypeLn);
                        }
                    }
                    // --------------------------------------------------------------------------------------------------------------------------------

                    if (GlobalMemberValues.mCustomerInfoShowYN) {

                        // 고객이름 -----------------------------------------------------------------------------------------------------------------------
                        if (GlobalMemberValues.mCustomerInfoShowYN) {
                            if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("guestinfo_yn",paramCusMer)){
                                if (!GlobalMemberValues.isStrEmpty(str_customername)) {

                                    LinearLayout customernameLn = new LinearLayout(MainActivity.mContext);
                                    customernameLn.setLayoutParams(matchParentParams);
                                    customernameLn.setOrientation(LinearLayout.HORIZONTAL);

                                    TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                                    customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                    customerNameLeftTv.setText("Customer Name");
                                    customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                                    customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                    customernameLn.addView(customerNameLeftTv);

                                    TextView customerNameRightTv = new TextView(MainActivity.mContext);
                                    customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                    customerNameRightTv.setText(" : " + str_customername);
                                    customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                                    customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                    customernameLn.addView(customerNameRightTv);

                                    printingLn.addView(customernameLn);
                                }
                                // --------------------------------------------------------------------------------------------------------------------------------

                                // 고객전화번호 -------------------------------------------------------------------------------------------------------------------
                                if (!GlobalMemberValues.isStrEmpty(str_customerphonenum)) {
                                    if (str_customerphonenum.contains("@")){

                                    } else {
                                        LinearLayout customerPhoneLn = new LinearLayout(MainActivity.mContext);
                                        customerPhoneLn.setLayoutParams(matchParentParams);
                                        customerPhoneLn.setOrientation(LinearLayout.HORIZONTAL);

                                        TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                                        customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);

                                        if (str_customerphonenum.contains("@")){
                                            customerNameLeftTv.setText("E-mail");
                                        } else {
                                            customerNameLeftTv.setText("Phone No.");
                                        }
                                        customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                                        customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                        customerPhoneLn.addView(customerNameLeftTv);

                                        TextView customerNameRightTv = new TextView(MainActivity.mContext);
                                        customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                        customerNameRightTv.setText(" : " + str_customerphonenum);
                                        customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                                        customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                        customerPhoneLn.addView(customerNameRightTv);

                                        printingLn.addView(customerPhoneLn);
                                    }

                                }
                                // --------------------------------------------------------------------------------------------------------------------------------

                                // 고객주소 ------------------------------------------------------------------------------------------------------------------------
                                if (!GlobalMemberValues.isStrEmpty(str_customeraddress)
                                        || !GlobalMemberValues.isStrEmpty(str_deliveryaddress)) {
//                                String customerAddressAll = "";
//                                customerAddressAll = GlobalMemberValues.getPrintTxtCenterAlignment(str_customeraddress, 44) + "\n";
//                                //titleText1 += str_customeraddress + "\n";
//                                String tempCustomerAddress[] = str_customeraddress.split("\n");
//                                customerAddressAll += GlobalMemberValues.getPrintTxtCenterAlignment2(tempCustomerAddress[0], 44) + "\n";
//                                if (tempCustomerAddress.length > 1) {
//                                    customerAddressAll += GlobalMemberValues.getPrintTxtCenterAlignment2(tempCustomerAddress[1], 44) + "\n";
//                                }
//                                if (tempCustomerAddress.length > 2) {
//                                    customerAddressAll += GlobalMemberValues.getPrintTxtCenterAlignment(tempCustomerAddress[2], 44) + "\n";
//                                }
//
//                                LinearLayout.LayoutParams matchParentParams_temp
//                                        = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
//                                matchParentParams_temp.setMargins(0, 0, 0, 0);
//
//                                LinearLayout customerAddrLn = new LinearLayout(MainActivity.mContext);
//                                customerAddrLn.setLayoutParams(matchParentParams_temp);
//                                customerAddrLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                                TextView customerAddrLeftTv = new TextView(MainActivity.mContext);
//                                customerAddrLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                                customerAddrLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                                customerAddrLeftTv.setText("Cust Address.");
//                                GlobalMemberValues.setTextStyleOnClover(customerAddrLeftTv);
//                                customerAddrLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                                customerAddrLn.addView(customerAddrLeftTv);
//
//                                TextView customerAddrTv = new TextView(MainActivity.mContext);
//                                customerAddrTv.setGravity(Gravity.CENTER);
//                                customerAddrTv.setText(customerAddressAll);
//                                customerAddrTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                                customerAddrTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.WRAP_CONTENT, 1.5f));
//                                GlobalMemberValues.setTextStyleOnClover(customerAddrTv);
//                                customerAddrLn.addView(customerAddrTv);

                                    // Address ------------------------------------------------------------------------------------------------------------
                                    TextView addressTv = new TextView(MainActivity.mContext);
                                    addressTv.setLayoutParams(matchParentParams);
                                    addressTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                                    addressTv.setText("<Address>");
                                    addressTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(addressTv);
                                    printingLn.addView(addressTv);
                                    // --------------------------------------------------------------------------------------------------------------------
                                    // Address Contents ------------------------------------------------------------------------------------------------------------
                                    TextView addresscontentsTv = new TextView(MainActivity.mContext);
                                    addresscontentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                    addresscontentsTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                                    if (!GlobalMemberValues.isStrEmpty(str_customeraddress)){
                                        addresscontentsTv.setText(str_customeraddress);
                                    } else {
                                        addresscontentsTv.setText(str_deliveryaddress);
                                    }
                                    addresscontentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(addresscontentsTv);
                                    printingLn.addView(addresscontentsTv);
                                    // --------------------------------------------------------------------------------------------------------------------

//                                printingLn.addView(customerAddrLn);
                                }
                                // --------------------------------------------------------------------------------------------------------------------------------

                                // 하단에서 가져욤.
                                // 220913
                                // EmpName Online Order 가 아닐시 조건 추가.
                                if (!str_employeename.equals("Online Order")){
                                    if (!GlobalMemberValues.isStrEmpty(str_customermemo)) {
                                        if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("ordermemo_yn",paramCusMer)){
                                            // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
//                                        printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                                            // ---------------------------------------------------------------------------------------------------------------------------------

                                            TextView noteTv = new TextView(MainActivity.mContext);
                                            noteTv.setLayoutParams(matchParentParams);
                                            noteTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                                            noteTv.setText("[Note]");
                                            noteTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                            GlobalMemberValues.setTextStyleOnClover(noteTv);
                                            printingLn.addView(noteTv);

                                            TextView memotextTv = new TextView(MainActivity.mContext);
                                            memotextTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                            memotextTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                                            memotextTv.setText(str_customermemo);
                                            memotextTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                            GlobalMemberValues.setTextStyleOnClover(memotextTv);
                                            printingLn.addView(memotextTv);
                                        }
                                    }
                                }
                                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                                // ---------------------------------------------------------------------------------------------------------------------------------
                            }
                        }
                    } else {
                        // 220913
                        // EmpName Online Order 가 아닐시 조건 추가.
                        if (!str_employeename.equals("Online Order")){
                            if (!GlobalMemberValues.isStrEmpty(str_customermemo)) {
                                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
//                                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                                // ---------------------------------------------------------------------------------------------------------------------------------

                                TextView noteTv = new TextView(MainActivity.mContext);
                                noteTv.setLayoutParams(matchParentParams);
                                noteTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                                noteTv.setText("[Note]");
                                noteTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(noteTv);
                                printingLn.addView(noteTv);

                                TextView memotextTv = new TextView(MainActivity.mContext);
                                memotextTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                memotextTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                                memotextTv.setText(str_customermemo);
                                memotextTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(memotextTv);
                                printingLn.addView(memotextTv);

                                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                            }
                        }

                    }
                }





                // 07202023
                // split 결제일 경우 bill_list 번호 (추후 구분, 검색하기 위해)
                if (!GlobalMemberValues.isStrEmpty(str_bill_list_idx)) {
                    LinearLayout splitpayLn = new LinearLayout(MainActivity.mContext);
                    splitpayLn.setLayoutParams(matchParentParams);
                    splitpayLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView splitpayTv1 = new TextView(MainActivity.mContext);
                    splitpayTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    splitpayTv1.setText("Split Pay No.");
                    splitpayTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(splitpayTv1);
                    splitpayTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    splitpayLn.addView(splitpayTv1);

                    TextView splitpayTv2 = new TextView(MainActivity.mContext);
                    splitpayTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    splitpayTv2.setText(" : " + str_bill_list_idx);
                    splitpayTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(splitpayTv2);
                    splitpayTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    splitpayLn.addView(splitpayTv2);

                    printingLn.addView(splitpayLn);
                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ------------------------------------------------------------------------------------------------------------------------------
                }








                if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("cashier_yn",paramCusMer) && GlobalMemberValues.isPrintingEmployeeInfoOnReceipt()){

                    // 직원정보 ------------------------------------------------------------------------------------------------------------------------
                    // LinearLayout
                    LinearLayout employeeinfoLn = new LinearLayout(MainActivity.mContext);
                    employeeinfoLn.setLayoutParams(matchParentParams);
                    employeeinfoLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView employeeInfoLeftTv = new TextView(MainActivity.mContext);
                    employeeInfoLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    employeeInfoLeftTv.setText("Employee Name");
                    employeeInfoLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(employeeInfoLeftTv);
                    employeeInfoLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    employeeinfoLn.addView(employeeInfoLeftTv);

                    TextView employeeInfoRightTv = new TextView(MainActivity.mContext);
                    employeeInfoRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    employeeInfoRightTv.setText(" : " + str_employeename);
                    employeeInfoRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(employeeInfoRightTv);
                    employeeInfoRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    employeeinfoLn.addView(employeeInfoRightTv);

                    printingLn.addView(employeeinfoLn);
                    // --------------------------------------------------------------------------------------------------------------------------------
                }


                if (GlobalMemberValues.isPrintingMenuListOnReceipt() || str_reprintyn == "Y" || str_reprintyn.equals("Y")){
                    // Receipt NO. --------------------------------------------------------------------------------------------------------------------
                    // LinearLayout
                    LinearLayout receiptnoLn = new LinearLayout(MainActivity.mContext);
                    receiptnoLn.setLayoutParams(matchParentParams);
                    receiptnoLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView receiptNoLeftTv = new TextView(MainActivity.mContext);
                    receiptNoLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    receiptNoLeftTv.setText("Receipt No.");
                    receiptNoLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(receiptNoLeftTv);
                    receiptNoLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    receiptnoLn.addView(receiptNoLeftTv);

                    TextView receiptNoRightTv = new TextView(MainActivity.mContext);
                    receiptNoRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    receiptNoRightTv.setText(" : " + str_receiptno);
                    receiptNoRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, (GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER - 4));
                    GlobalMemberValues.setTextStyleOnClover(receiptNoRightTv);
                    receiptNoRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    receiptnoLn.addView(receiptNoRightTv);

                    printingLn.addView(receiptnoLn);
                    // --------------------------------------------------------------------------------------------------------------------------------
                }


                // Sale Date ----------------------------------------------------------------------------------------------------------------------
                // LinearLayout
                LinearLayout saledateLn = new LinearLayout(MainActivity.mContext);
                saledateLn.setLayoutParams(matchParentParams);
                saledateLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView saleDateLeftTv = new TextView(MainActivity.mContext);
                saleDateLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                saleDateLeftTv.setText("Sale Date");
                saleDateLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(saleDateLeftTv);
                saleDateLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                saledateLn.addView(saleDateLeftTv);

                TextView saleDateRightTv = new TextView(MainActivity.mContext);
                saleDateRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                saleDateRightTv.setText(" : " + str_saledate + " " + str_saletime);
                saleDateRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(saleDateRightTv);
                saleDateRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                saledateLn.addView(saleDateRightTv);

                printingLn.addView(saledateLn);
                // --------------------------------------------------------------------------------------------------------------------------------

                /**
                 // Sale Time ----------------------------------------------------------------------------------------------------------------------
                 // LinearLayout
                 LinearLayout saletimeLn = new LinearLayout(MainActivity.mContext);
                 saletimeLn.setLayoutParams(matchParentParams);
                 saletimeLn.setOrientation(LinearLayout.HORIZONTAL);

                 TextView saleTimeLeftTv = new TextView(MainActivity.mContext);
                 saleTimeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 saleTimeLeftTv.setText("Sale Time");
                 saleTimeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                 GlobalMemberValues.setTextStyleOnClover(saleTimeLeftTv);
                 saleTimeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                 saletimeLn.addView(saleTimeLeftTv);

                 TextView saleTimeRightTv = new TextView(MainActivity.mContext);
                 saleTimeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 saleTimeRightTv.setText(" : " + str_saletime);
                 saleTimeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                 GlobalMemberValues.setTextStyleOnClover(saleTimeRightTv);
                 saleTimeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                 saletimeLn.addView(saleTimeRightTv);

                 printingLn.addView(saletimeLn);
                 // --------------------------------------------------------------------------------------------------------------------------------
                 **/

//                // 점선 ----------------------------------------------------------------------------------------------------------------------------
//                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
//                // ---------------------------------------------------------------------------------------------------------------------------------

                /** 세일아이템 관련 ***************************************************************************************************************/
                /**
                 LinearLayout saleitemlistLn = new LinearLayout(MainActivity.mContext);
                 saleitemlistLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                 saleitemlistLn.setOrientation(LinearLayout.HORIZONTAL);

                 // 세일아이템 타이틀 ---------------------------------------------------------------------------------------------------------------
                 TextView saleItemTv1 = new TextView(MainActivity.mContext);
                 saleItemTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 saleItemTv1.setText("Item Name");
                 saleItemTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv1);
                 saleItemTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv1);

                 TextView saleItemTv2 = new TextView(MainActivity.mContext);
                 saleItemTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                 saleItemTv2.setText("Qty");
                 saleItemTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv2);
                 saleItemTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv2);

                 TextView saleItemTv3 = new TextView(MainActivity.mContext);
                 saleItemTv3.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                 saleItemTv3.setText("Price");
                 saleItemTv3.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv3);
                 saleItemTv3.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv3);

                 TextView saleItemTv4 = new TextView(MainActivity.mContext);
                 saleItemTv4.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                 saleItemTv4.setText("Amount");
                 saleItemTv4.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv4);
                 saleItemTv4.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv4);

                 printingLn.addView(saleitemlistLn);
                 // --------------------------------------------------------------------------------------------------------------------------------

                 // 점선 ----------------------------------------------------------------------------------------------------------------------------
                 printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                 // ---------------------------------------------------------------------------------------------------------------------------------

                 **/
                String[] temp_billcartidx_arr = null;
                if (!str_billcartidx.isEmpty()){
                    if (!str_billtype.isEmpty() && str_billtype.equals("0")){
                        temp_billcartidx_arr = str_billcartidx.split(",");

                        if (jsonArray_saleitemlist.length() != 0) {
                            ArrayList<JSONObject> tempArr = new ArrayList<JSONObject>();
                            for (int ii = 0; ii < jsonArray_saleitemlist.length() ; ii++){
                                try {
                                    for (int iii = 0; iii < temp_billcartidx_arr.length; iii++){

                                        if (temp_billcartidx_arr[iii].equals(jsonArray_saleitemlist.getJSONObject(ii).getString("billcartidx"))){
                                            // 같은 값이 있다?.. 그럼 출력 ㅇㅇ
                                            tempArr.add(jsonArray_saleitemlist.getJSONObject(ii));
                                        } else {
                                            // 같은 값이 없으면? 추가 안함.
                                        }

                                    }
                                } catch (JSONException e) {
                                    e.printStackTrace();
                                }
                            }
                            jsonArray_saleitemlist = new JSONArray(tempArr);
                        }
                    }
                }
                boolean b_commonGratuity = false;
                String str_gratuity_amount = "0.00";
                // common gratuity 순서 마지막으로 보내기.
                if (jsonArray_saleitemlist.length() != 0){
                    JSONArray tempArr = new JSONArray();
                    int cnt = jsonArray_saleitemlist.length();
                    boolean b_useCommonGratuity = false;
                    JSONArray jsonArray_temp_commongratuity = new JSONArray();
                    JSONObject jsonObject_temp_commongratuity = new JSONObject();
                    for (int i = 0; i < cnt; i++){
                        // common gratuity 항목을 뺀 array 만들고.
                        try {
                            if (jsonArray_saleitemlist.getJSONObject(i).getString("itemname").equals(GlobalMemberValues.mCommonGratuityName)){
                                b_useCommonGratuity = true;
                                jsonObject_temp_commongratuity = jsonArray_saleitemlist.getJSONObject(i);
                                jsonArray_temp_commongratuity.put(jsonObject_temp_commongratuity);
                            } else {
                                tempArr.put(jsonArray_saleitemlist.getJSONObject(i));
                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                    // common gratuity 항목을 뺐다면 마지막에 추가하기.
                    if (b_useCommonGratuity){
//                        tempArr.put(jsonObject_temp_commongratuity);
                        b_commonGratuity = true;
                        double temp_d = 0.00;
                        for (int z = 0 ; jsonArray_temp_commongratuity.length() > z ; z++){
                            try {
                                String temp_str = jsonArray_temp_commongratuity.getJSONObject(z).getString("itemprice");
                                temp_d = temp_d + GlobalMemberValues.getDoubleAtString(temp_str);

                            } catch (JSONException e) {
                                e.printStackTrace();
                            }
                        }
                        str_gratuity_amount = GlobalMemberValues.setDoubleToString(temp_d,2);
//                        try {
//                            str_gratuity_amount = jsonObject_temp_commongratuity.getString("itemprice");
//                        } catch (JSONException e) {
//                            e.printStackTrace();
//                        }
                    }
                    jsonArray_saleitemlist = tempArr;
                }
                // common gratuity
                // Common Gratuity

                // 06212023
                // itemcartidx 0 == 현금할인 및 카드 추가요금 아이템 표시 삭제
                boolean b_json_have_cashdiscount_cartextra = false;
                String str_cash_card_discount_amount = "";
                if (jsonArray_saleitemlist.length() != 0){
                    JSONArray tempArr = new JSONArray();
                    int cnt = jsonArray_saleitemlist.length();
                    JSONArray jsonArray_temp_commongratuity = new JSONArray();
                    JSONObject jsonObject_temp_commongratuity = new JSONObject();
                    for (int i = 0; i < cnt; i++){
                        // common gratuity 항목을 뺀 array 만들고.
                        try {
                            if (!GlobalMemberValues.isStrEmpty(GlobalMemberValues.getAddPayName()) && GlobalMemberValues.getAddPayName().equals(jsonArray_saleitemlist.getJSONObject(i).getString("itemname"))){
                                str_cash_card_discount_amount = jsonArray_saleitemlist.getJSONObject(i).getString("itemamount");
                            } else {
                                tempArr.put(jsonArray_saleitemlist.getJSONObject(i));
                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                    jsonArray_saleitemlist = tempArr;
                }
                // 06212023
                // itemcartidx 0 == 현금할인 및 카드 추가요금 아이템 표시 삭제

                // setting menulist on off
                if (GlobalMemberValues.isPrintingMenuListOnReceipt() || str_reprintyn == "Y" || str_reprintyn.equals("Y")){
                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                    if (jsonArray_saleitemlist.length() != 0) {
                        jsonArray_saleitemlist = GlobalMemberValues.edit_equl_array_item_merge(jsonArray_saleitemlist);
                        int cnt = jsonArray_saleitemlist.length();
                        for (int i = 0; i < cnt; i++) {
                            try {
                                JSONObject dic_item = jsonArray_saleitemlist.getJSONObject(i);
                                str_itemqty = dic_item.getString("itemqty");
                                str_itemname = dic_item.getString("itemname");
                                str_itemamount = dic_item.getString("itemamount");
                                str_itemprice = dic_item.getString("itemprice");

                                if (dic_item.toString().contains("itemidx")) {
                                    str_itemidx = dic_item.getString("itemidx");
                                }

//                            str_itemdcextrastr = dic_item.getString("itemdcextrastr");
                                if (dic_item.toString().contains("itemdcextrastr")) {
                                    str_itemdcextrastr = dic_item.getString("itemdcextrastr");
                                }

//                            str_itemtaxexempt = dic_item.getString("itemtaxexempt");
                                if (dic_item.toString().contains("itemtaxexempt")) {
                                    str_itemtaxexempt = dic_item.getString("itemtaxexempt");
                                }

                                if (dic_item.toString().contains("optiontxt")) {
                                    str_optiontxt = dic_item.getString("optiontxt");
                                }
                                if (dic_item.toString().contains("optionprice")) {
                                    str_optionprice = dic_item.getString("optionprice");
                                }
                                if (dic_item.toString().contains("additionaltxt1")) {
                                    str_additionaltxt1 = dic_item.getString("additionaltxt1");
                                }
                                if (dic_item.toString().contains("additionalprice1")) {
                                    str_additionalprice1 = dic_item.getString("additionalprice1");
                                }
                                if (dic_item.toString().contains("additionaltxt2")) {
                                    str_additionaltxt2 = dic_item.getString("additionaltxt2");
                                }
                                if (dic_item.toString().contains("additionalprice2")) {
                                    str_additionalprice2 = dic_item.getString("additionalprice2");
                                }
                                if (dic_item.toString().contains("kitchenmemo")) {
                                    str_kitchenmemo = dic_item.getString("kitchenmemo");
                                }
                                if (dic_item.toString().contains("soldoutmemo")) {
                                    str_soldoutmemo = dic_item.getString("soldoutmemo");
                                }
                                if (dic_item.toString().contains("itemdcextraprice")) {
                                    str_each_discount_extra_price = dic_item.getString("itemdcextraprice");
                                }
                                if (dic_item.toString().contains("itemCategoryName")) {
                                    str_itemCategoryName = dic_item.getString("itemCategoryName");
                                }
                                if (dic_item.toString().contains("itemCategoryName2")) {
                                    str_itemCategoryName2 = dic_item.getString("itemCategoryName2");
                                }
                                if (dic_item.toString().contains("togodelitype")){
                                    str_togo_delivery = dic_item.getString("togodelitype");
                                }


                            } catch (JSONException e) {
                                e.printStackTrace();
                            }
                            if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("displayitemline_yn",paramCusMer)){
                                if (i != 0){
                                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                                }
                            }

                            LinearLayout saleitemlistLn2 = new LinearLayout(MainActivity.mContext);
                            saleitemlistLn2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                            saleitemlistLn2.setOrientation(LinearLayout.HORIZONTAL);

                            if (!GlobalMemberValues.isStrEmpty(str_itemtaxexempt) && str_itemtaxexempt.equals("Y")) {
                                if (GlobalMemberValues.mUseTaxExemptTxtYN) {
                                    str_itemname = "[T/E]" + str_itemname;
                                }
                            } else {
                                str_itemname = str_itemname;
                            }



                            if (str_itemname.contains("========")){
                                TextView dotLineTv1 = new TextView(MainActivity.mContext);
                                dotLineTv1.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                                dotLineTv1.setGravity(Gravity.CENTER_HORIZONTAL|Gravity.TOP);
                                //dotLineTv1.setText("- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
                                dotLineTv1.setText("======================================================================================");
                                dotLineTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                printingLn.addView(dotLineTv1);

                            } else if (str_itemname.equals(GlobalMemberValues.mCommonGratuityName)){
                            } else {
                                // 세일아이템 타이틀 ---------------------------------------------------------------------------------------------------------------
                                // 기존 순서대로... (item name      qty      price      amount)
                                /**
                                 TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
                                 saleItemTvContents1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                 saleItemTvContents1.setText(Payment_stringBackSpace_Exch(16, str_itemname));
                                 saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                 GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
                                 saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER));
                                 saleitemlistLn2.addView(saleItemTvContents1);

                                 TextView saleItemTvContents2 = new TextView(MainActivity.mContext);
                                 saleItemTvContents2.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                                 saleItemTvContents2.setText(str_itemqty);
                                 saleItemTvContents2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                 GlobalMemberValues.setTextStyleOnClover(saleItemTvContents2);
                                 saleItemTvContents2.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                                 saleitemlistLn2.addView(saleItemTvContents2);

                                 TextView saleItemTvContents3 = new TextView(MainActivity.mContext);
                                 saleItemTvContents3.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                 saleItemTvContents3.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(str_itemprice));
                                 saleItemTvContents3.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                 GlobalMemberValues.setTextStyleOnClover(saleItemTvContents3);
                                 saleItemTvContents3.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER));
                                 saleitemlistLn2.addView(saleItemTvContents3);

                                 if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                                 str_itemamount = combineStringForVoidPrint(str_itemamount);
                                 }

                                 TextView saleItemTvContents4 = new TextView(MainActivity.mContext);
                                 saleItemTvContents4.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                 saleItemTvContents4.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(str_itemamount));
                                 saleItemTvContents4.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                 GlobalMemberValues.setTextStyleOnClover(saleItemTvContents4);
                                 saleItemTvContents4.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                                 saleitemlistLn2.addView(saleItemTvContents4);
                                 **/


//                            if (GlobalMemberValues.isCategoryPrinting()){
                                if (GlobalMemberValues.isCategoryPrinting()){
                                    if (str_itemCategoryName.equals(str_itemCategoryName_temp)) {

                                    } else {
                                        TextView tv_itemCategoryName = new TextView(MainActivity.mContext);
                                        tv_itemCategoryName.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                                        tv_itemCategoryName.setGravity(Gravity.CENTER);
                                        tv_itemCategoryName.setText(str_itemCategoryName);
                                        tv_itemCategoryName.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(tv_itemCategoryName);
                                        printingLn.addView(tv_itemCategoryName);
                                        str_itemCategoryName_temp = str_itemCategoryName;

                                        if (!str_itemCategoryName2.isEmpty()){
                                            TextView tv_itemCategoryName2 = new TextView(MainActivity.mContext);
                                            tv_itemCategoryName2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 25));
                                            tv_itemCategoryName2.setGravity(Gravity.CENTER);
                                            tv_itemCategoryName2.setText(str_itemCategoryName2);
                                            tv_itemCategoryName2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER - 5);
                                            GlobalMemberValues.setTextStyleOnClover(tv_itemCategoryName2);
                                            printingLn.addView(tv_itemCategoryName2);
                                        }
                                    }
                                }

                                // customer copy, merchant copy 에서 나오지 않도록 처리.
                                // 1123
//                            if (!str_togo_delivery.isEmpty()){
                                if (false){
                                    switch (str_togo_delivery) {
                                        case "T":
                                            str_togo_delivery = "TO GO";
                                            break;
                                        case "D":
                                            str_togo_delivery = "DELIVERY";
                                            break;
                                        case "H":
                                            str_togo_delivery = "HERE";
                                            break;
                                    }
                                    TextView tv_togo_delivery = new TextView(MainActivity.mContext);
                                    tv_togo_delivery.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                                    tv_togo_delivery.setGravity(Gravity.LEFT);
                                    tv_togo_delivery.setText("\t"+str_togo_delivery);
                                    tv_togo_delivery.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(tv_togo_delivery);
                                    printingLn.addView(tv_togo_delivery);
                                }


                                int tempHeight = 45;
//                        if (str_itemname.length() > 30 || GlobalMemberValues.getSizeToString(str_itemname) > 30) {
//                            tempHeight = (tempHeight * 2) + 4;
//                        }
                                for (int z = 23; z <= GlobalMemberValues.getSizeToString(str_itemname) ; z += 22){
                                    tempHeight += 45;
                                }

                                // 새 순서대로... (qty           item name              amount)
                                if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("quantitysumarize_yn",paramCusMer)){
                                    TextView saleItemTvContents2 = new TextView(MainActivity.mContext);
                                    saleItemTvContents2.setGravity(Gravity.TOP | Gravity.LEFT);
                                    saleItemTvContents2.setText(str_itemqty);
                                    saleItemTvContents2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(saleItemTvContents2);
                                    saleItemTvContents2.setLayoutParams(new LinearLayout.LayoutParams(0, tempHeight, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                                    saleitemlistLn2.addView(saleItemTvContents2);
                                }


                                TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
                                saleItemTvContents1.setGravity(Gravity.TOP | Gravity.LEFT);
                                //saleItemTvContents1.setText(Payment_stringBackSpace_Exch(30, str_itemname));
//                        saleItemTvContents1.setText(designTextForItem(str_itemname, 30));

//                                str_itemname = str_itemname.replace(" ", "\u00A0");
                                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                                    saleItemTvContents1.setBreakStrategy(Layout.BREAK_STRATEGY_BALANCED);
                                }


                                saleItemTvContents1.setText(str_itemname);
                                saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
                                saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, tempHeight, (GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER + GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER - 0.1f)));
                                saleitemlistLn2.addView(saleItemTvContents1);

                                if (!GlobalMemberValues.isStrEmpty(str_optiontxt) ||
                                        !GlobalMemberValues.isStrEmpty(str_additionaltxt1) || !GlobalMemberValues.isStrEmpty(str_additionaltxt2)) {
                                    double tempItemAmount = GlobalMemberValues.getDoubleAtString(str_itemamount);
                                    if (str_employeename.equals("Online Order")){
                                        // online order
                                        double tempOptionPriceSum = GlobalMemberValues.getDoubleAtString(str_optionprice)
                                                + GlobalMemberValues.getDoubleAtString(str_additionalprice1) + GlobalMemberValues.getDoubleAtString(str_additionalprice2);
                                        if (str_itemqty.equals("1")){
                                            tempItemAmount += tempOptionPriceSum;
                                        } else {
                                            tempItemAmount += tempOptionPriceSum * Integer.parseInt(str_itemqty);
                                        }
                                        // jihun 추가 end

                                        str_itemamount = tempItemAmount + "";
                                    } else {
                                        if (GlobalMemberValues.MODIFIER_PRICEVIEW) {
                                            double tempOptionPriceSum = GlobalMemberValues.getDoubleAtString(str_optionprice)
                                                    + GlobalMemberValues.getDoubleAtString(str_additionalprice1) + GlobalMemberValues.getDoubleAtString(str_additionalprice2);
//                                tempItemAmount -= tempOptionPriceSum; 원문.
                                            // jihun 추가 start
                                            if (str_itemqty.equals("1")){
                                                tempItemAmount -= tempOptionPriceSum;
                                            } else {
                                                tempItemAmount -= tempOptionPriceSum * Integer.parseInt(str_itemqty);
                                            }
                                            // jihun 추가 end

                                            str_itemamount = tempItemAmount + "";
                                        }
                                    }

                                }

                                if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                                    str_itemamount = combineStringForVoidPrint(str_itemamount);
                                }

                                TextView saleItemTvContents4 = new TextView(MainActivity.mContext);
                                saleItemTvContents4.setGravity(Gravity.TOP | Gravity.RIGHT);

                                // 06212023 b_json_have_cashdiscount_cartextra
                                String getItemPriceTemp = GlobalMemberValues.getItemPriceRateOnReceipt(str_itemamount);
                                if (b_json_have_cashdiscount_cartextra) {
                                    if (getItemPriceTemp.equals("NOSHOW")) {
                                        saleItemTvContents4.setText("");
                                    } else {
                                        saleItemTvContents4.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(getItemPriceTemp));
                                    }
                                } else {
                                    saleItemTvContents4.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(str_itemamount));
                                }

                                saleItemTvContents4.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(saleItemTvContents4);
                                saleItemTvContents4.setLayoutParams(new LinearLayout.LayoutParams(0, tempHeight, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                                saleitemlistLn2.addView(saleItemTvContents4);

                                // str_employeename == Online Order 시
                                if (!GlobalMemberValues.isShowPriceOnMobile(str_itemidx)){
                                    saleItemTvContents4.setVisibility(View.INVISIBLE);
                                }

                                // --------------------------------------------------------------------------------------------------------------------------------

                                printingLn.addView(saleitemlistLn2);

                                // Modifier -------------------------------------------------------------------------------------------------------------------------
                                boolean tempIsModifierShow = false;
                                if (GlobalMemberValues.isModifierPrintYN()) {
                                    if (!GlobalMemberValues.isStrEmpty(str_optiontxt) ||
                                            !GlobalMemberValues.isStrEmpty(str_additionaltxt1) || !GlobalMemberValues.isStrEmpty(str_additionaltxt2)) {

                                        if (str_optiontxt.contains("-J-")){
                                            str_optiontxt = str_optiontxt.replace("-J-","\n");
                                        }
                                        if (str_additionaltxt1.contains("-J-")){
                                            str_additionaltxt1 = str_additionaltxt1.replace("-J-","\n");
                                        }
                                        if (str_additionaltxt2.contains("-J-")){
                                            str_additionaltxt2 = str_additionaltxt2.replace("-J-","\n");
                                        }

                                        tempIsModifierShow = true;

                                        boolean is_onlineOrder = false;
                                        if (str_employeename.equals("Online Order")){
                                            is_onlineOrder = true;
                                        }

                                        if (!GlobalMemberValues.isStrEmpty(str_optiontxt)) {
                                            /**
                                             str_optiontxt = "" + GlobalMemberValues.getModifierTxt2(str_itemqty, str_optiontxt, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                             TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                             optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                             optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                             optionmodifierTv.setText(str_optiontxt);
                                             optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                             GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                             printingLn.addView(optionmodifierTv);
                                             **/
                                            String minus = "";
                                            if (paramPrintingType.equals("void")||paramPrintingType.equals("return")) minus = "-";
                                            GlobalMemberValues.addModifierValueInLn(printingLn, str_itemqty, str_optiontxt, minus + str_optionprice, b_json_have_cashdiscount_cartextra, is_onlineOrder);

                                        }
                                        if (!GlobalMemberValues.isStrEmpty(str_additionaltxt1)) {
                                            /**
                                             str_additionaltxt1 += GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
                                             "[Add Ingredients]\n" + GlobalMemberValues.getModifierTxt2(str_itemqty, str_additionaltxt1, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                             TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                             optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                             optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                             optionmodifierTv.setText(str_additionaltxt1);
                                             optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                             GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                             printingLn.addView(optionmodifierTv);
                                             **/
                                            String minus = "";
                                            if (paramPrintingType.equals("void")||paramPrintingType.equals("return")) minus = "-";
                                            GlobalMemberValues.addModifierValueInLn(printingLn, str_itemqty, str_additionaltxt1, minus + str_additionalprice1, b_json_have_cashdiscount_cartextra, is_onlineOrder);
                                        }
                                        if (!GlobalMemberValues.isStrEmpty(str_additionaltxt2)) {
                                            /**
                                             str_additionaltxt2 += GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
                                             "[General Modifier]\n" + GlobalMemberValues.getModifierTxt2(str_itemqty, str_additionaltxt2, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                             TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                             optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                             optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                             optionmodifierTv.setText(str_additionaltxt2);
                                             optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                             GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                             printingLn.addView(optionmodifierTv);
                                             **/
                                            String minus = "";
                                            if (paramPrintingType.equals("void")||paramPrintingType.equals("return")) minus = "-";
                                            GlobalMemberValues.addModifierValueInLn(printingLn, str_itemqty, str_additionaltxt2, minus + str_additionalprice2, b_json_have_cashdiscount_cartextra, is_onlineOrder);
                                        }
                                    }
                                }
                                // --------------------------------------------------------------------------------------------------------------------------------

                                // Kitchen Memo -------------------------------------------------------------------------------------------------------------------
                                if (!GlobalMemberValues.isStrEmpty(str_kitchenmemo) && !str_kitchenmemo.equals("nokitchenmemo")) {
                                    if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("itemmemo_yn",paramCusMer)){
                                        // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                        printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 8));
                                        // ---------------------------------------------------------------------------------------------------------------------------------

                                        int i_kitchenmemo_height = 34;
                                        /* 220525 주석함.
//                                        str_optiontxt = GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
//                                                "   [Kitchen Memo]\n" + GlobalMemberValues.getModifierTxt2(str_itemqty, str_kitchenmemo, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);
                                        str_optiontxt = "   [Kitchen Memo]\n" + str_kitchenmemo;
//                            for (int z = 25; z <= GlobalMemberValues.getSizeToString(str_optiontxt) ; z += 24){
//                                i_kitchenmemo_height += 34;
//                            }

                                        for (int z = 25; z <= GlobalMemberValues.getSizeToString(str_optiontxt) ; z += 24){
                                            i_kitchenmemo_height += 38;
                                        }

                                        if (i_kitchenmemo_height/35 < GlobalMemberValues.countChar(str_optiontxt, '\n')){
                                            i_kitchenmemo_height = 40 * GlobalMemberValues.countChar(str_optiontxt, '\n');
                                        }
                                        */


                                        for (int z = 25; z <= GlobalMemberValues.getSizeToString(str_kitchenmemo) ; z += 24){
                                            i_kitchenmemo_height += 38;
                                        }

                                        if (i_kitchenmemo_height/35 < GlobalMemberValues.countChar(str_kitchenmemo, '\n')){
                                            i_kitchenmemo_height = 50 * (GlobalMemberValues.countChar(str_kitchenmemo, '\n') + 1);
                                        } else {
                                            i_kitchenmemo_height = i_kitchenmemo_height + 50;
                                        }
                                        str_optiontxt = "[Kitchen Memo]\n" + str_kitchenmemo;


                                        TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                        optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, i_kitchenmemo_height));
                                        optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                                            optionmodifierTv.setBreakStrategy(Layout.BREAK_STRATEGY_SIMPLE);
                                        }
                                        optionmodifierTv.setText(str_optiontxt);
                                        optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                        printingLn.addView(optionmodifierTv);
                                    }


//                            str_optiontxt = GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
//                                    "   [Kitchen Memo]\n" + GlobalMemberValues.getModifierTxt2(str_itemqty, str_kitchenmemo, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);
//
//                            TextView optionmodifierTv = new TextView(MainActivity.mContext);
//                            optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
//                            optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
//                            optionmodifierTv.setText(str_optiontxt);
//                            optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                            GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);
//
//                            printingLn.addView(optionmodifierTv);
                                }
                                // --------------------------------------------------------------------------------------------------------------------------------
                                // Kitchen Memo -------------------------------------------------------------------------------------------------------------------
                                if (!GlobalMemberValues.isStrEmpty(str_soldoutmemo) && !str_soldoutmemo.equals("") && !str_soldoutmemo.equals("undefined")) {
                                    // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                    printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 8));
                                    // ---------------------------------------------------------------------------------------------------------------------------------
                                    int i_kitchenmemo_height = 34;
                                    str_optiontxt = GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
                                            "   [If sold out]\n" + GlobalMemberValues.getModifierTxt2(str_itemqty, str_soldoutmemo, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                    for (int z = 25; z <= GlobalMemberValues.getSizeToString(str_optiontxt) ; z += 24){
                                        i_kitchenmemo_height += 34;
                                    }

                                    TextView tv_ifsoldout = new TextView(MainActivity.mContext);
                                    tv_ifsoldout.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, i_kitchenmemo_height));
                                    tv_ifsoldout.setGravity(Gravity.LEFT|Gravity.TOP);
                                    tv_ifsoldout.setText(str_optiontxt);
                                    tv_ifsoldout.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(tv_ifsoldout);

                                    printingLn.addView(tv_ifsoldout);
                                }
                                // --------------------------------------------------------------------------------------------------------------------------------

                                // DC / Extra ----------------------------------------------------------------------------------------------------------------------
                                if (TextUtils.isEmpty(str_itemdcextrastr)){
                                }else {
                                    // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                    printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 8));
                                    // ---------------------------------------------------------------------------------------------------------------------------------

                                    LinearLayout saleitemlist_add_eachLn = new LinearLayout(MainActivity.mContext);
                                    saleitemlist_add_eachLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                    saleitemlist_add_eachLn.setOrientation(LinearLayout.HORIZONTAL);

                                    int tempDiscountHeight = 34;
//                                    for (int z = 32; z <= GlobalMemberValues.getSizeToString(str_itemdcextrastr) ; z += 33){
//                                        tempDiscountHeight += 64;
//                                    }
                                    str_itemdcextrastr = str_itemdcextrastr.replace("&#37;","%");

                                    TextView itemdcextraTv = new TextView(MainActivity.mContext);
                                    itemdcextraTv.setGravity(Gravity.TOP | Gravity.LEFT);
                                    itemdcextraTv.setText("> " + str_itemdcextrastr);
                                    itemdcextraTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(itemdcextraTv);
                                    itemdcextraTv.setLayoutParams(new LinearLayout.LayoutParams(0, tempDiscountHeight, (GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER + GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER - 0.1f)));
                                    saleitemlist_add_eachLn.addView(itemdcextraTv);


                                    TextView itemdcextraTv_amount = new TextView(MainActivity.mContext);
                                    itemdcextraTv_amount.setGravity(Gravity.TOP | Gravity.RIGHT);
                                    if (str_itemdcextrastr.contains("Discount")){
                                        itemdcextraTv_amount.setText(finalTempDollarStr + " -" + GlobalMemberValues.getCommaStringForDouble(str_each_discount_extra_price));
                                        d_each_discount_total_price += GlobalMemberValues.getDoubleAtString(str_each_discount_extra_price);
                                    } else {
                                        itemdcextraTv_amount.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(str_each_discount_extra_price));
                                        d_each_extra_total_price += GlobalMemberValues.getDoubleAtString(str_each_discount_extra_price);
                                    }
                                    itemdcextraTv_amount.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(itemdcextraTv_amount);
                                    itemdcextraTv_amount.setLayoutParams(new LinearLayout.LayoutParams(0, tempDiscountHeight, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                                    saleitemlist_add_eachLn.addView(itemdcextraTv_amount);



                                    printingLn.addView(saleitemlist_add_eachLn);
                                }
                                // --------------------------------------------------------------------------------------------------------------------------------

                                if (tempIsModifierShow) {
                                    // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                    printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 7));
                                    // ---------------------------------------------------------------------------------------------------------------------------------
                                }

                                // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 10));
                                // ---------------------------------------------------------------------------------------------------------------------------------
                            }

                        }
                    }
                }
                // 아이템 끝
                /**********************************************************************************************************************************/
                if (!GlobalMemberValues.isStrEmpty(str_cancelreason)){
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));

                    TextView void_reason_Tv = new TextView(MainActivity.mContext);
                    void_reason_Tv.setLayoutParams(matchParentParams);
                    void_reason_Tv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                    void_reason_Tv.setText("[Void Reason]");
                    void_reason_Tv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(void_reason_Tv);
                    printingLn.addView(void_reason_Tv);

                    TextView void_reason_memo_Tv = new TextView(MainActivity.mContext);
                    void_reason_memo_Tv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                    void_reason_memo_Tv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                    void_reason_memo_Tv.setText(str_cancelreason);
                    void_reason_memo_Tv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(void_reason_memo_Tv);
                    printingLn.addView(void_reason_memo_Tv);
                }

                // Emp name 가 Online Order 일시 추가.
                if (str_employeename.equals("Online Order") && !GlobalMemberValues.isStrEmpty(str_customermemo)) {
                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    TextView noteTv = new TextView(MainActivity.mContext);
                    noteTv.setLayoutParams(matchParentParams);
                    noteTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                    noteTv.setText("[Notes to store]");
                    noteTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(noteTv);
                    printingLn.addView(noteTv);

                    TextView memotextTv = new TextView(MainActivity.mContext);
                    memotextTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                    memotextTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                    memotextTv.setText(str_customermemo);
                    memotextTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(memotextTv);
                    printingLn.addView(memotextTv);

                }

                if (str_employeename.equals("Online Order") && !GlobalMemberValues.isStrEmpty(str_deliverymemo)) {
                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
//                                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    TextView noteTv = new TextView(MainActivity.mContext);
                    noteTv.setLayoutParams(matchParentParams);
                    noteTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                    noteTv.setText("[Notes to driver]");
                    noteTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(noteTv);
                    printingLn.addView(noteTv);

                    TextView memotextTv = new TextView(MainActivity.mContext);
                    memotextTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                    memotextTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                    memotextTv.setText(str_deliverymemo);
                    memotextTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(memotextTv);
                    printingLn.addView(memotextTv);
                }

                // 상단으로 이동.
//                if (!GlobalMemberValues.isStrEmpty(str_customermemo)) {
//                    if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("ordermemo_yn",paramCusMer)){
//                        // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
//                        printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
//                        // ---------------------------------------------------------------------------------------------------------------------------------
//
//                        TextView noteTv = new TextView(MainActivity.mContext);
//                        noteTv.setLayoutParams(matchParentParams);
//                        noteTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
//                        noteTv.setText("[Note]");
//                        noteTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                        GlobalMemberValues.setTextStyleOnClover(noteTv);
//                        printingLn.addView(noteTv);
//
//                        TextView memotextTv = new TextView(MainActivity.mContext);
//                        memotextTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
//                        memotextTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
//                        memotextTv.setText(str_customermemo);
//                        memotextTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                        GlobalMemberValues.setTextStyleOnClover(memotextTv);
//                        printingLn.addView(memotextTv);
//                    }
//
//
//                }

                if (TextUtils.isEmpty(str_alldiscountextrstr)){
                }else {
                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    LinearLayout all_discount_extra_Ln = new LinearLayout(MainActivity.mContext);
                    all_discount_extra_Ln.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                    all_discount_extra_Ln.setOrientation(LinearLayout.HORIZONTAL);

                    int tempDiscountHeight = 34;
                    for (int z = 32; z <= GlobalMemberValues.getSizeToString(str_alldiscountextrstr) ; z += 33){
                        tempDiscountHeight += 64;
                    }

                    str_alldiscountextrstr = str_alldiscountextrstr.replace("&#37;","%");

                    TextView alldcextraTv = new TextView(MainActivity.mContext);
                    alldcextraTv.setLayoutParams(new LinearLayout.LayoutParams(0, tempDiscountHeight, (GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER + GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER - 0.1f)));
                    alldcextraTv.setGravity(Gravity.CENTER);
                    alldcextraTv.setText("> " + str_alldiscountextrstr);
                    alldcextraTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(alldcextraTv);
                    all_discount_extra_Ln.addView(alldcextraTv);

                    TextView dcextratotalLeftTv = new TextView(MainActivity.mContext);
                    dcextratotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    dcextratotalLeftTv.setText(finalTempDollarStr + str_totalextradiscountprice);
                    dcextratotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(dcextratotalLeftTv);
                    dcextratotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                    all_discount_extra_Ln.addView(dcextratotalLeftTv);
                    printingLn.addView(all_discount_extra_Ln);

                }

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------
                // common gratuity
//                if (b_commonGratuity) {
                if (false) {
                    LinearLayout gratuityLn = new LinearLayout(MainActivity.mContext);
                    gratuityLn.setLayoutParams(matchParentParams);
                    gratuityLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView gratuityLeftTv = new TextView(MainActivity.mContext);
                    gratuityLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    gratuityLeftTv.setText("Gratuity");
                    gratuityLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuityLeftTv);
                    gratuityLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    gratuityLn.addView(gratuityLeftTv);

                    TextView gratuityRightTv = new TextView(MainActivity.mContext);
                    gratuityRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    gratuityRightTv.setText(finalTempDollarStr + str_gratuity_amount);
                    gratuityRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuityRightTv);
                    gratuityRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    gratuityLn.addView(gratuityRightTv);

                    printingLn.addView(gratuityLn);
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                }

// GlobalMemberValues.getAddPayName()
                double d_temp_subtotal = 0.0f;
                if (GlobalMemberValues.isShowCashDCValue()){
                    // Sub Total -----------------------------------------------------------------------------------------------------------------------
                    LinearLayout subtotalLn = new LinearLayout(MainActivity.mContext);
                    subtotalLn.setLayoutParams(matchParentParams);
                    subtotalLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                    customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    customerNameLeftTv.setText("Sub Total");
                    customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                    customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    subtotalLn.addView(customerNameLeftTv);

                    if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                        str_subtotal = combineStringForVoidPrint(str_subtotal);
                    }


                    d_temp_subtotal = GlobalMemberValues.getDoubleAtString(str_subtotal) - GlobalMemberValues.getDoubleAtString(str_gratuity_amount);

                    // 230421
                    if (!str_bill_list_idx.isEmpty()){
                        d_temp_subtotal = GlobalMemberValues.getDoubleAtString(MssqlDatabase.getResultSetValueToString(" select subtotalamt from bill_list where holdcode = '" + str_bill_list_holdcode + "' and idx = '" + str_bill_list_idx + "'"));
                    }

                    TextView customerNameRightTv = new TextView(MainActivity.mContext);
                    customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    customerNameRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(d_temp_subtotal + ""));
                    customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                    customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    subtotalLn.addView(customerNameRightTv);

                    printingLn.addView(subtotalLn);

                    // ---------------------------------------------------------------------------------------------------------------------------------

                    // cash_card_discount Total -----------------------------------------------------------------------------------------------------------------------
                    LinearLayout cash_card_discount_Ln = new LinearLayout(MainActivity.mContext);
                    LinearLayout.LayoutParams cash_card_discount_Params
                            = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                    cash_card_discount_Params.setMargins(0, 0, 0, 0);
                    cash_card_discount_Ln.setLayoutParams(cash_card_discount_Params);
                    cash_card_discount_Ln.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cash_card_discountLeftTv = new TextView(MainActivity.mContext);
                    cash_card_discountLeftTv.setGravity(Gravity.LEFT);
                    cash_card_discountLeftTv.setIncludeFontPadding(false);
                    cash_card_discountLeftTv.setText(GlobalMemberValues.getAddPayName());
                    cash_card_discountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cash_card_discountLeftTv);
                    cash_card_discountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.WRAP_CONTENT, 0.7f));
                    cash_card_discount_Ln.addView(cash_card_discountLeftTv);

                    if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                        str_subtotal = combineStringForVoidPrint(str_subtotal);
                    }

                    TextView cash_card_discountRightTv = new TextView(MainActivity.mContext);
                    cash_card_discountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cash_card_discountRightTv.setText(finalTempDollarStr + str_cash_card_discount_amount);
                    cash_card_discountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cash_card_discountRightTv);
                    cash_card_discountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.WRAP_CONTENT, 0.3f));
                    cash_card_discount_Ln.addView(cash_card_discountRightTv);

                    printingLn.addView(cash_card_discount_Ln);
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    // cash_card_discount Total -----------------------------------------------------------------------------------------------------------------------
                    LinearLayout cash_card_discount_total_Ln = new LinearLayout(MainActivity.mContext);
                    cash_card_discount_total_Ln.setLayoutParams(matchParentParams);
                    cash_card_discount_total_Ln.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cash_card_discount_totalLeftTv = new TextView(MainActivity.mContext);
                    cash_card_discount_totalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cash_card_discount_totalLeftTv.setText("Total");
                    cash_card_discount_totalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cash_card_discount_totalLeftTv);
                    cash_card_discount_totalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cash_card_discount_total_Ln.addView(cash_card_discount_totalLeftTv);

                    if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                        str_subtotal = combineStringForVoidPrint(str_subtotal);
                    }

                    TextView cash_card_discount_totalRightTv = new TextView(MainActivity.mContext);
                    cash_card_discount_totalRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cash_card_discount_totalRightTv.setText(finalTempDollarStr + str_subtotal);
                    cash_card_discount_totalRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cash_card_discount_totalRightTv);
                    cash_card_discount_totalRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    cash_card_discount_total_Ln.addView(cash_card_discount_totalRightTv);

                    printingLn.addView(cash_card_discount_total_Ln);
                    // ---------------------------------------------------------------------------------------------------------------------------------


                } else{
                    // Sub Total -----------------------------------------------------------------------------------------------------------------------
                    LinearLayout subtotalLn = new LinearLayout(MainActivity.mContext);
                    subtotalLn.setLayoutParams(matchParentParams);
                    subtotalLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                    customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    customerNameLeftTv.setText("Sub Total");
                    customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                    customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    subtotalLn.addView(customerNameLeftTv);

                    if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                        str_subtotal = combineStringForVoidPrint(str_subtotal);
                    }


                    d_temp_subtotal = GlobalMemberValues.getDoubleAtString(str_subtotal) - GlobalMemberValues.getDoubleAtString(str_gratuity_amount);

                    // 230421
                    if (!str_bill_list_idx.isEmpty()){
                        d_temp_subtotal = GlobalMemberValues.getDoubleAtString(MssqlDatabase.getResultSetValueToString(" select subtotalamt from bill_list where holdcode = '" + str_bill_list_holdcode + "' and idx = '" + str_bill_list_idx + "'"));
                    }

                    TextView customerNameRightTv = new TextView(MainActivity.mContext);
                    customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    customerNameRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(d_temp_subtotal + ""));
                    customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                    customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    subtotalLn.addView(customerNameRightTv);

                    printingLn.addView(subtotalLn);
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }




// Tax -------------------------------------------------------------------------------------------------------------------------------------
                LinearLayout taxLn = new LinearLayout(MainActivity.mContext);
                taxLn.setLayoutParams(matchParentParams);
                taxLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView taxTv = new TextView(MainActivity.mContext);
                taxTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                taxTv.setText("Tax & Fee");
                taxTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(taxTv);
                taxTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                taxLn.addView(taxTv);

                if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                    str_tax = combineStringForVoidPrint(str_tax);
                }

                String temp_tax_fee = String.valueOf(GlobalMemberValues.getDoubleAtString(str_service_fee) + GlobalMemberValues.getDoubleAtString(str_tax));
                temp_tax_fee = GlobalMemberValues.getCommaStringForDouble(temp_tax_fee);

                // 230421
                if (!str_bill_list_idx.isEmpty()){
                    temp_tax_fee = String.valueOf(GlobalMemberValues.getDoubleAtString(MssqlDatabase.getResultSetValueToString(" select taxamt from bill_list where holdcode = '" + str_bill_list_holdcode + "' and idx = '" + str_bill_list_idx + "'")));
                }

                TextView taxLeftTv = new TextView(MainActivity.mContext);
                taxLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
//                taxLeftTv.setText(finalTempDollarStr + str_tax);
                taxLeftTv.setText(finalTempDollarStr + temp_tax_fee);
                taxLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(taxLeftTv);
                taxLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                taxLn.addView(taxLeftTv);

                printingLn.addView(taxLn);
                // ---------------------------------------------------------------------------------------------------------------------------------

                // Common Gratuity -----------------------------------------------------------------------------------------------------------------------
                LinearLayout commongratuityLn = new LinearLayout(MainActivity.mContext);
                commongratuityLn.setLayoutParams(matchParentParams);
                commongratuityLn.setOrientation(LinearLayout.HORIZONTAL);


                // 04242023 --------------------------------------------------------------------------
                String tempCGtype = MainActivity.mDbInit.dbExecuteReadReturnString(
                        " select gratuitytype from salon_storegeneral "
                );
                if (GlobalMemberValues.isStrEmpty(tempCGtype)) {
                    tempCGtype = "%";
                }

                double tempGratuityvalue = GlobalMemberValues.getDoubleAtString(MainActivity.mDbInit.dbExecuteReadReturnString(
                        " select gratuityvalue from salon_storegeneral "
                ));

                String tempCGName = "";
                if (tempCGtype == "%" || tempCGtype.equals("%")) {
                    tempCGName = tempGratuityvalue + tempCGtype;
                } else {
                    tempCGName = tempCGtype + tempGratuityvalue;
                }

                String commonGratuityStr = "Gratuity " + tempCGName;
                // 04242023 --------------------------------------------------------------------------


                TextView commongratuityTv = new TextView(MainActivity.mContext);
                commongratuityTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);

                // 04242023
                commongratuityTv.setText(commonGratuityStr);

                commongratuityTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(commongratuityTv);
                commongratuityTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                commongratuityLn.addView(commongratuityTv);

                if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                    str_gratuity_amount = combineStringForVoidPrint(str_gratuity_amount);
                }

                // 230421
                if (!str_bill_list_idx.isEmpty()){
                    str_gratuity_amount = GlobalMemberValues.getCommaStringForDouble(MssqlDatabase.getResultSetValueToString(" select gratuityamt from bill_list where holdcode = '" + str_bill_list_holdcode + "' and idx = '" + str_bill_list_idx + "'"));
                }

                TextView commongratuityRightTv = new TextView(MainActivity.mContext);
                commongratuityRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                commongratuityRightTv.setText(finalTempDollarStr + str_gratuity_amount);
                commongratuityRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(commongratuityRightTv);
                commongratuityRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                commongratuityLn.addView(commongratuityRightTv);

                printingLn.addView(commongratuityLn);
                // ---------------------------------------------------------------------------------------------------------------------------------

                // each discount total
                if (d_each_discount_total_price > 0) {
                    // each discount total.
                    main_Text = "Each D/C Total      ";

                    // Sub Total -----------------------------------------------------------------------------------------------------------------------
                    LinearLayout dcextratotalLn = new LinearLayout(MainActivity.mContext);
                    dcextratotalLn.setLayoutParams(matchParentParams);
                    dcextratotalLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView dcextratotalTv = new TextView(MainActivity.mContext);
                    dcextratotalTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    dcextratotalTv.setText(main_Text);
                    dcextratotalTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(dcextratotalTv);
                    dcextratotalTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    dcextratotalLn.addView(dcextratotalTv);

                    TextView dcextratotalLeftTv = new TextView(MainActivity.mContext);
                    dcextratotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    dcextratotalLeftTv.setText(finalTempDollarStr + " -" + GlobalMemberValues.getStringFormatNumber(String.valueOf(d_each_discount_total_price),"2"));
                    dcextratotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(dcextratotalLeftTv);
                    dcextratotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    dcextratotalLn.addView(dcextratotalLeftTv);

                    printingLn.addView(dcextratotalLn);
                }
                if (d_each_discount_total_price > 0 ){
                    if (str_totalextradiscountprice.contains("-")){
                        str_totalextradiscountprice = "0.00";
                        // each discount 일경우
                        // all discount 표기 하지 않음.
                    } else {
                        // each discount 추가하고
                        // all extra 일 경우 all extra 표기.
                    }
                }


                if (TextUtils.isEmpty(str_totalextradiscountprice)){
                }else {
                    if (GlobalMemberValues.getDoubleAtString(str_totalextradiscountprice) > 0 || GlobalMemberValues.getDoubleAtString(str_totalextradiscountprice) < 0) {
                        if (str_totalextradiscountprice.contains("-")){
                            main_Text = "All D/C Total       ";
                        } else {
                            main_Text = "Extra Total         ";
                        }

                        // Sub Total -----------------------------------------------------------------------------------------------------------------------
                        LinearLayout dcextratotalLn = new LinearLayout(MainActivity.mContext);
                        dcextratotalLn.setLayoutParams(matchParentParams);
                        dcextratotalLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView dcextratotalTv = new TextView(MainActivity.mContext);
                        dcextratotalTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        dcextratotalTv.setText(main_Text);
                        dcextratotalTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(dcextratotalTv);
                        dcextratotalTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        dcextratotalLn.addView(dcextratotalTv);

                        if (!str_bill_list_idx.isEmpty()){
                            str_totalextradiscountprice = GlobalMemberValues.getCommaStringForDouble(MssqlDatabase.getResultSetValueToString(" select dcextraAmt from bill_list where holdcode = '" + str_bill_list_holdcode + "' and idx = '" + str_bill_list_idx + "'"));
                        }

                        TextView dcextratotalLeftTv = new TextView(MainActivity.mContext);
                        dcextratotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        dcextratotalLeftTv.setText(finalTempDollarStr + str_totalextradiscountprice);
                        dcextratotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(dcextratotalLeftTv);
                        dcextratotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        dcextratotalLn.addView(dcextratotalLeftTv);

                        printingLn.addView(dcextratotalLn);


                        // ---------------------------------------------------------------------------------------------------------------------------------
                    }
                }

                // tip




                if (!(GlobalMemberValues.getDoubleAtString(str_tipcard) == 0.00)
                || !(GlobalMemberValues.getDoubleAtString(str_tipcash) == 0.00)){
                    LinearLayout tipLn = new LinearLayout(MainActivity.mContext);
                    tipLn.setLayoutParams(matchParentParams);
                    tipLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView tipTv = new TextView(MainActivity.mContext);
                    tipTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    tipTv.setText("Tip");
                    tipTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(tipTv);
                    tipTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    tipLn.addView(tipTv);

                    String temp_tip = "";
                    if (!str_tipcard.isEmpty()) {
                        temp_tip = str_tipcard;
                    }
                    if (!str_tipcash.isEmpty()) {
                        temp_tip = str_tipcash;
                    }

                    TextView tipLeftTv = new TextView(MainActivity.mContext);
                    tipLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    tipLeftTv.setText(finalTempDollarStr + temp_tip);
                    tipLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(tipLeftTv);
                    tipLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    tipLn.addView(tipLeftTv);

                    printingLn.addView(tipLn);
                }
                // tip end





                // Delivery / Togo Fee -------------------------------------------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_deliverypickupfee) && GlobalMemberValues.getDoubleAtString(str_deliverypickupfee) > 0) {
                    if (str_deliverytakeaway.equals("D")) {
                        main_Text =  "Delivery Fee        ";
                    } else {
                        main_Text =  "To Go Fee         ";
                    }

                    LinearLayout deliverytogofeeLn = new LinearLayout(MainActivity.mContext);
                    deliverytogofeeLn.setLayoutParams(matchParentParams);
                    deliverytogofeeLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView deliveryToGoFeeLeftTv = new TextView(MainActivity.mContext);
                    deliveryToGoFeeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    deliveryToGoFeeLeftTv.setText(main_Text);
                    deliveryToGoFeeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(deliveryToGoFeeLeftTv);
                    deliveryToGoFeeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    deliverytogofeeLn.addView(deliveryToGoFeeLeftTv);

                    if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                        str_deliverypickupfee = combineStringForVoidPrint(str_deliverypickupfee);
                    }

                    TextView deliveryToGoFeeRightTv = new TextView(MainActivity.mContext);
                    deliveryToGoFeeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    deliveryToGoFeeRightTv.setText(finalTempDollarStr + str_deliverypickupfee);
                    deliveryToGoFeeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(deliveryToGoFeeRightTv);
                    deliveryToGoFeeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    deliverytogofeeLn.addView(deliveryToGoFeeRightTv);

                    printingLn.addView(deliverytogofeeLn);
                }
                // ---------------------------------------------------------------------------------------------------------------------------------

                // Total Amount --------------------------------------------------------------------------------------------------------------------

                float text_total_size = GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER; // normal size
                int layout_total_size = 32;
                String str_totalamount_size = GlobalMemberValues.getValueOnReceiptSetting("totalamount_size",receiptType);
                switch (str_totalamount_size){
                    case "1" :  // small
                        text_total_size = text_total_size - 2;
                        layout_total_size = layout_total_size -2;
                        break;
                    case "2":   // medium
                        break;
                    case "3":   // large
                        text_total_size = text_total_size + 4;
                        layout_total_size = layout_total_size + 4;
                        break;
                    case "4":   // x large
                        text_total_size = text_total_size + 8;
                        layout_total_size = layout_total_size + 8;
                        break;
                    case "5":   // xx large
                        text_total_size = text_total_size + 12;
                        layout_total_size = layout_total_size + 12;
                        break;
                }

                final LinearLayout.LayoutParams temp_total_matchParentParams
                        = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, layout_total_size);
                temp_total_matchParentParams.setMargins(0, 0, 0, 0);

                LinearLayout totalAmountLn = new LinearLayout(MainActivity.mContext);
                totalAmountLn.setLayoutParams(temp_total_matchParentParams);
                totalAmountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView totalAmountLeftTv = new TextView(MainActivity.mContext);
                totalAmountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                totalAmountLeftTv.setText("Total Amount");
                totalAmountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, text_total_size);
                GlobalMemberValues.setTextStyleOnClover(totalAmountLeftTv);
                totalAmountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                totalAmountLn.addView(totalAmountLeftTv);

                if (d_billpayamount != 0.00){
                    str_totalamount = GlobalMemberValues.setDoubleToString(d_billtotalamount, 2);
                }

                if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                    str_totalamount = combineStringForVoidPrint(str_totalamount);
                }

                // 230421
                if (!str_bill_list_idx.isEmpty()){
                    str_totalamount = String.valueOf(GlobalMemberValues.getDoubleAtString(MssqlDatabase.getResultSetValueToString(" select totalamountAmt from bill_list where holdcode = '" + str_bill_list_holdcode + "' and idx = '" + str_bill_list_idx + "'")));
                }

                TextView totalAmountRightTv = new TextView(MainActivity.mContext);
                totalAmountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                totalAmountRightTv.setText(finalTempDollarStr + str_totalamount);
                totalAmountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, text_total_size);
                GlobalMemberValues.setTextStyleOnClover(totalAmountRightTv);
                totalAmountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                totalAmountLn.addView(totalAmountRightTv);

                printingLn.addView(totalAmountLn);
                // ---------------------------------------------------------------------------------------------------------------------------------

                // str_totalamount != 실제 최종금액
                // pay amount = str_totalamount
                // str_totalamount = 실제 최종금액

                // Pay Amount ===================================================================================================================================
                //230426 pay amount 제거
//                if (d_billpayamount != 0.00){
//                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
//                    LinearLayout pay_AmountLn = new LinearLayout(MainActivity.mContext);
//                    pay_AmountLn.setLayoutParams(matchParentParams);
//                    pay_AmountLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                    TextView pay_AmountLeftTv = new TextView(MainActivity.mContext);
//                    pay_AmountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
////                    pay_AmountLeftTv.setText("Pay Amount");
//                                        pay_AmountLeftTv.setText("Paid Amount");
//                    pay_AmountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                    GlobalMemberValues.setTextStyleOnClover(pay_AmountLeftTv);
//                    pay_AmountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                    pay_AmountLn.addView(pay_AmountLeftTv);
//
//                    String str_billpayamount = GlobalMemberValues.setDoubleToString(d_billpayamount, 2);
//                    if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
//                        str_billpayamount = combineStringForVoidPrint(str_billpayamount);
//                    }
//
//                    TextView pay_AmountRightTv = new TextView(MainActivity.mContext);
//                    pay_AmountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
//                    pay_AmountRightTv.setText(finalTempDollarStr + str_billpayamount);
//                    pay_AmountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                    GlobalMemberValues.setTextStyleOnClover(pay_AmountRightTv);
//                    pay_AmountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
//                    pay_AmountLn.addView(pay_AmountRightTv);
//
//                    printingLn.addView(pay_AmountLn);
//                }
                // Pay Amount ===================================================================================================================================

                if (paramPrintingType.equals("return") && !GlobalMemberValues.isStrEmpty(str_returntipamount)) {
                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    str_returntipamount = combineStringForVoidPrint(str_returntipamount);

                    // Returned Pickup/Delivery Fee ----------------------------------------------------------------------------------------------------
                    LinearLayout returnetipLn = new LinearLayout(MainActivity.mContext);
                    returnetipLn.setLayoutParams(matchParentParams);
                    returnetipLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView returnetipLeftTv = new TextView(MainActivity.mContext);
                    returnetipLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    returnetipLeftTv.setText("Tip");
                    returnetipLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(returnetipLeftTv);
                    returnetipLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    returnetipLn.addView(returnetipLeftTv);

                    TextView returnetipRightTv = new TextView(MainActivity.mContext);
                    returnetipRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    returnetipRightTv.setText(finalTempDollarStr + str_returntipamount);
                    returnetipRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(returnetipRightTv);
                    returnetipRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    returnetipLn.addView(returnetipRightTv);

                    printingLn.addView(returnetipLn);
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }

                if (paramPrintingType.equals("return") && !GlobalMemberValues.isStrEmpty(str_returnpickupdeliveryfee)) {
                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    str_returnpickupdeliveryfee = combineStringForVoidPrint(str_returnpickupdeliveryfee);

                    // Returned Pickup/Delivery Fee ----------------------------------------------------------------------------------------------------
                    LinearLayout returnedpickdelifeeLn = new LinearLayout(MainActivity.mContext);
                    returnedpickdelifeeLn.setLayoutParams(matchParentParams);
                    returnedpickdelifeeLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView returnedpickdelifeeLeftTv = new TextView(MainActivity.mContext);
                    returnedpickdelifeeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    returnedpickdelifeeLeftTv.setText("Pickup/Delivery Fee");
                    returnedpickdelifeeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(returnedpickdelifeeLeftTv);
                    returnedpickdelifeeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    returnedpickdelifeeLn.addView(returnedpickdelifeeLeftTv);

                    TextView returnedpickdelifeeRightTv = new TextView(MainActivity.mContext);
                    returnedpickdelifeeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    returnedpickdelifeeRightTv.setText(finalTempDollarStr + str_returnpickupdeliveryfee);
                    returnedpickdelifeeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(returnedpickdelifeeRightTv);
                    returnedpickdelifeeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    returnedpickdelifeeLn.addView(returnedpickdelifeeRightTv);

                    printingLn.addView(returnedpickdelifeeLn);
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                if (str_creditcardtendered.length() != 0 && GlobalMemberValues.getDoubleAtString(str_creditcardtendered) > 0 && !GlobalMemberValues.isPaymentByBills) {
                    // Card Tendered ---------------------------------------------------------------------------------------------------------------
                    LinearLayout cardtenderedLn = new LinearLayout(MainActivity.mContext);
                    cardtenderedLn.setLayoutParams(matchParentParams);
                    cardtenderedLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardtenderedLeftTv = new TextView(MainActivity.mContext);
                    cardtenderedLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardtenderedLeftTv.setText("Card Tendered");
                    cardtenderedLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardtenderedLeftTv);
                    cardtenderedLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardtenderedLn.addView(cardtenderedLeftTv);

                    if (!(GlobalMemberValues.getDoubleAtString(str_tipcard) == 0.00)){
                        str_cashtendered = (String)String.valueOf(GlobalMemberValues.getDoubleAtString(str_creditcardtendered) + GlobalMemberValues.getDoubleAtString( str_tipcard));
                    }

                    if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                        str_creditcardtendered = combineStringForVoidPrint(str_creditcardtendered);
                    }

                    TextView cardtenderedRightTv = new TextView(MainActivity.mContext);
                    cardtenderedRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardtenderedRightTv.setText(finalTempDollarStr + str_creditcardtendered);
                    cardtenderedRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardtenderedRightTv);
                    cardtenderedRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    cardtenderedLn.addView(cardtenderedRightTv);

                    printingLn.addView(cardtenderedLn);
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }

                if (str_giftcardtendered.toString() == "0" || TextUtils.isEmpty(str_giftcardtendered)) {
                    // gift card balance 프린팅 할 필요 없음.
                }
                else {
                    if (GlobalMemberValues.getDoubleAtString(str_giftcardtendered) > 0 && !GlobalMemberValues.isPaymentByBills) {
                        // Gift Card Tendered ----------------------------------------------------------------------------------------------------------
                        LinearLayout giftcardtenderedLn = new LinearLayout(MainActivity.mContext);
                        giftcardtenderedLn.setLayoutParams(matchParentParams);
                        giftcardtenderedLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView giftcardtenderedLeftTv = new TextView(MainActivity.mContext);
                        giftcardtenderedLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        giftcardtenderedLeftTv.setText("Gift Card Tendered");
                        giftcardtenderedLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(giftcardtenderedLeftTv);
                        giftcardtenderedLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        giftcardtenderedLn.addView(giftcardtenderedLeftTv);

                        if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                            str_giftcardtendered = combineStringForVoidPrint(str_giftcardtendered);
                        }

                        TextView giftcardtenderedRightTv = new TextView(MainActivity.mContext);
                        giftcardtenderedRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        giftcardtenderedRightTv.setText(finalTempDollarStr + str_giftcardtendered);
                        giftcardtenderedRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(giftcardtenderedRightTv);
                        giftcardtenderedRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        giftcardtenderedLn.addView(giftcardtenderedRightTv);

                        printingLn.addView(giftcardtenderedLn);

                        // Gift Card after balance ----------------------------------------------------------------------------------------------------------
                        LinearLayout giftcardtenderedLn2 = new LinearLayout(MainActivity.mContext);
                        giftcardtenderedLn2.setLayoutParams(matchParentParams);
                        giftcardtenderedLn2.setOrientation(LinearLayout.HORIZONTAL);

                        TextView giftcardtendered2LeftTv = new TextView(MainActivity.mContext);
                        giftcardtendered2LeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        giftcardtendered2LeftTv.setText("Gift Card #");
                        giftcardtendered2LeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(giftcardtendered2LeftTv);
                        giftcardtendered2LeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        giftcardtenderedLn2.addView(giftcardtendered2LeftTv);

                        if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                            str_giftcardtendered = combineStringForVoidPrint(str_giftcardtendered);
                        }

                        TextView giftcardtendered2RightTv = new TextView(MainActivity.mContext);
                        giftcardtendered2RightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        giftcardtendered2RightTv.setText(GlobalMemberValues.GIFTCARD_USE_NUMBER);
                        giftcardtendered2RightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(giftcardtendered2RightTv);
                        giftcardtendered2RightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        giftcardtenderedLn2.addView(giftcardtendered2RightTv);

                        printingLn.addView(giftcardtenderedLn2);

                        // Gift Card number ----------------------------------------------------------------------------------------------------------
                        LinearLayout giftcardtenderedLn3 = new LinearLayout(MainActivity.mContext);
                        giftcardtenderedLn3.setLayoutParams(matchParentParams);
                        giftcardtenderedLn3.setOrientation(LinearLayout.HORIZONTAL);

                        TextView giftcardtendered3LeftTv = new TextView(MainActivity.mContext);
                        giftcardtendered3LeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        giftcardtendered3LeftTv.setText("Gift Card Remaining");
                        giftcardtendered3LeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(giftcardtendered3LeftTv);
                        giftcardtendered3LeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        giftcardtenderedLn3.addView(giftcardtendered3LeftTv);

                        if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                            str_giftcardtendered = combineStringForVoidPrint(str_giftcardtendered);
                        }

                        TextView giftcardtendered3RightTv = new TextView(MainActivity.mContext);
                        giftcardtendered3RightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        giftcardtendered3RightTv.setText(finalTempDollarStr + GlobalMemberValues.getStringFormatNumber(GlobalMemberValues.GIFTCARD_AFTER_BALANCE, "2"));
                        giftcardtendered3RightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(giftcardtendered3RightTv);
                        giftcardtendered3RightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        giftcardtenderedLn3.addView(giftcardtendered3RightTv);

                        printingLn.addView(giftcardtenderedLn3);
                        // ---------------------------------------------------------------------------------------------------------------------------------
                    }
                }

                if (str_checktendered.toString() == "0" || TextUtils.isEmpty(str_checktendered)) {
                }
                else {
                    if (GlobalMemberValues.getDoubleAtString(str_checktendered) > 0 && !GlobalMemberValues.isPaymentByBills) {
                        // Other Tendered -----------------------------------------------------------------------------------------------------------------
                        LinearLayout othertenderedLn = new LinearLayout(MainActivity.mContext);
                        othertenderedLn.setLayoutParams(matchParentParams);
                        othertenderedLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView othertenderedLeftTv = new TextView(MainActivity.mContext);
                        othertenderedLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        othertenderedLeftTv.setText("Other Tendered");
                        othertenderedLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(othertenderedLeftTv);
                        othertenderedLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        othertenderedLn.addView(othertenderedLeftTv);

                        if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                            str_checktendered = combineStringForVoidPrint(str_checktendered);
                        }

                        TextView othertenderedRightTv = new TextView(MainActivity.mContext);
                        othertenderedRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        othertenderedRightTv.setText(finalTempDollarStr + str_checktendered);
                        othertenderedRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(othertenderedRightTv);
                        othertenderedRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        othertenderedLn.addView(othertenderedRightTv);

                        printingLn.addView(othertenderedLn);
                        // ---------------------------------------------------------------------------------------------------------------------------------
                    }
                }
                boolean b_point_is_showing = false;
                if (str_pointtendered.toString() == "0" || TextUtils.isEmpty(str_pointtendered)) {
                    // Point Earned -----------------------------------------------------------------------------------------------------------------
                    if (GlobalMemberValues.getDoubleAtString(str_earned_point) > 0){
                        LinearLayout pointtenderedLn_earned = new LinearLayout(MainActivity.mContext);
                        pointtenderedLn_earned.setLayoutParams(matchParentParams);
                        pointtenderedLn_earned.setOrientation(LinearLayout.HORIZONTAL);

                        TextView pointtenderedLeftTv_earned = new TextView(MainActivity.mContext);
                        pointtenderedLeftTv_earned.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        pointtenderedLeftTv_earned.setText("Point Earned");
                        pointtenderedLeftTv_earned.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(pointtenderedLeftTv_earned);
                        pointtenderedLeftTv_earned.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        pointtenderedLn_earned.addView(pointtenderedLeftTv_earned);

                        TextView pointtenderedRightTv_earned = new TextView(MainActivity.mContext);
                        pointtenderedRightTv_earned.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        pointtenderedRightTv_earned.setText(finalTempDollarStr + str_earned_point);
                        pointtenderedRightTv_earned.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(pointtenderedRightTv_earned);
                        pointtenderedRightTv_earned.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        pointtenderedLn_earned.addView(pointtenderedRightTv_earned);

                        printingLn.addView(pointtenderedLn_earned);

                        // Point Tendered Remaining Point-----------------------------------------------------------------------------------------------------------------
                        if (!paramPrintingType.equals("return")){
                            LinearLayout pointtenderedLn_remaining = new LinearLayout(MainActivity.mContext);
                            pointtenderedLn_remaining.setLayoutParams(matchParentParams);
                            pointtenderedLn_remaining.setOrientation(LinearLayout.HORIZONTAL);

                            TextView pointtenderedLeftTv_remaining = new TextView(MainActivity.mContext);
                            pointtenderedLeftTv_remaining.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            pointtenderedLeftTv_remaining.setText("Point Remaining");
                            pointtenderedLeftTv_remaining.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(pointtenderedLeftTv_remaining);
                            pointtenderedLeftTv_remaining.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            pointtenderedLn_remaining.addView(pointtenderedLeftTv_remaining);

                            if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                                str_customer_point_remaining = GlobalMemberValues.getStringFormatNumber(GlobalMemberValues.POINT_AFTER_BALANCE,"2");
                                Log.e("point test POINT_AFTER_BALANCE1", GlobalMemberValues.getStringFormatNumber(GlobalMemberValues.POINT_AFTER_BALANCE,"2"));
                                Log.e("point test str_customer_point_remaining1", str_customer_point_remaining);
                                str_pointtendered = combineStringForVoidPrint(str_pointtendered);
                            }

                            TextView pointtenderedRightTv_remaining = new TextView(MainActivity.mContext);
                            pointtenderedRightTv_remaining.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            pointtenderedRightTv_remaining.setText(finalTempDollarStr + str_customer_point_remaining);
                            pointtenderedRightTv_remaining.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(pointtenderedRightTv_remaining);
                            pointtenderedRightTv_remaining.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            pointtenderedLn_remaining.addView(pointtenderedRightTv_remaining);

                            printingLn.addView(pointtenderedLn_remaining);
                        }

                        // ---------------------------------------------------------------------------------------------------------------------------------
                    }
                }
                else {
                    if (GlobalMemberValues.getDoubleAtString(str_pointtendered) > 0) {
                        // Point Tendered -----------------------------------------------------------------------------------------------------------------
                        LinearLayout pointtenderedLn = new LinearLayout(MainActivity.mContext);
                        pointtenderedLn.setLayoutParams(matchParentParams);
                        pointtenderedLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView pointtenderedLeftTv = new TextView(MainActivity.mContext);
                        pointtenderedLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        pointtenderedLeftTv.setText("Point Tendered");
                        pointtenderedLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(pointtenderedLeftTv);
                        pointtenderedLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        pointtenderedLn.addView(pointtenderedLeftTv);

                        if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                            str_pointtendered = combineStringForVoidPrint(str_pointtendered);
                        }

                        TextView pointtenderedRightTv = new TextView(MainActivity.mContext);
                        pointtenderedRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        pointtenderedRightTv.setText(finalTempDollarStr + str_pointtendered);
                        pointtenderedRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(pointtenderedRightTv);
                        pointtenderedRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        pointtenderedLn.addView(pointtenderedRightTv);

                        printingLn.addView(pointtenderedLn);

                        // Point Earned -----------------------------------------------------------------------------------------------------------------
                        if (GlobalMemberValues.getDoubleAtString(str_earned_point) > 0){
                            LinearLayout pointtenderedLn_earned = new LinearLayout(MainActivity.mContext);
                            pointtenderedLn_earned.setLayoutParams(matchParentParams);
                            pointtenderedLn_earned.setOrientation(LinearLayout.HORIZONTAL);

                            TextView pointtenderedLeftTv_earned = new TextView(MainActivity.mContext);
                            pointtenderedLeftTv_earned.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            pointtenderedLeftTv_earned.setText("Point Earned");
                            pointtenderedLeftTv_earned.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(pointtenderedLeftTv_earned);
                            pointtenderedLeftTv_earned.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            pointtenderedLn_earned.addView(pointtenderedLeftTv_earned);

                            TextView pointtenderedRightTv_earned = new TextView(MainActivity.mContext);
                            pointtenderedRightTv_earned.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            pointtenderedRightTv_earned.setText(finalTempDollarStr + str_earned_point);
                            pointtenderedRightTv_earned.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(pointtenderedRightTv_earned);
                            pointtenderedRightTv_earned.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            pointtenderedLn_earned.addView(pointtenderedRightTv_earned);

                            printingLn.addView(pointtenderedLn_earned);
                            b_point_is_showing = true;
                        }

                        // Point Tendered Remaining Point-----------------------------------------------------------------------------------------------------------------
                        if (!paramPrintingType.equals("return")){
                            LinearLayout pointtenderedLn_remaining = new LinearLayout(MainActivity.mContext);
                            pointtenderedLn_remaining.setLayoutParams(matchParentParams);
                            pointtenderedLn_remaining.setOrientation(LinearLayout.HORIZONTAL);

                            TextView pointtenderedLeftTv_remaining = new TextView(MainActivity.mContext);
                            pointtenderedLeftTv_remaining.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            pointtenderedLeftTv_remaining.setText("Point Remaining");
                            pointtenderedLeftTv_remaining.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(pointtenderedLeftTv_remaining);
                            pointtenderedLeftTv_remaining.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            pointtenderedLn_remaining.addView(pointtenderedLeftTv_remaining);

                            if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                                str_customer_point_remaining = GlobalMemberValues.getStringFormatNumber(GlobalMemberValues.POINT_AFTER_BALANCE,"2");
                                str_pointtendered = combineStringForVoidPrint(str_pointtendered);
                                str_earned_point = combineStringForVoidPrint(str_earned_point);
                            }

                            if (GlobalMemberValues.getDoubleAtString(str_earned_point) != 0){
                                str_customer_point_remaining = GlobalMemberValues.getStringFormatNumber(GlobalMemberValues.getDoubleAtString(str_earned_point) + GlobalMemberValues.getDoubleAtString(str_customer_point_remaining), "2");
                            }

                            TextView pointtenderedRightTv_remaining = new TextView(MainActivity.mContext);
                            pointtenderedRightTv_remaining.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            pointtenderedRightTv_remaining.setText(finalTempDollarStr + str_customer_point_remaining);
                            pointtenderedRightTv_remaining.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(pointtenderedRightTv_remaining);
                            pointtenderedRightTv_remaining.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            pointtenderedLn_remaining.addView(pointtenderedRightTv_remaining);

                            printingLn.addView(pointtenderedLn_remaining);
                            b_point_is_showing = true;
                        }

                        // ---------------------------------------------------------------------------------------------------------------------------------
                    }
                }
                if (str_cashtendered.length() != 0 && GlobalMemberValues.getDoubleAtString(str_cashtendered) > 0 && !GlobalMemberValues.isPaymentByBills) {
                    // Cash Tendered -----------------------------------------------------------------------------------------------------------------
                    LinearLayout cashtenderedLn = new LinearLayout(MainActivity.mContext);
                    cashtenderedLn.setLayoutParams(matchParentParams);
                    cashtenderedLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cashtenderedLeftTv = new TextView(MainActivity.mContext);
                    cashtenderedLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cashtenderedLeftTv.setText("Cash Tendered");
                    cashtenderedLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashtenderedLeftTv);
                    cashtenderedLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cashtenderedLn.addView(cashtenderedLeftTv);

                    if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                        str_cashtendered = combineStringForVoidPrint(str_cashtendered);
                    }

                    if (!(GlobalMemberValues.getDoubleAtString(str_tipcash) == 0.00)){
                        str_cashtendered = (String)String.valueOf(GlobalMemberValues.getDoubleAtString(str_cashtendered) + GlobalMemberValues.getDoubleAtString( str_tipcash));
                    }

                    TextView cashtenderedRightTv = new TextView(MainActivity.mContext);
                    cashtenderedRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cashtenderedRightTv.setText(finalTempDollarStr + str_cashtendered);
                    cashtenderedRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashtenderedRightTv);
                    cashtenderedRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    cashtenderedLn.addView(cashtenderedRightTv);

                    printingLn.addView(cashtenderedLn);
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }

                // Point Void 시 Earned 차감 -----------------------------------------------------------------------------------------------------------------
                if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                    if (GlobalMemberValues.POINT_EARNED != 0.0 && b_point_is_showing == false){
                        LinearLayout pointtenderedLn_earned = new LinearLayout(MainActivity.mContext);
                        pointtenderedLn_earned.setLayoutParams(matchParentParams);
                        pointtenderedLn_earned.setOrientation(LinearLayout.HORIZONTAL);

                        TextView pointtenderedLeftTv_earned = new TextView(MainActivity.mContext);
                        pointtenderedLeftTv_earned.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        pointtenderedLeftTv_earned.setText("Point Earned");
                        pointtenderedLeftTv_earned.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(pointtenderedLeftTv_earned);
                        pointtenderedLeftTv_earned.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        pointtenderedLn_earned.addView(pointtenderedLeftTv_earned);

                        double temp_point_earned = GlobalMemberValues.POINT_EARNED * -1;

                        TextView pointtenderedRightTv_earned = new TextView(MainActivity.mContext);
                        pointtenderedRightTv_earned.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        pointtenderedRightTv_earned.setText(finalTempDollarStr + GlobalMemberValues.getStringFormatNumber(temp_point_earned,"2"));
                        pointtenderedRightTv_earned.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(pointtenderedRightTv_earned);
                        pointtenderedRightTv_earned.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        pointtenderedLn_earned.addView(pointtenderedRightTv_earned);

                        printingLn.addView(pointtenderedLn_earned);

                        // Point Tendered Remaining Point-----------------------------------------------------------------------------------------------------------------
                        if (!paramPrintingType.equals("return")){
                            LinearLayout pointtenderedLn_remaining = new LinearLayout(MainActivity.mContext);
                            pointtenderedLn_remaining.setLayoutParams(matchParentParams);
                            pointtenderedLn_remaining.setOrientation(LinearLayout.HORIZONTAL);

                            TextView pointtenderedLeftTv_remaining = new TextView(MainActivity.mContext);
                            pointtenderedLeftTv_remaining.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            pointtenderedLeftTv_remaining.setText("Point Remaining");
                            pointtenderedLeftTv_remaining.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(pointtenderedLeftTv_remaining);
                            pointtenderedLeftTv_remaining.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            pointtenderedLn_remaining.addView(pointtenderedLeftTv_remaining);

                            if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                                str_customer_point_remaining = GlobalMemberValues.getStringFormatNumber(GlobalMemberValues.POINT_AFTER_BALANCE,"2");
                                str_pointtendered = combineStringForVoidPrint(str_pointtendered);
                                Log.e("point test POINT_AFTER_BALANCE2", GlobalMemberValues.getStringFormatNumber(GlobalMemberValues.POINT_AFTER_BALANCE,"2"));
                                Log.e("point test str_customer_point_remaining2", str_customer_point_remaining);
                            }

                            TextView pointtenderedRightTv_remaining = new TextView(MainActivity.mContext);
                            pointtenderedRightTv_remaining.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            pointtenderedRightTv_remaining.setText(finalTempDollarStr + str_customer_point_remaining);
                            pointtenderedRightTv_remaining.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(pointtenderedRightTv_remaining);
                            pointtenderedRightTv_remaining.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            pointtenderedLn_remaining.addView(pointtenderedRightTv_remaining);

                            printingLn.addView(pointtenderedLn_remaining);
                        }

                        // ---------------------------------------------------------------------------------------------------------------------------------
                    }
                }

                // Change ------------------------------------------------------------------------------------------------------------------------------
                if (paramPrintingType.equals("sales")) {
                    if ((str_giftcardtendered.toString() != "0"
                            && str_creditcardtendered.toString() == "0"
                            && str_checktendered.toString() == "0"
                            && str_pointtendered.toString() == "0"
                            && str_cashtendered.toString() == "0")
                            || (str_giftcardtendered.toString() == "0"
                            && str_creditcardtendered.toString() == "0"
                            && str_checktendered.toString() == "0"
                            && str_pointtendered.toString() != "0"
                            && str_cashtendered.toString() == "0")){
                    } else {
                        LinearLayout changeLn = new LinearLayout(MainActivity.mContext);
                        changeLn.setLayoutParams(matchParentParams);
                        changeLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView changeLeftTv = new TextView(MainActivity.mContext);
                        changeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        changeLeftTv.setText("Change");
                        changeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(changeLeftTv);
                        changeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        changeLn.addView(changeLeftTv);

                        TextView changeRightTv = new TextView(MainActivity.mContext);
                        changeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        changeRightTv.setText(finalTempDollarStr + str_change);
                        changeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(changeRightTv);
                        changeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        changeLn.addView(changeRightTv);

                        printingLn.addView(changeLn);
                    }
                }
                // ---------------------------------------------------------------------------------------------------------------------------------

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                if (paramPrintingType.equals("sales")) {

                    if (str_reprintyn == "Y" || str_reprintyn.equals("Y")) {
                        if (!GlobalMemberValues.isStrEmpty(str_tipamount) && GlobalMemberValues.getDoubleAtString(str_tipamount) > 0) {
                            // tip ------------------------------------------------------------------------------------------------------------------------------
                            LinearLayout tipLn = new LinearLayout(MainActivity.mContext);
                            tipLn.setLayoutParams(matchParentParams);
                            tipLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView tipLeftTv = new TextView(MainActivity.mContext);
                            tipLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            tipLeftTv.setText("Tip");
                            tipLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(tipLeftTv);
                            tipLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            tipLn.addView(tipLeftTv);

                            TextView tipRightTv = new TextView(MainActivity.mContext);
                            tipRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            tipRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(str_tipamount));
                            tipRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(tipRightTv);
                            tipRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            tipLn.addView(tipRightTv);

                            printingLn.addView(tipLn);
                            // ---------------------------------------------------------------------------------------------------------------------------------

                            // Grand total 에서 tip 빼기
                            // Grand Total Amount ---------------------------------------------------------------------------------------------------------------
                            double tempTotalAmount = GlobalMemberValues.getDoubleAtString(str_totalamount);// + GlobalMemberValues.getDoubleAtString(str_tipamount);

                            if (str_reprintyn == "N" || str_reprintyn.equals("N")) {
                                LinearLayout grandtotalamountLn = new LinearLayout(MainActivity.mContext);
                                grandtotalamountLn.setLayoutParams(matchParentParams);
                                grandtotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView grandtotalamountLeftTv = new TextView(MainActivity.mContext);
                                grandtotalamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                grandtotalamountLeftTv.setText("Grand Total");
                                grandtotalamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(grandtotalamountLeftTv);
                                grandtotalamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                grandtotalamountLn.addView(grandtotalamountLeftTv);

                                TextView grandtotalamountRightTv = new TextView(MainActivity.mContext);
                                grandtotalamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                grandtotalamountRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(tempTotalAmount + ""));
                                grandtotalamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(grandtotalamountRightTv);
                                grandtotalamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                grandtotalamountLn.addView(grandtotalamountRightTv);

                                printingLn.addView(grandtotalamountLn);
                            }
                            // ---------------------------------------------------------------------------------------------------------------------------------

                            // 점선 ----------------------------------------------------------------------------------------------------------------------------
                            printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                            // ---------------------------------------------------------------------------------------------------------------------------------
                        }
                    } else {
//                        if (mTotalTipAmount[0] > 0) {
                        if (GlobalMemberValues.getDoubleAtString(str_tipamount) > 0) {
                            // tip ------------------------------------------------------------------------------------------------------------------------------
                            LinearLayout tipLn = new LinearLayout(MainActivity.mContext);
                            tipLn.setLayoutParams(matchParentParams);
                            tipLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView tipLeftTv = new TextView(MainActivity.mContext);
                            tipLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            tipLeftTv.setText("Tip");
                            tipLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(tipLeftTv);
                            tipLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            tipLn.addView(tipLeftTv);

                            TextView tipRightTv = new TextView(MainActivity.mContext);
                            tipRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
//                            tipRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(mTotalTipAmount[0] + ""));
                            tipRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(str_tipamount));
                            tipRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(tipRightTv);
                            tipRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            tipLn.addView(tipRightTv);

                            printingLn.addView(tipLn);
                            // ---------------------------------------------------------------------------------------------------------------------------------

                            // 점선 ----------------------------------------------------------------------------------------------------------------------------
                            printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                            // ---------------------------------------------------------------------------------------------------------------------------------
                        }
                    }
                }

                // card
                if (jsonArray_creditcardtransaction.length() != 0) {

                    int cnt = jsonArray_creditcardtransaction.length();
                    for (int i = 0; i < cnt; i++) {
                        String strFilePath = "";        // 서명 이미지 경로

                        try {
                            JSONObject dic_card_item = jsonArray_creditcardtransaction.getJSONObject(i);
                            str_cardchangeamount = dic_card_item.getString("chargeamount");
                            str_cardtype = dic_card_item.getString("cardtype");

                            str_creditcardnumber = dic_card_item.getString("creditcardnumber");
                            str_cardrefnumber = dic_card_item.getString("cardrefnumber");
                            str_cardauthnumber = dic_card_item.getString("cardauthnumber");

                            if (dic_card_item.toString().contains("cardsalesignatureimageyn")) {
                                str_cardsalesignatureimageyn = dic_card_item.getString("cardsalesignatureimageyn");
                            } else {
                                str_cardsalesignatureimageyn = "N";
                            }

                            if (dic_card_item.toString().contains("cardaid")){
                                str_cardaid = dic_card_item.getString("cardaid");
                            } else {
                                str_cardaid = "";
                            }

                            if (dic_card_item.toString().contains("cardtvr")){
                                str_cardtvr = dic_card_item.getString("cardtvr");
                            } else {
                                str_cardtvr = "";
                            }

                            if (dic_card_item.toString().contains("cardtsi")){
                                str_cardtsi = dic_card_item.getString("cardtsi");
                            } else {
                                str_cardtsi = "";
                            }

                            if (dic_card_item.toString().contains("cardsalonsalescardidx")){
                                str_cardsalonsalescardidx = dic_card_item.getString("cardsalonsalescardidx");
                            } else {
                                str_cardsalonsalescardidx = "";
                            }

                            if (dic_card_item.toString().contains("cardtipamount")){
                                str_cardtipamount = dic_card_item.getString("cardtipamount");
                            } else {
                                str_cardtipamount = "0";
                            }

                            // add up PLNameOnCard
                            if (dic_card_item.toString().contains("cardholder")){
                                str_cardholder = dic_card_item.getString("cardholder");
                            } else {
                                str_cardholder = "";
                            }


                        } catch (JSONException e) {
                            e.printStackTrace();
                        }

                        TextView creditcardtranstitleTv = new TextView(MainActivity.mContext);
                        creditcardtranstitleTv.setLayoutParams(matchParentParams);
                        creditcardtranstitleTv.setGravity(Gravity.CENTER);
                        creditcardtranstitleTv.setText("****** Credit Card Transaction ******");
                        creditcardtranstitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(creditcardtranstitleTv);
                        printingLn.addView(creditcardtranstitleTv);

                        // Card Type ------------------------------------------------------------------------------------------------------------------------
                        LinearLayout cardtranscardtypeLn = new LinearLayout(MainActivity.mContext);
                        cardtranscardtypeLn.setLayoutParams(matchParentParams);
                        cardtranscardtypeLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView cardtypeLeftTv = new TextView(MainActivity.mContext);
                        cardtypeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        cardtypeLeftTv.setText("Card Type");
                        cardtypeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(cardtypeLeftTv);
                        cardtypeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        cardtranscardtypeLn.addView(cardtypeLeftTv);

                        TextView cardTypeRightTv = new TextView(MainActivity.mContext);
                        cardTypeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        cardTypeRightTv.setText(str_cardtype);
                        cardTypeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(cardTypeRightTv);
                        cardTypeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        cardtranscardtypeLn.addView(cardTypeRightTv);

                        printingLn.addView(cardtranscardtypeLn);
                        // ---------------------------------------------------------------------------------------------------------------------------------

                        // Card Number ---------------------------------------------------------------------------------------------------------------------
                        LinearLayout cardtranscardNumLn = new LinearLayout(MainActivity.mContext);
                        cardtranscardNumLn.setLayoutParams(matchParentParams);
                        cardtranscardNumLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView cardNumLeftTv = new TextView(MainActivity.mContext);
                        cardNumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        cardNumLeftTv.setText("Credit Card#");
                        cardNumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(cardNumLeftTv);
                        cardNumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        cardtranscardNumLn.addView(cardNumLeftTv);

                        TextView cardNumRightTv = new TextView(MainActivity.mContext);
                        cardNumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        cardNumRightTv.setText(str_creditcardnumber);
                        cardNumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(cardNumRightTv);
                        cardNumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        cardtranscardNumLn.addView(cardNumRightTv);

                        printingLn.addView(cardtranscardNumLn);
                        // ---------------------------------------------------------------------------------------------------------------------------------

                        // Charge Amount ---------------------------------------------------------------------------------------------------------------------
                        LinearLayout cardtranschargeAmountLn = new LinearLayout(MainActivity.mContext);
                        cardtranschargeAmountLn.setLayoutParams(matchParentParams);
                        cardtranschargeAmountLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView chargeAmountLeftTv = new TextView(MainActivity.mContext);
                        chargeAmountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        chargeAmountLeftTv.setText("Charge Amount");
                        chargeAmountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(chargeAmountLeftTv);
                        chargeAmountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        cardtranschargeAmountLn.addView(chargeAmountLeftTv);

                        if (paramPrintingType.equals("void") || paramPrintingType.equals("return")) {
                            str_cardchangeamount = combineStringForVoidPrint(str_cardchangeamount);
                        }

                        TextView chargeAmountRightTv = new TextView(MainActivity.mContext);
                        chargeAmountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        chargeAmountRightTv.setText(finalTempDollarStr + str_cardchangeamount);
                        chargeAmountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(chargeAmountRightTv);
                        chargeAmountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        cardtranschargeAmountLn.addView(chargeAmountRightTv);

                        printingLn.addView(cardtranschargeAmountLn);
                        // ---------------------------------------------------------------------------------------------------------------------------------

                        // Card Auth# ----------------------------------------------------------------------------------------------------------------------
                        LinearLayout cardtranscardauthnumLn = new LinearLayout(MainActivity.mContext);
                        cardtranscardauthnumLn.setLayoutParams(matchParentParams);
                        cardtranscardauthnumLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView cardauthnumLeftTv = new TextView(MainActivity.mContext);
                        cardauthnumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        cardauthnumLeftTv.setText("Card Auth#");
                        cardauthnumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(cardauthnumLeftTv);
                        cardauthnumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        cardtranscardauthnumLn.addView(cardauthnumLeftTv);

                        TextView cardauthnumRightTv = new TextView(MainActivity.mContext);
                        cardauthnumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        cardauthnumRightTv.setText(str_cardauthnumber);
                        cardauthnumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(cardauthnumRightTv);
                        cardauthnumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        cardtranscardauthnumLn.addView(cardauthnumRightTv);

                        printingLn.addView(cardtranscardauthnumLn);
                        // ---------------------------------------------------------------------------------------------------------------------------------

                        // Card cardholder# ----------------------------------------------------------------------------------------------------------------------
                        LinearLayout cardtranscardcardholderLn = new LinearLayout(MainActivity.mContext);
                        cardtranscardcardholderLn.setLayoutParams(matchParentParams);
                        cardtranscardcardholderLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView cardholdernumLeftTv = new TextView(MainActivity.mContext);
                        cardholdernumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        cardholdernumLeftTv.setText("Card Holder Name");
                        cardholdernumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(cardholdernumLeftTv);
                        cardholdernumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        cardtranscardcardholderLn.addView(cardholdernumLeftTv);

                        TextView cardholdernumRightTv = new TextView(MainActivity.mContext);
                        cardholdernumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        cardholdernumRightTv.setText(str_cardholder);
                        cardholdernumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(cardholdernumRightTv);
                        cardholdernumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        cardtranscardcardholderLn.addView(cardholdernumRightTv);

                        printingLn.addView(cardtranscardcardholderLn);
                        // ---------------------------------------------------------------------------------------------------------------------------------

                        // Card Ref# -----------------------------------------------------------------------------------------------------------------------
                        LinearLayout cardtranscardrefnumLn = new LinearLayout(MainActivity.mContext);
                        cardtranscardrefnumLn.setLayoutParams(matchParentParams);
                        cardtranscardrefnumLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView cardrefnumLeftTv = new TextView(MainActivity.mContext);
                        cardrefnumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        cardrefnumLeftTv.setText("Card Ref#");
                        cardrefnumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(cardrefnumLeftTv);
                        cardrefnumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        cardtranscardrefnumLn.addView(cardrefnumLeftTv);

                        TextView cardrefnumRightTv = new TextView(MainActivity.mContext);
                        cardrefnumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        cardrefnumRightTv.setText(str_cardrefnumber);
                        cardrefnumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(cardrefnumRightTv);
                        cardrefnumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        cardtranscardrefnumLn.addView(cardrefnumRightTv);

                        printingLn.addView(cardtranscardrefnumLn);
                        // ---------------------------------------------------------------------------------------------------------------------------------

                        if (str_cardaid.length() != 0){
                            // AID -------------------------------------------------------------------------------------------------------------------------
                            LinearLayout cardtransaidnumLn = new LinearLayout(MainActivity.mContext);
                            cardtransaidnumLn.setLayoutParams(matchParentParams);
                            cardtransaidnumLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView aidLeftTv = new TextView(MainActivity.mContext);
                            aidLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            aidLeftTv.setText("AID");
                            aidLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(aidLeftTv);
                            aidLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            cardtransaidnumLn.addView(aidLeftTv);

                            TextView aidRightTv = new TextView(MainActivity.mContext);
                            aidRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            aidRightTv.setText(str_cardaid);
                            aidRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(aidRightTv);
                            aidRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            cardtransaidnumLn.addView(aidRightTv);

                            printingLn.addView(cardtransaidnumLn);
                            // ---------------------------------------------------------------------------------------------------------------------------------
                        }
                        if (str_cardtvr.length() != 0){
                            // TVR -------------------------------------------------------------------------------------------------------------------------
                            LinearLayout cardtranstvrnumLn = new LinearLayout(MainActivity.mContext);
                            cardtranstvrnumLn.setLayoutParams(matchParentParams);
                            cardtranstvrnumLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView tvrLeftTv = new TextView(MainActivity.mContext);
                            tvrLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            tvrLeftTv.setText("TVR");
                            tvrLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(tvrLeftTv);
                            tvrLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            cardtranstvrnumLn.addView(tvrLeftTv);

                            TextView tvrRightTv = new TextView(MainActivity.mContext);
                            tvrRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            tvrRightTv.setText(str_cardtvr);
                            tvrRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(tvrRightTv);
                            tvrRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            cardtranstvrnumLn.addView(tvrRightTv);

                            printingLn.addView(cardtranstvrnumLn);
                            // ---------------------------------------------------------------------------------------------------------------------------------
                        }
                        if (str_cardtsi.length() != 0){
                            // TSI -------------------------------------------------------------------------------------------------------------------------
                            LinearLayout cardtranstsinumLn = new LinearLayout(MainActivity.mContext);
                            cardtranstsinumLn.setLayoutParams(matchParentParams);
                            cardtranstsinumLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView tsiLeftTv = new TextView(MainActivity.mContext);
                            tsiLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            tsiLeftTv.setText("TSI            : ");
                            tsiLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(tsiLeftTv);
                            tsiLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            cardtranstsinumLn.addView(tsiLeftTv);

                            TextView tsiRightTv = new TextView(MainActivity.mContext);
                            tsiRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            tsiRightTv.setText(str_cardtsi);
                            tsiRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(tsiRightTv);
                            tsiRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            cardtranstsinumLn.addView(tsiRightTv);

                            printingLn.addView(cardtranstsinumLn);
                            // ---------------------------------------------------------------------------------------------------------------------------------

                        }

                        // 점선 ----------------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                        // ---------------------------------------------------------------------------------------------------------------------------------

//                        if (str_reprintyn == "N" || str_reprintyn.equals("N")) {
                        if (paramCusMer.equals("merchant") || str_reprintyn == "N" || str_reprintyn.equals("N")) {
                            if (GlobalMemberValues.isSignedPrintSeperately()) {
                                // 서명 이미지 프린트 ---------------------------------------------------------------------------------
                                strFilePath = Environment.getExternalStoragePublicDirectory(GlobalMemberValues.SIGNEDIMAGE_FOLDER) + "/sign_0_0000_0.png";
                                // 서명 이미지가 있을 경우, 서명이미지 프린트는 리프린트가 아닐 경우에만...
                                if (str_reprintyn == "N" || str_reprintyn.equals("N")) {
                                    if (str_cardsalesignatureimageyn == "Y" || str_cardsalesignatureimageyn.equals("Y")) {
                                        if (!GlobalMemberValues.isStrEmpty(str_cardsalonsalescardidx) &&
                                                !GlobalMemberValues.isStrEmpty(str_cardauthnumber) &&
                                                !GlobalMemberValues.isStrEmpty(str_cardrefnumber)) {
                                            strFilePath = Environment.getExternalStoragePublicDirectory(GlobalMemberValues.SIGNEDIMAGE_FOLDER) +
                                                    "/sign_" + str_cardsalonsalescardidx + "_" + str_cardauthnumber + "_" + str_cardrefnumber + ".png";

                                            if (new File(strFilePath).exists()) {
                                                tempArrListStrFile.add(strFilePath);
                                            }
                                        }
                                    }
                                }
                                GlobalMemberValues.logWrite("signatureimagepath", "strFilePath : " + strFilePath + "\n");
                            } else {

                                if (paramPrintingType.equals("sales")) {
                                    if (GlobalMemberValues.getDoubleAtString(str_cardtipamount) > 0) {
                                        GlobalMemberValues.logWrite("makingViewLog", "카드팁이 있는 경우..." + "\n");

                                        double tempTotalAmount = GlobalMemberValues.getDoubleAtString(str_cardchangeamount) + GlobalMemberValues.getDoubleAtString(str_cardtipamount);
                                        mTotalTipAmount[0] = mTotalTipAmount[0] + GlobalMemberValues.getDoubleAtString(str_cardtipamount);

                                        // card tip -----------------------------------------------------------------------------------------------------------------------
                                        LinearLayout cardTipLn = new LinearLayout(MainActivity.mContext);
                                        cardTipLn.setLayoutParams(matchParentParams);
                                        cardTipLn.setOrientation(LinearLayout.HORIZONTAL);

                                        TextView cardtipleftTv = new TextView(MainActivity.mContext);
                                        cardtipleftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                        cardtipleftTv.setText("Tip");
                                        cardtipleftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(cardtipleftTv);
                                        cardtipleftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                        cardTipLn.addView(cardtipleftTv);

                                        TextView cardtiprightTv = new TextView(MainActivity.mContext);
                                        cardtiprightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                        cardtiprightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(str_cardtipamount + ""));
                                        cardtiprightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(cardtiprightTv);
                                        cardtiprightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                        cardTipLn.addView(cardtiprightTv);

                                        printingLn.addView(cardTipLn);
                                        // ---------------------------------------------------------------------------------------------------------------------------------

                                        // Grand Total Amount --------------------------------------------------------------------------------------------------------------
                                        LinearLayout grandtotalamountLn = new LinearLayout(MainActivity.mContext);
                                        grandtotalamountLn.setLayoutParams(matchParentParams);
                                        grandtotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                                        TextView grandtotalamountleftTv = new TextView(MainActivity.mContext);
                                        grandtotalamountleftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                                        grandtotalamountleftTv.setText("Grand Total Amount");
                                        grandtotalamountleftTv.setText("Total Amount");
                                        grandtotalamountleftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(grandtotalamountleftTv);
                                        grandtotalamountleftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                        grandtotalamountLn.addView(grandtotalamountleftTv);

                                        TextView grandtotalamountrightTv = new TextView(MainActivity.mContext);
                                        grandtotalamountrightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                        grandtotalamountrightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(tempTotalAmount + ""));
                                        grandtotalamountrightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(grandtotalamountrightTv);
                                        grandtotalamountrightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                        grandtotalamountLn.addView(grandtotalamountrightTv);

                                        printingLn.addView(grandtotalamountLn);
                                        // ---------------------------------------------------------------------------------------------------------------------------------

                                    } else {
                                        GlobalMemberValues.logWrite("makingViewLog", "카드팁이 없는 경우..." + "\n");
                                        if (GlobalMemberValues.isTiplineOntheReceipt()) {
                                            GlobalMemberValues.logWrite("makingViewLog", "카드팁이 없으면서 영수증에 팁라인 보여주기..." + "\n");

                                            if (paramCusMer.equals("merchant")) {
                                                double tempTotalAmount = GlobalMemberValues.getDoubleAtString(str_totalamount);
//
                                                String str_suggestedtip_type = GlobalMemberValues.getValueOnReceiptSetting("tip_type",receiptType);

//                                                pagerNoTv.setText(spanString);

                                                float textsize = GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER; // normal size
                                                int i_cardtipTv_size = 60;
                                                int i_cardtipTv1_size = 80;
                                                String str_suggestedtip_size = GlobalMemberValues.getValueOnReceiptSetting("tip_size",receiptType);
                                                switch (str_suggestedtip_size){
                                                    case "1" :  // small
                                                        textsize = textsize - 2;
                                                        i_cardtipTv_size = i_cardtipTv_size - 2;
                                                        i_cardtipTv1_size = i_cardtipTv1_size - 2;
                                                        break;
                                                    case "2":   // medium
                                                        break;
                                                    case "3":   // large
                                                        textsize = textsize + 4;
                                                        i_cardtipTv_size = i_cardtipTv_size + 4;
                                                        i_cardtipTv1_size = i_cardtipTv1_size + 4;
                                                        break;
                                                    case "4":   // x large
                                                        textsize = textsize + 8;
                                                        i_cardtipTv_size = i_cardtipTv_size + 8;
                                                        i_cardtipTv1_size = i_cardtipTv1_size + 8;
                                                        break;
                                                    case "5":   // xx large
                                                        textsize = textsize + 12;
                                                        i_cardtipTv_size = i_cardtipTv_size + 12;
                                                        i_cardtipTv1_size = i_cardtipTv1_size + 12;
                                                        break;
                                                }

//

                                                ArrayList<String> tempTipPersents = GlobalMemberValues.getTipPersents();

                                                LinearLayout cardTipTopLn = new LinearLayout(MainActivity.mContext);
                                                cardTipTopLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                                cardTipTopLn.setOrientation(LinearLayout.HORIZONTAL);

                                                TextView cardtipTv = new TextView(MainActivity.mContext);
                                                cardtipTv.setGravity(Gravity.CENTER);

                                                SpannableString spanString = new SpannableString("Suggested Tip");
                                                switch (str_suggestedtip_type){
                                                    case "1" :
                                                        break;
                                                    case "2":
                                                        spanString.setSpan(new StyleSpan(Typeface.BOLD), 0, spanString.length(), 0);
                                                        break;
                                                    case "3":
                                                        spanString.setSpan(new StyleSpan(Typeface.ITALIC), 0, spanString.length(), 0);
                                                        break;
                                                }
                                                cardtipTv.setText(spanString);
                                                cardtipTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                                                GlobalMemberValues.setTextStyleOnClover(cardtipTv);
                                                cardtipTv.setLayoutParams(new LinearLayout.LayoutParams(0, i_cardtipTv_size, 1.0f));
                                                cardTipTopLn.addView(cardtipTv);
                                                printingLn.addView(cardTipTopLn);


                                                LinearLayout cardTipLn = new LinearLayout(MainActivity.mContext);
                                                cardTipLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 180));

                                                cardTipLn.setOrientation(LinearLayout.VERTICAL);

                                                for (String persent : tempTipPersents){
                                                    double d_tempTotalAmount = tempTotalAmount;
                                                    double d_temp_subtotal_usein_cashdiscount = d_temp_subtotal;
                                                    if (GlobalMemberValues.getSuggestionTipType().equals("BT")){

                                                    } else {
                                                        // AT
                                                        String temp_tax = str_tax;
                                                        temp_tax = temp_tax.replace("$","");
                                                        double d_temp_tax = Double.parseDouble(temp_tax);
                                                        d_temp_subtotal_usein_cashdiscount = d_temp_subtotal_usein_cashdiscount + d_temp_tax;

                                                    }

                                                    Double aDouble = (d_temp_subtotal_usein_cashdiscount * GlobalMemberValues.getDoubleAtString(persent)) / 100.00;
                                                    Double d_temp_Total_add_tip = (d_tempTotalAmount + aDouble);


                                                    LinearLayout ln_tip_line_view = new LinearLayout(MainActivity.mContext);
                                                    LinearLayout.LayoutParams ln_tip_line_view_params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                                                    ln_tip_line_view_params.setMargins(0,0,0,10);
                                                    ln_tip_line_view.setLayoutParams(ln_tip_line_view_params);
                                                    ln_tip_line_view.setOrientation(LinearLayout.HORIZONTAL);

                                                    TextView cardtipTv1 = new TextView(MainActivity.mContext);
//                                                cardtipTv1.setGravity(Gravity.BOTTOM | Gravity.RIGHT);
                                                    TextView cardtipTv2 = new TextView(MainActivity.mContext);
                                                    TextView cardtipTv3 = new TextView(MainActivity.mContext);

//                                                SpannableString spanString_tip = new SpannableString(persent + "% \t\t [ Tip : $ " + GlobalMemberValues.getCommaStringForDouble(aDouble + "") + " \t\t Total : $ "+ GlobalMemberValues.getCommaStringForDouble(d_temp_Total_add_tip + "") + " ]");
//                                                switch (str_suggestedtip_type){
//                                                    case "1" :
//                                                        break;
//                                                    case "2":
//                                                        spanString_tip.setSpan(new StyleSpan(Typeface.BOLD), 0, spanString_tip.length(), 0);
//                                                        break;
//                                                    case "3":
//                                                        spanString_tip.setSpan(new StyleSpan(Typeface.ITALIC), 0, spanString_tip.length(), 0);
//                                                        break;
//                                                }

//                                                cardtipTv1.setText(spanString_tip);
                                                    View square = new View(MainActivity.mContext);
                                                    square.setBackgroundResource(R.drawable.roundlayout_line_black2);
                                                    square.setLayoutParams(new LinearLayout.LayoutParams(30, 30));

                                                    cardtipTv1.setText(" "+persent + "%");
                                                    cardtipTv2.setText("[ Tip : $ " + GlobalMemberValues.getCommaStringForDouble(aDouble + ""));
                                                    cardtipTv3.setText("Total : $ "+ GlobalMemberValues.getCommaStringForDouble(d_temp_Total_add_tip + "") + " ]");
                                                    cardtipTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                                                    GlobalMemberValues.setTextStyleOnClover(cardtipTv1);
                                                    cardtipTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                                                    GlobalMemberValues.setTextStyleOnClover(cardtipTv2);
                                                    cardtipTv3.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                                                    GlobalMemberValues.setTextStyleOnClover(cardtipTv3);
                                                    cardtipTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.WRAP_CONTENT, 0.5f));
                                                    cardtipTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.WRAP_CONTENT, 1.0f));
                                                    cardtipTv3.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.WRAP_CONTENT, 1.0f));
                                                    ln_tip_line_view.addView(square);
                                                    ln_tip_line_view.addView(cardtipTv1);
                                                    ln_tip_line_view.addView(cardtipTv2);
                                                    ln_tip_line_view.addView(cardtipTv3);

                                                    cardTipLn.addView(ln_tip_line_view);
                                                }

                                                printingLn.addView(cardTipLn);

                                                LinearLayout ln_tip_line_view = new LinearLayout(MainActivity.mContext);
                                                ln_tip_line_view.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                                ln_tip_line_view.setOrientation(LinearLayout.HORIZONTAL);
                                                TextView cardtipTv1 = new TextView(MainActivity.mContext);
                                                View square = new View(MainActivity.mContext);
                                                square.setBackgroundResource(R.drawable.roundlayout_line_black2);
                                                square.setLayoutParams(new LinearLayout.LayoutParams(30, 30));
                                                cardtipTv1.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                                cardtipTv1.setText(" CUSTOM");
                                                cardtipTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                                                GlobalMemberValues.setTextStyleOnClover(cardtipTv1);
                                                ln_tip_line_view.addView(square);
                                                ln_tip_line_view.addView(cardtipTv1);
                                                printingLn.addView(ln_tip_line_view);

                                            }



                                            // tip -----------------------------------------------------------------------------------------------------------------------
                                            LinearLayout cardTipLn = new LinearLayout(MainActivity.mContext);
                                            cardTipLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                            cardTipLn.setOrientation(LinearLayout.HORIZONTAL);

                                            TextView cardtipleftTv = new TextView(MainActivity.mContext);
                                            cardtipleftTv.setGravity(Gravity.BOTTOM | Gravity.RIGHT);
                                            cardtipleftTv.setText("Tip : ");
                                            cardtipleftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                            GlobalMemberValues.setTextStyleOnClover(cardtipleftTv);
                                            cardtipleftTv.setLayoutParams(new LinearLayout.LayoutParams(0, 60, 1.0f));
                                            cardTipLn.addView(cardtipleftTv);

                                            TextView cardtiprightTv = new TextView(MainActivity.mContext);
                                            cardtiprightTv.setGravity(Gravity.BOTTOM | Gravity.LEFT);
                                            cardtiprightTv.setText("______________________________");
                                            cardtiprightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                            GlobalMemberValues.setTextStyleOnClover(cardtiprightTv);
                                            cardtiprightTv.setLayoutParams(new LinearLayout.LayoutParams(0, 60, 2.0f));
                                            cardTipLn.addView(cardtiprightTv);

                                            printingLn.addView(cardTipLn);
                                            // ---------------------------------------------------------------------------------------------------------------------------------

                                            // card grand total ----------------------------------------------------------------------------------------------------------------
                                            LinearLayout cardgrandtotalLn = new LinearLayout(MainActivity.mContext);
                                            cardgrandtotalLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                            cardgrandtotalLn.setOrientation(LinearLayout.HORIZONTAL);

                                            TextView cardgrandtotalleftTv = new TextView(MainActivity.mContext);
                                            cardgrandtotalleftTv.setGravity(Gravity.BOTTOM | Gravity.RIGHT);
                                            cardgrandtotalleftTv.setText("Total Amount: ");
                                            cardgrandtotalleftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                            GlobalMemberValues.setTextStyleOnClover(cardgrandtotalleftTv);
                                            cardgrandtotalleftTv.setLayoutParams(new LinearLayout.LayoutParams(0, 60, 1.0f));
                                            cardgrandtotalLn.addView(cardgrandtotalleftTv);

                                            TextView cardgrandtotalrightTv = new TextView(MainActivity.mContext);
                                            cardgrandtotalrightTv.setGravity(Gravity.BOTTOM | Gravity.LEFT);
                                            cardgrandtotalrightTv.setText("______________________________");
                                            cardgrandtotalrightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                            GlobalMemberValues.setTextStyleOnClover(cardgrandtotalrightTv);
                                            cardgrandtotalrightTv.setLayoutParams(new LinearLayout.LayoutParams(0, 60, 2.0f));
                                            cardgrandtotalLn.addView(cardgrandtotalrightTv);

                                            printingLn.addView(cardgrandtotalLn);
                                            // ---------------------------------------------------------------------------------------------------------------------------------
                                        } else {
                                            // card grand total ----------------------------------------------------------------------------------------------------------------
                                            LinearLayout grandtotalamountLn = new LinearLayout(MainActivity.mContext);
                                            grandtotalamountLn.setLayoutParams(matchParentParams);
                                            grandtotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                                            TextView grandtotalamountleftTv = new TextView(MainActivity.mContext);
                                            grandtotalamountleftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                                        grandtotalamountleftTv.setText("Grand Total Amount");
                                            grandtotalamountleftTv.setText("Total Amount");
                                            grandtotalamountleftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                            GlobalMemberValues.setTextStyleOnClover(grandtotalamountleftTv);
                                            grandtotalamountleftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                            grandtotalamountLn.addView(grandtotalamountleftTv);


                                            TextView grandtotalamountrightTv = new TextView(MainActivity.mContext);
                                            grandtotalamountrightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                            grandtotalamountrightTv.setText(finalTempDollarStr + str_cardchangeamount);
                                            grandtotalamountrightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                            GlobalMemberValues.setTextStyleOnClover(grandtotalamountrightTv);
                                            grandtotalamountrightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                            grandtotalamountLn.addView(grandtotalamountrightTv);

                                            printingLn.addView(grandtotalamountLn);
                                            // ---------------------------------------------------------------------------------------------------------------------------------
                                        }
                                    }
                                }

                                // 서명 이미지 프린트 ---------------------------------------------------------------------------------
                                if (paramPrintingType.equals("sales") && paramCusMer.equals("merchant")) {
                                    strFilePath = Environment.getExternalStoragePublicDirectory(GlobalMemberValues.SIGNEDIMAGE_FOLDER) + "/sign_0_0000_0.png";
                                    // 서명 이미지가 있을 경우, 서명이미지 프린트는 리프린트가 아닐 경우에만...
                                    if (str_reprintyn == "N" || str_reprintyn.equals("N")) {
                                        if (str_cardsalesignatureimageyn == "Y" || str_cardsalesignatureimageyn.equals("Y")) {
                                            if (!GlobalMemberValues.isStrEmpty(str_cardsalonsalescardidx) &&
                                                    !GlobalMemberValues.isStrEmpty(str_cardauthnumber) &&
                                                    !GlobalMemberValues.isStrEmpty(str_cardrefnumber)) {
                                                strFilePath = Environment.getExternalStoragePublicDirectory(GlobalMemberValues.SIGNEDIMAGE_FOLDER) +
                                                        "/sign_" + str_cardsalonsalescardidx + "_" + str_cardauthnumber + "_" + str_cardrefnumber + ".png";
                                            }
                                        }
                                    }

                                    GlobalMemberValues.logWrite("signatureimagepath", "strFilePath : " + strFilePath + "\n");



                                    if (new File(strFilePath).exists()) {
                                        str_signatureTxt = "";

                                        if (GlobalMemberValues.isSignedPrintYN()) {
                                            ImageView signImg = new ImageView(MainActivity.mContext);
                                            signImg.setLayoutParams(new LinearLayout.LayoutParams(510, 150));
                                            signImg.setImageBitmap(BitmapFactory.decodeFile(strFilePath));
                                            //signImg.setScaleType(ImageView.ScaleType.FIT_CENTER);
                                            printingLn.addView(signImg);
                                        }
                                    } else {
                                        // 프린트 실행 (2) ------------------------------------------------------------
                                        str_signatureTxt = "     ";

                                        TextView cardsignspaceTv = new TextView(MainActivity.mContext);
                                        cardsignspaceTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                                        cardsignspaceTv.setGravity(Gravity.CENTER);
                                        cardsignspaceTv.setText(str_signatureTxt);
                                        cardsignspaceTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(cardsignspaceTv);
                                        printingLn.addView(cardsignspaceTv);
                                    }

                                    if (GlobalMemberValues.isSignOnMinPay(str_cardchangeamount)) {
                                        LinearLayout cardsignLn = new LinearLayout(MainActivity.mContext);
                                        cardsignLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                        cardsignLn.setOrientation(LinearLayout.HORIZONTAL);

                                        TextView cardsignleftTv = new TextView(MainActivity.mContext);
                                        cardsignleftTv.setGravity(Gravity.BOTTOM | Gravity.RIGHT);
                                        cardsignleftTv.setText("Signature");
                                        cardsignleftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(cardsignleftTv);
                                        cardsignleftTv.setLayoutParams(new LinearLayout.LayoutParams(0, 60, 1.0f));
                                        cardsignLn.addView(cardsignleftTv);

                                        TextView cardsignrightTv = new TextView(MainActivity.mContext);
                                        cardsignrightTv.setGravity(Gravity.BOTTOM | Gravity.LEFT);
                                        cardsignrightTv.setText("______________________________");
                                        cardsignrightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(cardsignrightTv);
                                        cardsignrightTv.setLayoutParams(new LinearLayout.LayoutParams(0, 60, 2.0f));
                                        cardsignLn.addView(cardsignrightTv);

                                        printingLn.addView(cardsignLn);
                                    }

                                }
                                // -------------------------------------------------------------------------------------------------
                            }
                        }
                    }
                } else if (str_creditcardtendered.length() != 0 && GlobalMemberValues.getDoubleAtString(str_creditcardtendered) > 0 && !GlobalMemberValues.isPaymentByBills) {
                    if (paramCusMer.equals("merchant") || str_reprintyn == "N" || str_reprintyn.equals("N")) {
                        String strFilePath = "";        // 서명 이미지 경로
                        if (GlobalMemberValues.isSignedPrintSeperately()) {
                            // 서명 이미지 프린트 ---------------------------------------------------------------------------------
                            strFilePath = Environment.getExternalStoragePublicDirectory(GlobalMemberValues.SIGNEDIMAGE_FOLDER) + "/sign_0_0000_0.png";
                            // 서명 이미지가 있을 경우, 서명이미지 프린트는 리프린트가 아닐 경우에만...
                            if (str_reprintyn == "N" || str_reprintyn.equals("N")) {
                                if (str_cardsalesignatureimageyn == "Y" || str_cardsalesignatureimageyn.equals("Y")) {
                                    if (!GlobalMemberValues.isStrEmpty(str_cardsalonsalescardidx) &&
                                            !GlobalMemberValues.isStrEmpty(str_cardauthnumber) &&
                                            !GlobalMemberValues.isStrEmpty(str_cardrefnumber)) {
                                        strFilePath = Environment.getExternalStoragePublicDirectory(GlobalMemberValues.SIGNEDIMAGE_FOLDER) +
                                                "/sign_" + str_cardsalonsalescardidx + "_" + str_cardauthnumber + "_" + str_cardrefnumber + ".png";

                                        if (new File(strFilePath).exists()) {
                                            tempArrListStrFile.add(strFilePath);
                                        }
                                    }
                                }
                            }
                            GlobalMemberValues.logWrite("signatureimagepath", "strFilePath : " + strFilePath + "\n");
                        } else {

                            if (paramPrintingType.equals("sales")) {
                                if (GlobalMemberValues.getDoubleAtString(str_cardtipamount) > 0) {
                                    GlobalMemberValues.logWrite("makingViewLog", "카드팁이 있는 경우..." + "\n");

                                    double tempTotalAmount = GlobalMemberValues.getDoubleAtString(str_cardchangeamount) + GlobalMemberValues.getDoubleAtString(str_cardtipamount);
                                    mTotalTipAmount[0] = mTotalTipAmount[0] + GlobalMemberValues.getDoubleAtString(str_cardtipamount);

                                    // card tip -----------------------------------------------------------------------------------------------------------------------
                                    LinearLayout cardTipLn = new LinearLayout(MainActivity.mContext);
                                    cardTipLn.setLayoutParams(matchParentParams);
                                    cardTipLn.setOrientation(LinearLayout.HORIZONTAL);

                                    TextView cardtipleftTv = new TextView(MainActivity.mContext);
                                    cardtipleftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                    cardtipleftTv.setText("Tip");
                                    cardtipleftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(cardtipleftTv);
                                    cardtipleftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                    cardTipLn.addView(cardtipleftTv);

                                    TextView cardtiprightTv = new TextView(MainActivity.mContext);
                                    cardtiprightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                    cardtiprightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(str_cardtipamount + ""));
                                    cardtiprightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(cardtiprightTv);
                                    cardtiprightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                    cardTipLn.addView(cardtiprightTv);

                                    printingLn.addView(cardTipLn);
                                    // ---------------------------------------------------------------------------------------------------------------------------------

                                    // Grand Total Amount --------------------------------------------------------------------------------------------------------------
                                    LinearLayout grandtotalamountLn = new LinearLayout(MainActivity.mContext);
                                    grandtotalamountLn.setLayoutParams(matchParentParams);
                                    grandtotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                                    TextView grandtotalamountleftTv = new TextView(MainActivity.mContext);
                                    grandtotalamountleftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                                        grandtotalamountleftTv.setText("Grand Total Amount");
                                    grandtotalamountleftTv.setText("Total Amount");
                                    grandtotalamountleftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(grandtotalamountleftTv);
                                    grandtotalamountleftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                    grandtotalamountLn.addView(grandtotalamountleftTv);

                                    TextView grandtotalamountrightTv = new TextView(MainActivity.mContext);
                                    grandtotalamountrightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                    grandtotalamountrightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(tempTotalAmount + ""));
                                    grandtotalamountrightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(grandtotalamountrightTv);
                                    grandtotalamountrightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                    grandtotalamountLn.addView(grandtotalamountrightTv);

                                    printingLn.addView(grandtotalamountLn);
                                    // ---------------------------------------------------------------------------------------------------------------------------------

                                } else {
                                    GlobalMemberValues.logWrite("makingViewLog", "카드팁이 없는 경우..." + "\n");
                                    if (GlobalMemberValues.isTiplineOntheReceipt()) {
                                        GlobalMemberValues.logWrite("makingViewLog", "카드팁이 없으면서 영수증에 팁라인 보여주기..." + "\n");

                                        if (paramCusMer.equals("merchant")) {
                                            double tempTotalAmount = GlobalMemberValues.getDoubleAtString(str_totalamount);
                                            //
                                            String str_suggestedtip_type = GlobalMemberValues.getValueOnReceiptSetting("tip_type",receiptType);

//                                                pagerNoTv.setText(spanString);

                                            float textsize = GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER; // normal size
                                            int i_cardtipTv_size = 60;
                                            int i_cardtipTv1_size = 80;
                                            String str_suggestedtip_size = GlobalMemberValues.getValueOnReceiptSetting("tip_size",receiptType);
                                            switch (str_suggestedtip_size){
                                                case "1" :  // small
                                                    textsize = textsize - 2;
                                                    i_cardtipTv_size = i_cardtipTv_size - 2;
                                                    i_cardtipTv1_size = i_cardtipTv1_size - 2;
                                                    break;
                                                case "2":   // medium
                                                    break;
                                                case "3":   // large
                                                    textsize = textsize + 4;
                                                    i_cardtipTv_size = i_cardtipTv_size + 4;
                                                    i_cardtipTv1_size = i_cardtipTv1_size + 4;
                                                    break;
                                                case "4":   // x large
                                                    textsize = textsize + 8;
                                                    i_cardtipTv_size = i_cardtipTv_size + 8;
                                                    i_cardtipTv1_size = i_cardtipTv1_size + 8;
                                                    break;
                                                case "5":   // xx large
                                                    textsize = textsize + 12;
                                                    i_cardtipTv_size = i_cardtipTv_size + 12;
                                                    i_cardtipTv1_size = i_cardtipTv1_size + 12;
                                                    break;
                                            }

                                            //

                                            ArrayList<String> tempTipPersents = GlobalMemberValues.getTipPersents();

                                            LinearLayout cardTipTopLn = new LinearLayout(MainActivity.mContext);
                                            cardTipTopLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                            cardTipTopLn.setOrientation(LinearLayout.HORIZONTAL);

                                            TextView cardtipTv = new TextView(MainActivity.mContext);
                                            cardtipTv.setGravity(Gravity.CENTER);

                                            SpannableString spanString = new SpannableString("Suggested Tip");
                                            switch (str_suggestedtip_type){
                                                case "1" :
                                                    break;
                                                case "2":
                                                    spanString.setSpan(new StyleSpan(Typeface.BOLD), 0, spanString.length(), 0);
                                                    break;
                                                case "3":
                                                    spanString.setSpan(new StyleSpan(Typeface.ITALIC), 0, spanString.length(), 0);
                                                    break;
                                            }
                                            cardtipTv.setText(spanString);
                                            cardtipTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                                            GlobalMemberValues.setTextStyleOnClover(cardtipTv);
                                            cardtipTv.setLayoutParams(new LinearLayout.LayoutParams(0, i_cardtipTv_size, 1.0f));
                                            cardTipTopLn.addView(cardtipTv);
                                            printingLn.addView(cardTipTopLn);


                                            LinearLayout cardTipLn = new LinearLayout(MainActivity.mContext);
                                            cardTipLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 180));

                                            cardTipLn.setOrientation(LinearLayout.VERTICAL);

                                            for (String persent : tempTipPersents){
                                                double d_tempTotalAmount = tempTotalAmount;
                                                double d_temp_subtotal_usein_cashdiscount = d_temp_subtotal;
                                                if (GlobalMemberValues.getSuggestionTipType().equals("BT")){

                                                } else {
                                                    // AT
                                                    String temp_tax = str_tax;
                                                    temp_tax = temp_tax.replace("$","");
                                                    double d_temp_tax = Double.parseDouble(temp_tax);
                                                    d_temp_subtotal_usein_cashdiscount = d_temp_subtotal_usein_cashdiscount + d_temp_tax;

                                                }

                                                Double aDouble = (d_temp_subtotal_usein_cashdiscount * GlobalMemberValues.getDoubleAtString(persent)) / 100.00;
                                                Double d_temp_Total_add_tip = (d_tempTotalAmount + aDouble);


                                                LinearLayout ln_tip_line_view = new LinearLayout(MainActivity.mContext);
                                                LinearLayout.LayoutParams ln_tip_line_view_params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                                                ln_tip_line_view_params.setMargins(0,0,0,10);
                                                ln_tip_line_view.setLayoutParams(ln_tip_line_view_params);
                                                ln_tip_line_view.setOrientation(LinearLayout.HORIZONTAL);

                                                TextView cardtipTv1 = new TextView(MainActivity.mContext);
//                                                cardtipTv1.setGravity(Gravity.BOTTOM | Gravity.RIGHT);
                                                TextView cardtipTv2 = new TextView(MainActivity.mContext);
                                                TextView cardtipTv3 = new TextView(MainActivity.mContext);

//                                                SpannableString spanString_tip = new SpannableString(persent + "% \t\t [ Tip : $ " + GlobalMemberValues.getCommaStringForDouble(aDouble + "") + " \t\t Total : $ "+ GlobalMemberValues.getCommaStringForDouble(d_temp_Total_add_tip + "") + " ]");
//                                                switch (str_suggestedtip_type){
//                                                    case "1" :
//                                                        break;
//                                                    case "2":
//                                                        spanString_tip.setSpan(new StyleSpan(Typeface.BOLD), 0, spanString_tip.length(), 0);
//                                                        break;
//                                                    case "3":
//                                                        spanString_tip.setSpan(new StyleSpan(Typeface.ITALIC), 0, spanString_tip.length(), 0);
//                                                        break;
//                                                }

//                                                cardtipTv1.setText(spanString_tip);
                                                View square = new View(MainActivity.mContext);
                                                square.setBackgroundResource(R.drawable.roundlayout_line_black2);
                                                square.setLayoutParams(new LinearLayout.LayoutParams(30, 30));

                                                cardtipTv1.setText(" "+persent + "%");
                                                cardtipTv2.setText("[ Tip : $ " + GlobalMemberValues.getCommaStringForDouble(aDouble + ""));
                                                cardtipTv3.setText("Total : $ "+ GlobalMemberValues.getCommaStringForDouble(d_temp_Total_add_tip + "") + " ]");
                                                cardtipTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                                                GlobalMemberValues.setTextStyleOnClover(cardtipTv1);
                                                cardtipTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                                                GlobalMemberValues.setTextStyleOnClover(cardtipTv2);
                                                cardtipTv3.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                                                GlobalMemberValues.setTextStyleOnClover(cardtipTv3);
                                                cardtipTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.WRAP_CONTENT, 0.5f));
                                                cardtipTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.WRAP_CONTENT, 1.0f));
                                                cardtipTv3.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.WRAP_CONTENT, 1.0f));
                                                ln_tip_line_view.addView(square);
                                                ln_tip_line_view.addView(cardtipTv1);
                                                ln_tip_line_view.addView(cardtipTv2);
                                                ln_tip_line_view.addView(cardtipTv3);

                                                cardTipLn.addView(ln_tip_line_view);
                                            }

                                            printingLn.addView(cardTipLn);

                                            LinearLayout ln_tip_line_view = new LinearLayout(MainActivity.mContext);
                                            ln_tip_line_view.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                            ln_tip_line_view.setOrientation(LinearLayout.HORIZONTAL);
                                            TextView cardtipTv1 = new TextView(MainActivity.mContext);
                                            View square = new View(MainActivity.mContext);
                                            square.setBackgroundResource(R.drawable.roundlayout_line_black2);
                                            square.setLayoutParams(new LinearLayout.LayoutParams(30, 30));
                                            cardtipTv1.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                            cardtipTv1.setText(" CUSTOM");
                                            cardtipTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                                            GlobalMemberValues.setTextStyleOnClover(cardtipTv1);
                                            ln_tip_line_view.addView(square);
                                            ln_tip_line_view.addView(cardtipTv1);
                                            printingLn.addView(ln_tip_line_view);

                                        }



                                        // tip -----------------------------------------------------------------------------------------------------------------------
                                        LinearLayout cardTipLn = new LinearLayout(MainActivity.mContext);
                                        cardTipLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                        cardTipLn.setOrientation(LinearLayout.HORIZONTAL);

                                        TextView cardtipleftTv = new TextView(MainActivity.mContext);
                                        cardtipleftTv.setGravity(Gravity.BOTTOM | Gravity.RIGHT);
                                        cardtipleftTv.setText("Tip : ");
                                        cardtipleftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(cardtipleftTv);
                                        cardtipleftTv.setLayoutParams(new LinearLayout.LayoutParams(0, 60, 1.0f));
                                        cardTipLn.addView(cardtipleftTv);

                                        TextView cardtiprightTv = new TextView(MainActivity.mContext);
                                        cardtiprightTv.setGravity(Gravity.BOTTOM | Gravity.LEFT);
                                        cardtiprightTv.setText("______________________________");
                                        cardtiprightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(cardtiprightTv);
                                        cardtiprightTv.setLayoutParams(new LinearLayout.LayoutParams(0, 60, 2.0f));
                                        cardTipLn.addView(cardtiprightTv);

                                        printingLn.addView(cardTipLn);
                                        // ---------------------------------------------------------------------------------------------------------------------------------

                                        // card grand total ----------------------------------------------------------------------------------------------------------------
                                        LinearLayout cardgrandtotalLn = new LinearLayout(MainActivity.mContext);
                                        cardgrandtotalLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                        cardgrandtotalLn.setOrientation(LinearLayout.HORIZONTAL);

                                        TextView cardgrandtotalleftTv = new TextView(MainActivity.mContext);
                                        cardgrandtotalleftTv.setGravity(Gravity.BOTTOM | Gravity.RIGHT);
                                        cardgrandtotalleftTv.setText("Total Amount: ");
                                        cardgrandtotalleftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(cardgrandtotalleftTv);
                                        cardgrandtotalleftTv.setLayoutParams(new LinearLayout.LayoutParams(0, 60, 1.0f));
                                        cardgrandtotalLn.addView(cardgrandtotalleftTv);

                                        TextView cardgrandtotalrightTv = new TextView(MainActivity.mContext);
                                        cardgrandtotalrightTv.setGravity(Gravity.BOTTOM | Gravity.LEFT);
                                        cardgrandtotalrightTv.setText("______________________________");
                                        cardgrandtotalrightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(cardgrandtotalrightTv);
                                        cardgrandtotalrightTv.setLayoutParams(new LinearLayout.LayoutParams(0, 60, 2.0f));
                                        cardgrandtotalLn.addView(cardgrandtotalrightTv);

                                        printingLn.addView(cardgrandtotalLn);
                                        // ---------------------------------------------------------------------------------------------------------------------------------
                                    } else {
                                        // card grand total ----------------------------------------------------------------------------------------------------------------
                                        LinearLayout grandtotalamountLn = new LinearLayout(MainActivity.mContext);
                                        grandtotalamountLn.setLayoutParams(matchParentParams);
                                        grandtotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                                        TextView grandtotalamountleftTv = new TextView(MainActivity.mContext);
                                        grandtotalamountleftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                                        grandtotalamountleftTv.setText("Grand Total Amount");
                                        grandtotalamountleftTv.setText("Total Amount");
                                        grandtotalamountleftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(grandtotalamountleftTv);
                                        grandtotalamountleftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                        grandtotalamountLn.addView(grandtotalamountleftTv);


                                        TextView grandtotalamountrightTv = new TextView(MainActivity.mContext);
                                        grandtotalamountrightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                        grandtotalamountrightTv.setText(finalTempDollarStr + str_cardchangeamount);
                                        grandtotalamountrightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(grandtotalamountrightTv);
                                        grandtotalamountrightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                        grandtotalamountLn.addView(grandtotalamountrightTv);

                                        printingLn.addView(grandtotalamountLn);
                                        // ---------------------------------------------------------------------------------------------------------------------------------
                                    }
                                }
                            }

                            // 서명 이미지 프린트 ---------------------------------------------------------------------------------
                            if (paramPrintingType.equals("sales") && paramCusMer.equals("merchant")) {
                                strFilePath = Environment.getExternalStoragePublicDirectory(GlobalMemberValues.SIGNEDIMAGE_FOLDER) + "/sign_0_0000_0.png";
                                // 서명 이미지가 있을 경우, 서명이미지 프린트는 리프린트가 아닐 경우에만...
                                if (str_reprintyn == "N" || str_reprintyn.equals("N")) {
                                    if (str_cardsalesignatureimageyn == "Y" || str_cardsalesignatureimageyn.equals("Y")) {
                                        if (!GlobalMemberValues.isStrEmpty(str_cardsalonsalescardidx) &&
                                                !GlobalMemberValues.isStrEmpty(str_cardauthnumber) &&
                                                !GlobalMemberValues.isStrEmpty(str_cardrefnumber)) {
                                            strFilePath = Environment.getExternalStoragePublicDirectory(GlobalMemberValues.SIGNEDIMAGE_FOLDER) +
                                                    "/sign_" + str_cardsalonsalescardidx + "_" + str_cardauthnumber + "_" + str_cardrefnumber + ".png";
                                        }
                                    }
                                }

                                GlobalMemberValues.logWrite("signatureimagepath", "strFilePath : " + strFilePath + "\n");



                                if (new File(strFilePath).exists()) {
                                    str_signatureTxt = "";

                                    if (GlobalMemberValues.isSignedPrintYN()) {
                                        ImageView signImg = new ImageView(MainActivity.mContext);
                                        signImg.setLayoutParams(new LinearLayout.LayoutParams(510, 150));
                                        signImg.setImageBitmap(BitmapFactory.decodeFile(strFilePath));
                                        //signImg.setScaleType(ImageView.ScaleType.FIT_CENTER);
                                        printingLn.addView(signImg);
                                    }
                                } else {
                                    // 프린트 실행 (2) ------------------------------------------------------------
                                    str_signatureTxt = "     ";

                                    TextView cardsignspaceTv = new TextView(MainActivity.mContext);
                                    cardsignspaceTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                                    cardsignspaceTv.setGravity(Gravity.CENTER);
                                    cardsignspaceTv.setText(str_signatureTxt);
                                    cardsignspaceTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(cardsignspaceTv);
                                    printingLn.addView(cardsignspaceTv);
                                }

                                if (GlobalMemberValues.isSignOnMinPay(str_cardchangeamount)) {
                                    LinearLayout cardsignLn = new LinearLayout(MainActivity.mContext);
                                    cardsignLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                    cardsignLn.setOrientation(LinearLayout.HORIZONTAL);

                                    TextView cardsignleftTv = new TextView(MainActivity.mContext);
                                    cardsignleftTv.setGravity(Gravity.BOTTOM | Gravity.RIGHT);
                                    cardsignleftTv.setText("Signature");
                                    cardsignleftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(cardsignleftTv);
                                    cardsignleftTv.setLayoutParams(new LinearLayout.LayoutParams(0, 60, 1.0f));
                                    cardsignLn.addView(cardsignleftTv);

                                    TextView cardsignrightTv = new TextView(MainActivity.mContext);
                                    cardsignrightTv.setGravity(Gravity.BOTTOM | Gravity.LEFT);
                                    cardsignrightTv.setText("______________________________");
                                    cardsignrightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(cardsignrightTv);
                                    cardsignrightTv.setLayoutParams(new LinearLayout.LayoutParams(0, 60, 2.0f));
                                    cardsignLn.addView(cardsignrightTv);

                                    printingLn.addView(cardsignLn);
                                }

                            }
                            // -------------------------------------------------------------------------------------------------
                        }
                    }
                }

                if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("ordernumber_yn",paramCusMer)){
                    if (str_ordernumber_alignment_yn.equals("B")) {
                        // 주문번호 ------------------------------------------------------------------------------------------------------------------------

                        float textsize = GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER; // normal size
                        int layout_size = 32;
                        String str_station_number_size = GlobalMemberValues.getValueOnReceiptSetting("ordernumber_type",receiptType);
                        switch (str_station_number_size){
                            case "1" :  // small
                                textsize = textsize - 2;
                                layout_size = layout_size -2;
                                break;
                            case "2":   // medium
                                break;
                            case "3":   // large
                                textsize = textsize + 4;
                                layout_size = layout_size + 4;
                                break;
                            case "4":   // x large
                                textsize = textsize + 8;
                                layout_size = layout_size + 8;
                                break;
                            case "5":   // xx large
                                textsize = textsize + 12;
                                layout_size = layout_size + 12;
                                break;
                        }


                        final LinearLayout.LayoutParams temp_matchParentParams
                                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, layout_size);
                        temp_matchParentParams.setMargins(0, 0, 0, 0);
                        LinearLayout salesCodeLn = new LinearLayout(MainActivity.mContext);
                        salesCodeLn.setLayoutParams(temp_matchParentParams);
                        salesCodeLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView customerOrderNumLeftTv = new TextView(MainActivity.mContext);
                        customerOrderNumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        customerOrderNumLeftTv.setText("Order No.");
                        customerOrderNumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                        GlobalMemberValues.setTextStyleOnClover(customerOrderNumLeftTv);
                        customerOrderNumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        salesCodeLn.addView(customerOrderNumLeftTv);

                        TextView customerOrderNumRightTv = new TextView(MainActivity.mContext);
                        customerOrderNumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        customerOrderNumRightTv.setText(" : " + str_customerOrderNumber);
                        customerOrderNumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, textsize);
                        GlobalMemberValues.setTextStyleOnClover(customerOrderNumRightTv);
                        customerOrderNumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        salesCodeLn.addView(customerOrderNumRightTv);

                        printingLn.addView(salesCodeLn);
                    }
                }


                if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("ordertype_yn",paramCusMer)){
                    if (str_ordertype_alignment_yn.equals("B")){
                        String tempDeliveryTakeaway = "HERE";
                        if (!GlobalMemberValues.isStrEmpty(str_deliverytakeaway)) {
                            switch (str_deliverytakeaway) {
                                case "H" : {
                                    tempDeliveryTakeaway = "HERE";
                                    break;
                                }
                                case "T" : {
                                    tempDeliveryTakeaway = "TO GO";
                                    break;
                                }
                                case "D" : {
                                    tempDeliveryTakeaway = "DELIVERY";
                                    break;
                                }
                            }
                        }

                        LinearLayout receivingTypeLn = new LinearLayout(MainActivity.mContext);
                        receivingTypeLn.setLayoutParams(matchParentParams);
                        receivingTypeLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView receivingTypeLeftTv = new TextView(MainActivity.mContext);
                        receivingTypeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        receivingTypeLeftTv.setText("Pick Up Type");
                        receivingTypeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(receivingTypeLeftTv);
                        receivingTypeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        receivingTypeLn.addView(receivingTypeLeftTv);

                        TextView receivingTypeRightTv = new TextView(MainActivity.mContext);
                        receivingTypeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        receivingTypeRightTv.setText(" : " + tempDeliveryTakeaway);
                        receivingTypeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(receivingTypeRightTv);
                        receivingTypeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        receivingTypeLn.addView(receivingTypeRightTv);

                        printingLn.addView(receivingTypeLn);
                    }
                }

                if (paramPrintingType.equals("sales")) {
                    if (!GlobalMemberValues.isStrEmpty(str_customerPagerNumber)) {
                        if (str_pager_alignment_yn.equals("B")){
                            if (GlobalMemberValues.getValueOnReceiptMerCusShowYN("pagernumber_yn",paramCusMer)){
                                String pagenoTxt = GlobalMemberValues.getPagerNumberHeaderTxt() + str_customerPagerNumber + "\n";

                                TextView pagerNoTv = new TextView(MainActivity.mContext);
                                pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 140));
                                pagerNoTv.setGravity(Gravity.CENTER);
                                pagerNoTv.setText(pagenoTxt);
                                pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 100);
                                pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                                GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                                printingLn.addView(pagerNoTv);

                                // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                                // ------------------------------------------------------------------------------------------------------------------------------
                            }
                        }
                    }
                }


                // 10112023 --------------------------------------------------------------------------------------------
                String str_orderfrom = GlobalMemberValues.getDataInJsonData(data, "orderfrom");
                if (!GlobalMemberValues.isStrEmpty(str_orderfrom)) {
                    TextView orderfromTv = new TextView(MainActivity.mContext);
                    orderfromTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    orderfromTv.setGravity(Gravity.CENTER);
                    orderfromTv.setText("--- " + str_orderfrom.toUpperCase() + " ---");
                    orderfromTv.setPaintFlags(orderfromTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    orderfromTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    GlobalMemberValues.setTextStyleOnClover(orderfromTv);
                    printingLn.addView(orderfromTv);


                    String str_salescodethirdparty = GlobalMemberValues.getDataInJsonData(data, "salescodethirdparty");
                    TextView thirdpartyTv = new TextView(MainActivity.mContext);
                    thirdpartyTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    thirdpartyTv.setGravity(Gravity.CENTER);
                    thirdpartyTv.setText(str_salescodethirdparty);
                    thirdpartyTv.setPaintFlags(thirdpartyTv.getPaintFlags());
                    thirdpartyTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    GlobalMemberValues.setTextStyleOnClover(thirdpartyTv);
                    printingLn.addView(thirdpartyTv);


                    String str_deliverydate = GlobalMemberValues.getDataInJsonData(data, "deliverydate");
                    TextView deliverydateTv = new TextView(MainActivity.mContext);
                    deliverydateTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    deliverydateTv.setGravity(Gravity.CENTER);
                    deliverydateTv.setText("READY BY : " + str_deliverydate);
                    deliverydateTv.setPaintFlags(deliverydateTv.getPaintFlags());
                    deliverydateTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(deliverydateTv);
                    printingLn.addView(deliverydateTv);



                    // 고객 정보 -----------------------------------------------------------------------------
                    // 고객이름 -----------------------------------------------------------------------------------------------------------------------
                    if (!GlobalMemberValues.isStrEmpty(str_customername)) {
                        LinearLayout customernameLn = new LinearLayout(MainActivity.mContext);
                        customernameLn.setLayoutParams(matchParentParams);
                        customernameLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                        customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        customerNameLeftTv.setText("Customer Name");
                        customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                        customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        customernameLn.addView(customerNameLeftTv);

                        TextView customerNameRightTv = new TextView(MainActivity.mContext);
                        customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        customerNameRightTv.setText(" : " + str_customername);
                        customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                        customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        customernameLn.addView(customerNameRightTv);

                        printingLn.addView(customernameLn);
                    }
                    // --------------------------------------------------------------------------------------------------------------------------------

                    // 고객전화번호 -------------------------------------------------------------------------------------------------------------------
                    if (!GlobalMemberValues.isStrEmpty(str_customerphonenum)) {
                        if (str_customerphonenum.contains("@")){

                        } else {
                            LinearLayout customerPhoneLn = new LinearLayout(MainActivity.mContext);
                            customerPhoneLn.setLayoutParams(matchParentParams);
                            customerPhoneLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                            customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);

                            if (str_customerphonenum.contains("@")){
                                customerNameLeftTv.setText("E-mail");
                            } else {
                                customerNameLeftTv.setText("Phone No.");
                            }
                            customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                            customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            customerPhoneLn.addView(customerNameLeftTv);

                            TextView customerNameRightTv = new TextView(MainActivity.mContext);
                            customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            customerNameRightTv.setText(" : " + str_customerphonenum);
                            customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                            customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            customerPhoneLn.addView(customerNameRightTv);

                            printingLn.addView(customerPhoneLn);
                        }

                    }
                    // --------------------------------------------------------------------------------------------------------------------------------

                    // 고객주소 ------------------------------------------------------------------------------------------------------------------------
                    if (!GlobalMemberValues.isStrEmpty(str_customeraddress) || !GlobalMemberValues.isStrEmpty(str_deliveryaddress)) {
                        // Address ------------------------------------------------------------------------------------------------------------
                        TextView addressTv = new TextView(MainActivity.mContext);
                        addressTv.setLayoutParams(matchParentParams);
                        addressTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                        addressTv.setText("<Address>");
                        addressTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(addressTv);
                        printingLn.addView(addressTv);
                        // --------------------------------------------------------------------------------------------------------------------
                        // Address Contents ------------------------------------------------------------------------------------------------------------
                        TextView addresscontentsTv = new TextView(MainActivity.mContext);
                        addresscontentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                        addresscontentsTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                        if (!GlobalMemberValues.isStrEmpty(str_customeraddress)){
                            addresscontentsTv.setText(str_customeraddress);
                        } else {
                            addresscontentsTv.setText(str_deliveryaddress);
                        }
                        addresscontentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(addresscontentsTv);
                        printingLn.addView(addresscontentsTv);
                        // --------------------------------------------------------------------------------------------------------------------

//                                printingLn.addView(customerAddrLn);
                    }
                    // --------------------------------------------------------------------------------------------------------------------------------

                    // 하단에서 가져욤.
                    // 220913
                    // EmpName Online Order 가 아닐시 조건 추가.
                    if (!str_employeename.equals("Online Order")){
                        if (!GlobalMemberValues.isStrEmpty(str_customermemo) ||
                                !GlobalMemberValues.isStrEmpty(GlobalMemberValues.m_temp_mainMemo)) {
                            // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
//                                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                            // ---------------------------------------------------------------------------------------------------------------------------------

                            TextView noteTv = new TextView(MainActivity.mContext);
                            noteTv.setLayoutParams(matchParentParams);
                            noteTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                            noteTv.setText("[Note]");
                            noteTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(noteTv);
                            printingLn.addView(noteTv);

                            TextView memotextTv = new TextView(MainActivity.mContext);
                            memotextTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                            memotextTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                            memotextTv.setText(str_customermemo);
                            memotextTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(memotextTv);
                            printingLn.addView(memotextTv);

                        }
                    }

                    // 고객 정보 -----------------------------------------------------------------------------


                }
                // 10112023 --------------------------------------------------------------------------------------------



                // receipt footer 프린터 --------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_receiptfooter)) {
                    TextView footerTv = new TextView(MainActivity.mContext);
                    footerTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                    footerTv.setGravity(Gravity.CENTER);
                    footerTv.setText(str_receiptfooter);
                    footerTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(footerTv);
                    printingLn.addView(footerTv);
                }
                // ------------------------------------------------------------------------------------------------

                // Merchant Copy ----------------------------------------------------------------------------------
                if (paramCusMer.equals("merchant")) {
                    merchantcustomerText = "\n########## Merchant Copy #########\r\n";
                } else {
                    merchantcustomerText = "\n########## Customer Copy #########\r\n";
                }



                merchantcustomerText += "** Thank you. Come again soon **\r\n";
                merchantcustomerText += "printed : " + getDate() + " " + getTime();

                TextView merchantcustomercopyTv = new TextView(MainActivity.mContext);
                merchantcustomercopyTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 140));
                merchantcustomercopyTv.setGravity(Gravity.CENTER_HORIZONTAL|Gravity.TOP);
                merchantcustomercopyTv.setText(merchantcustomerText);
                merchantcustomercopyTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(merchantcustomercopyTv);
                printingLn.addView(merchantcustomercopyTv);

                TextView tempSpaceTv = new TextView(MainActivity.mContext);
                tempSpaceTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 0));
                tempSpaceTv.setGravity(Gravity.CENTER_HORIZONTAL|Gravity.TOP);
                tempSpaceTv.setText("  ");
                tempSpaceTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(tempSpaceTv);
                printingLn.addView(tempSpaceTv);
                // ------------------------------------------------------------------------------------------------

            }
        };
        thread2.start();
        try {
            thread2.join();
        } catch(InterruptedException e) {}

        /**
         // 프린트 완료되면 저장된 전자서명이미지 삭제한다.
         if (tempArrListStrFile.size() > 0) {
         for (String tempStrFilePath : tempArrListStrFile) {
         if (!GlobalMemberValues.isStrEmpty(tempStrFilePath) && new File(tempStrFilePath).exists()) {
         new File(tempStrFilePath).delete();
         }
         }
         }
         **/

        return printingLn;
    }

    public static LinearLayout makingLinearLayoutForPhoneOrder(final JSONObject data) {
        if (data == null) {
            return  null;
        }

        GlobalMemberValues.logWrite("cloverprintinglog", "받은 데이터 : " + data.toString() + "\n");

        final LinearLayout.LayoutParams matchParentParams
                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32);
        matchParentParams.setMargins(0, 0, 0, 0);

        String temp_isBillPrinteOn = "N";
        if (data != null){
            temp_isBillPrinteOn = data.optString("isBillPrinteOn","N");
        }

        final LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
        if (temp_isBillPrinteOn.equals("Y")){
            printingLn.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
        } else {
            printingLn.setLayoutParams(new LinearLayout.LayoutParams(GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, LinearLayout.LayoutParams.MATCH_PARENT));
        }
        printingLn.setOrientation(LinearLayout.VERTICAL);
        printingLn.setBackgroundColor(Color.parseColor("#ffffff"));

        // 가격표시앞에 $ 표시여부
        String tempDollarStr = "";
        if (GlobalMemberValues.ISDISPLAYPRICEDOLLAR) {
            tempDollarStr = "$";
        }
        final String finalTempDollarStr = tempDollarStr;

        Thread thread = new Thread(){
            @SuppressLint("LongLogTag")
            @Override
            public void run(){
                String str_receiptno = "";
                String str_ordertype = "";

                String titleText1 = "";
                String titleText2 = "";
                String titleText3 = "";
                String main_Text = "";

                String memo_Text = "";

                String customerText = "";

                String str_saledate = "";
                String str_saletime = "";

                String str_saleitemlist = "";

                String str_customername = "";
                String str_customerphonenum = "";
                String str_customeraddress = "";

                String str_deliverytakeaway = "";
                String str_deliverydate = "";

                String str_customermemo = "";

                String str_kitchenreprintyn = "N";

                String str_receiptfooter = "";

                String str_customerOrderNumber = "";
                String str_customerPagerNumber = "";

                String str_phoneOrder = "";
                String str_phoneOrderNumber = "";
                String str_phoneorderholecode = "";

                String str_storestate = "";
                String str_storename = "";
                String str_storecity = "";
                String str_storezip = "";
                String str_storephone = "";
                String str_storeaddress2 = "";
                String str_storeaddress1 = "";

                // Restaurant 관련
                String str_restaurant_tableidx = "";
                String str_restaurant_tablename = "";
                String str_restaurant_tablepeoplecnt = "";
                String str_restaurant_tableholdcode = "";

                //discount / extra
                String str_discountextra_total = "";
                String str_discountYN = "";

                String str_commongratuity = "";


                str_storestate = GlobalMemberValues.getDataInJsonData(data, "storestate");
                str_storename  = GlobalMemberValues.getDataInJsonData(data, "storename");
                str_storecity = GlobalMemberValues.getDataInJsonData(data, "storecity");
                str_storezip = GlobalMemberValues.getDataInJsonData(data, "storezip");
                str_storeaddress2 = GlobalMemberValues.getDataInJsonData(data, "storeaddress2");
                str_storeaddress1 = GlobalMemberValues.getDataInJsonData(data, "storeaddress1");
                str_storephone = GlobalMemberValues.getDataInJsonData(data, "storephone");
                str_saledate = GlobalMemberValues.getDataInJsonData(data, "saledate");
                str_saletime = GlobalMemberValues.getDataInJsonData(data, "saletime");
                str_receiptno = GlobalMemberValues.getDataInJsonData(data, "receiptno");
                str_saleitemlist = GlobalMemberValues.getDataInJsonData(data, "saleitemlist");
                str_customername = GlobalMemberValues.getDataInJsonData(data, "customername");
                str_customerphonenum = GlobalMemberValues.getDataInJsonData(data, "customerphonenum");
                str_customeraddress = GlobalMemberValues.getDataInJsonData(data, "customeraddress");
                str_deliverytakeaway = GlobalMemberValues.getDataInJsonData(data, "deliverytakeaway");
                str_deliverydate = GlobalMemberValues.getDataInJsonData(data, "deliverydate");
                str_ordertype = GlobalMemberValues.getDataInJsonData(data, "ordertype");
                str_customermemo = GlobalMemberValues.getDataInJsonData(data, "customermemo");
                str_receiptfooter = GlobalMemberValues.getDataInJsonData(data, "receiptfooter");
                str_customerOrderNumber = GlobalMemberValues.getDataInJsonData(data, "customerordernumber");
                str_customerPagerNumber = GlobalMemberValues.getDataInJsonData(data, "customerpagernumber");
                str_phoneOrder = GlobalMemberValues.getDataInJsonData(data, "phoneorder");
                str_phoneOrderNumber = GlobalMemberValues.getDataInJsonData(data, "phoneordernumber");

                // Restaurant 관련
                str_restaurant_tableidx = GlobalMemberValues.getDataInJsonData(data, "restaurant_tableidx");
                str_restaurant_tablename = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablename");
                str_restaurant_tablepeoplecnt = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablepeoplecnt");
                str_restaurant_tableholdcode = GlobalMemberValues.getDataInJsonData(data, "restaurant_tableholdcode");

                GlobalMemberValues globalMemberValues = new GlobalMemberValues();

                // Restaurant 관련
                if (!GlobalMemberValues.isStrEmpty(str_restaurant_tablename)) {
                    if (GlobalMemberValues.getValueOnReceiptSetting("tablenumber_yn","1").equals("Y")){
                        TextView pagerNoTv = new TextView(MainActivity.mContext);
                        pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                        pagerNoTv.setGravity(Gravity.CENTER);
                        pagerNoTv.setText(str_restaurant_tablename);
                        pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 60);
                        pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                        GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                        printingLn.addView(pagerNoTv);

                        // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                    }

                }

                if (!GlobalMemberValues.isStrEmpty(str_phoneOrder) && str_phoneOrder.equals("Y")) {
                    str_customerOrderNumber = str_phoneOrderNumber;
                }

                if (str_deliverydate.equals(" :00")) str_deliverydate = "";

                if (false){
//                if (str_deliverydate != null && str_deliverydate.length() > 0){
                    //
                    TextView tv_deliveryDate_title = new TextView(MainActivity.mContext);
                    tv_deliveryDate_title.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    tv_deliveryDate_title.setGravity(Gravity.CENTER);
                    tv_deliveryDate_title.setText("*** Pickup Time ***");
                    tv_deliveryDate_title.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    tv_deliveryDate_title.setPaintFlags(tv_deliveryDate_title.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    GlobalMemberValues.setTextStyleOnClover(tv_deliveryDate_title);
                    printingLn.addView(tv_deliveryDate_title);

                    TextView tv_deliveryDate = new TextView(MainActivity.mContext);
                    tv_deliveryDate.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    tv_deliveryDate.setGravity(Gravity.CENTER);
                    tv_deliveryDate.setText(str_deliverydate);
                    tv_deliveryDate.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    tv_deliveryDate.setPaintFlags(tv_deliveryDate.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    GlobalMemberValues.setTextStyleOnClover(tv_deliveryDate);
                    printingLn.addView(tv_deliveryDate);
                }


                // 로고 프린팅
                String logoprintingonreceiptyn = MainActivity.mDbInit.dbExecuteReadReturnString(
                        " select logoprintingonreceiptyn from salon_storestationsettings_deviceprinter ");
                if (GlobalMemberValues.isStrEmpty(logoprintingonreceiptyn)) {
                    logoprintingonreceiptyn = "N";
                }
                if (logoprintingonreceiptyn == "Y" || logoprintingonreceiptyn.equals("Y")) {
                    File path = GlobalMemberValues.ADFILELOCALPATH;
                    File isFile = new File(path, "receiptlogoimg.png"); //파일명까지 포함함 경로의 File 객체 생성
                    String adImage = isFile.getPath();
                    if (new File(adImage).exists()) {
                        ImageView logoimg = new ImageView(MainActivity.mContext);
                        logoimg.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 200));
                        logoimg.setImageBitmap(BitmapFactory.decodeFile(isFile.getAbsolutePath()));
                        //logoimg.setScaleType(ImageView.ScaleType.FIT_CENTER);
                        printingLn.addView(logoimg);

                        // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                        // ------------------------------------------------------------------------------------------------------------------------------
                    }
                }

                if (GlobalMemberValues.getValueOnReceiptSetting("header_yn","1").equals("Y")){
// Store 이름
                    TextView storenameTv = new TextView(MainActivity.mContext);
                    storenameTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    storenameTv.setGravity(Gravity.CENTER);
                    storenameTv.setText("*** " + str_storename + " ***");
                    storenameTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    storenameTv.setPaintFlags(storenameTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    GlobalMemberValues.setTextStyleOnClover(storenameTv);
                    printingLn.addView(storenameTv);

                    // Store 주소 1, 2
                    TextView storeaddrTv = new TextView(MainActivity.mContext);
                    storeaddrTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                    storeaddrTv.setGravity(Gravity.CENTER);
                    storeaddrTv.setText(str_storeaddress1 + " "+ str_storeaddress2);
                    storeaddrTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(storeaddrTv);
                    printingLn.addView(storeaddrTv);

                    // Store 주소 나머지
                    TextView storeaddretcTv = new TextView(MainActivity.mContext);
                    storeaddretcTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                    storeaddretcTv.setGravity(Gravity.CENTER);
                    storeaddretcTv.setText(str_storecity + " " + str_storestate + " "+ str_storezip);
                    storeaddretcTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(storeaddretcTv);
                    printingLn.addView(storeaddretcTv);

                    // Store 전화번호
                    TextView storetelTv = new TextView(MainActivity.mContext);
                    storetelTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                    storetelTv.setGravity(Gravity.CENTER);
                    storetelTv.setText("(TEL) "+ telNumberExch(str_storephone));
                    storetelTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(storetelTv);
                    printingLn.addView(storetelTv);

                    GlobalMemberValues.logWrite("cloverdatacheckreturnlog", "스토어명 : " + str_storename + "\n");
                    GlobalMemberValues.logWrite("cloverdatacheckreturnlog", "전화번호 : " + telNumberExch(str_storephone) + "\n");

                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }



                // Restaurant 관련
                if (!GlobalMemberValues.isStrEmpty(str_restaurant_tablename)) {

                    if (GlobalMemberValues.getValueOnReceiptSetting("tablenumber_yn","1").equals("Y")){
                        LinearLayout tableinfoLn = new LinearLayout(MainActivity.mContext);
                        tableinfoLn.setLayoutParams(matchParentParams);
                        tableinfoLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView tableinfoTv1 = new TextView(MainActivity.mContext);
                        tableinfoTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        tableinfoTv1.setText("Table Info.");
                        tableinfoTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(tableinfoTv1);
                        tableinfoTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        tableinfoLn.addView(tableinfoTv1);

                        TextView tableinfoTv2 = new TextView(MainActivity.mContext);
                        tableinfoTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        tableinfoTv2.setText(" : " + str_restaurant_tablename);
                        tableinfoTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(tableinfoTv2);
                        tableinfoTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        tableinfoLn.addView(tableinfoTv2);

                        printingLn.addView(tableinfoLn);
                        // --------------------------------------------------------------------------------------------------------------------------------

                        // 점선 ----------------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                        // ---------------------------------------------------------------------------------------------------------------------------------
                    }


                }

                // Restaurant 관련
//                if ((globalMemberValues.getPOSType().toUpperCase() == "R" || globalMemberValues.getPOSType().toUpperCase().equals("R"))
//                        && GlobalMemberValues.now_saletypeisrestaurant) {
//                    LinearLayout tablepeoplecntLn = new LinearLayout(MainActivity.mContext);
//                    tablepeoplecntLn.setLayoutParams(matchParentParams);
//                    tablepeoplecntLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                    TextView tablepeoplecntTv1 = new TextView(MainActivity.mContext);
//                    tablepeoplecntTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                    tablepeoplecntTv1.setText("Customer Count");
//                    tablepeoplecntTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                    GlobalMemberValues.setTextStyleOnClover(tablepeoplecntTv1);
//                    tablepeoplecntTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                    tablepeoplecntLn.addView(tablepeoplecntTv1);
//
//                    TextView tablepeoplecntTv2 = new TextView(MainActivity.mContext);
//                    tablepeoplecntTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                    tablepeoplecntTv2.setText(" : " + str_restaurant_tablepeoplecnt);
//                    tablepeoplecntTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                    GlobalMemberValues.setTextStyleOnClover(tablepeoplecntTv2);
//                    tablepeoplecntTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
//                    tablepeoplecntLn.addView(tablepeoplecntTv2);
//
//                    printingLn.addView(tablepeoplecntLn);
//                    // --------------------------------------------------------------------------------------------------------------------------------
//
//                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
//                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
//                    // ---------------------------------------------------------------------------------------------------------------------------------
//                }

                if (GlobalMemberValues.isOrderNumberSectionViewOn()) {
                    if (GlobalMemberValues.isToGoSale()){
                        if (GlobalMemberValues.getValueOnReceiptSetting("ordernumber_yn","1").equals("Y")){

                            // 주문번호 ------------------------------------------------------------------------------------------------------------------------
                            LinearLayout salesCodeLn = new LinearLayout(MainActivity.mContext);
                            salesCodeLn.setLayoutParams(matchParentParams);
                            salesCodeLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView customerOrderNumLeftTv = new TextView(MainActivity.mContext);
                            customerOrderNumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                    customerOrderNumLeftTv.setText("Order No.");
                            customerOrderNumLeftTv.setText("Bill No.");
                            customerOrderNumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(customerOrderNumLeftTv);
                            customerOrderNumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            salesCodeLn.addView(customerOrderNumLeftTv);

                            TextView customerOrderNumRightTv = new TextView(MainActivity.mContext);
                            customerOrderNumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            customerOrderNumRightTv.setText(" : " + str_customerOrderNumber);
                            customerOrderNumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(customerOrderNumRightTv);
                            customerOrderNumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            salesCodeLn.addView(customerOrderNumRightTv);

                            printingLn.addView(salesCodeLn);
                            // --------------------------------------------------------------------------------------------------------------------------------
                        }


                        // 수령타입 -----------------------------------------------------------------------------------------------------------------------
                        LinearLayout receivingTypeLn = new LinearLayout(MainActivity.mContext);
                        receivingTypeLn.setLayoutParams(matchParentParams);
                        receivingTypeLn.setOrientation(LinearLayout.HORIZONTAL);

                        String tempDeliveryTakeaway = "HERE";
                        if (!GlobalMemberValues.isStrEmpty(str_deliverytakeaway)) {
                            switch (str_deliverytakeaway) {
                                case "H" : {
                                    tempDeliveryTakeaway = "HERE";
                                    break;
                                }
                                case "T" : {
                                    tempDeliveryTakeaway = "TO GO";
                                    break;
                                }
                                case "D" : {
                                    tempDeliveryTakeaway = "DELIVERY";
                                    break;
                                }
                            }
                        }

                        TextView receivingTypeLeftTv = new TextView(MainActivity.mContext);
                        receivingTypeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        receivingTypeLeftTv.setText("Pick Up Type");
                        receivingTypeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(receivingTypeLeftTv);
                        receivingTypeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        receivingTypeLn.addView(receivingTypeLeftTv);

                        TextView receivingTypeRightTv = new TextView(MainActivity.mContext);
                        receivingTypeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        receivingTypeRightTv.setText(" : " + tempDeliveryTakeaway);
                        receivingTypeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(receivingTypeRightTv);
                        receivingTypeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        receivingTypeLn.addView(receivingTypeRightTv);

                        printingLn.addView(receivingTypeLn);
                        // --------------------------------------------------------------------------------------------------------------------------------


                        if (GlobalMemberValues.mCustomerInfoShowYN) {

                            // 고객 이름 -------------------------------------------------------------------------------------------------------------------
                            if (!GlobalMemberValues.isStrEmpty(str_customername) || !str_customername.equals(" ")) {
                                LinearLayout customerPhoneLn = new LinearLayout(MainActivity.mContext);
                                customerPhoneLn.setLayoutParams(matchParentParams);
                                customerPhoneLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                                customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                customerNameLeftTv.setText("Customer Name.");
                                customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                                customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                customerPhoneLn.addView(customerNameLeftTv);

                                TextView customerNameRightTv = new TextView(MainActivity.mContext);
                                customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                customerNameRightTv.setText(" : " + str_customername);
                                customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                                customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                customerPhoneLn.addView(customerNameRightTv);

                                printingLn.addView(customerPhoneLn);
                            }
                            // --------------------------------------------------------------------------------------------------------------------------------
                            // 고객전화번호 -------------------------------------------------------------------------------------------------------------------
                            if (!GlobalMemberValues.isStrEmpty(str_customerphonenum) ) {
                                if (str_customerphonenum.contains("@")){

                                } else {
                                    LinearLayout customerPhoneLn = new LinearLayout(MainActivity.mContext);
                                    customerPhoneLn.setLayoutParams(matchParentParams);
                                    customerPhoneLn.setOrientation(LinearLayout.HORIZONTAL);

                                    TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                                    customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                    if (str_customerphonenum.contains("@")){
                                        customerNameLeftTv.setText("E-mail");
                                    } else {
                                        customerNameLeftTv.setText("Phone No.");
                                    }
                                    customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                                    customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                    customerPhoneLn.addView(customerNameLeftTv);

                                    TextView customerNameRightTv = new TextView(MainActivity.mContext);
                                    customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                    customerNameRightTv.setText(" : " + str_customerphonenum);
                                    customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                                    customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                    customerPhoneLn.addView(customerNameRightTv);

                                    printingLn.addView(customerPhoneLn);
                                }

                            }
                            // --------------------------------------------------------------------------------------------------------------------------------

                            // 고객주소 ------------------------------------------------------------------------------------------------------------------------
                            if (!GlobalMemberValues.isStrEmpty(str_customeraddress)) {
//                            String customerAddressAll = "";
//                            customerAddressAll = GlobalMemberValues.getPrintTxtCenterAlignment("<Address>", 44) + "\n";
//                            //titleText1 += str_customeraddress + "\n";
//                            String tempCustomerAddress[] = str_customeraddress.split("\n");
//                            customerAddressAll += GlobalMemberValues.getPrintTxtCenterAlignment2(tempCustomerAddress[0], 44) + "\n";
//                            if (tempCustomerAddress.length > 1) {
//                                customerAddressAll += GlobalMemberValues.getPrintTxtCenterAlignment2(tempCustomerAddress[1], 44) + "\n";
//                            }
//                            if (tempCustomerAddress.length > 2) {
//                                customerAddressAll += GlobalMemberValues.getPrintTxtCenterAlignment(tempCustomerAddress[2], 44) + "\n";
//                            }
//
//                            TextView customerAddrTv = new TextView(MainActivity.mContext);
//                            customerAddrTv.setLayoutParams(matchParentParams);
//                            customerAddrTv.setGravity(Gravity.CENTER);
//                            customerAddrTv.setText(customerAddressAll);
//                            customerAddrTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                            GlobalMemberValues.setTextStyleOnClover(customerAddrTv);
//                            printingLn.addView(customerAddrTv);
                                TextView addressTv = new TextView(MainActivity.mContext);
                                addressTv.setLayoutParams(matchParentParams);
                                addressTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                                addressTv.setText("<Address>");
                                addressTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(addressTv);
                                printingLn.addView(addressTv);
                                // --------------------------------------------------------------------------------------------------------------------
                                // Address Contents ------------------------------------------------------------------------------------------------------------
                                TextView addresscontentsTv = new TextView(MainActivity.mContext);
                                addresscontentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                addresscontentsTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                                addresscontentsTv.setText(str_customeraddress);
                                addresscontentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(addresscontentsTv);
                                printingLn.addView(addresscontentsTv);
                            }
                            // --------------------------------------------------------------------------------------------------------------------------------
                        }
                        // 점선 ----------------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    }




                    // ---------------------------------------------------------------------------------------------------------------------------------
                }


                // Receipt NO. --------------------------------------------------------------------------------------------------------------------
                // LinearLayout
//                LinearLayout receiptnoLn = new LinearLayout(MainActivity.mContext);
//                receiptnoLn.setLayoutParams(matchParentParams);
//                receiptnoLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                TextView receiptNoLeftTv = new TextView(MainActivity.mContext);
//                receiptNoLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                receiptNoLeftTv.setText("Receipt No.");
//                receiptNoLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                GlobalMemberValues.setTextStyleOnClover(receiptNoLeftTv);
//                receiptNoLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                receiptnoLn.addView(receiptNoLeftTv);
//
//                TextView receiptNoRightTv = new TextView(MainActivity.mContext);
//                receiptNoRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                receiptNoRightTv.setText(" : " + str_receiptno);
//                receiptNoRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                GlobalMemberValues.setTextStyleOnClover(receiptNoRightTv);
//                receiptNoRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
//                receiptnoLn.addView(receiptNoRightTv);
//
//                printingLn.addView(receiptnoLn);
                // --------------------------------------------------------------------------------------------------------------------------------

                // Sale Date ----------------------------------------------------------------------------------------------------------------------
                // LinearLayout
                LinearLayout saledateLn = new LinearLayout(MainActivity.mContext);
                saledateLn.setLayoutParams(matchParentParams);
                saledateLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView saleDateLeftTv = new TextView(MainActivity.mContext);
                saleDateLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                saleDateLeftTv.setText("Sale Date");
                saleDateLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(saleDateLeftTv);
                saleDateLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                saledateLn.addView(saleDateLeftTv);

                TextView saleDateRightTv = new TextView(MainActivity.mContext);
                saleDateRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                saleDateRightTv.setText(" : " + str_saledate + " " + str_saletime);
                saleDateRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(saleDateRightTv);
                saleDateRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                saledateLn.addView(saleDateRightTv);

                printingLn.addView(saledateLn);
                // --------------------------------------------------------------------------------------------------------------------------------

                /**
                 // Sale Time ----------------------------------------------------------------------------------------------------------------------
                 // LinearLayout
                 LinearLayout saletimeLn = new LinearLayout(MainActivity.mContext);
                 saletimeLn.setLayoutParams(matchParentParams);
                 saletimeLn.setOrientation(LinearLayout.HORIZONTAL);

                 TextView saleTimeLeftTv = new TextView(MainActivity.mContext);
                 saleTimeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 saleTimeLeftTv.setText("Sale Time");
                 saleTimeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                 GlobalMemberValues.setTextStyleOnClover(saleTimeLeftTv);
                 saleTimeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                 saletimeLn.addView(saleTimeLeftTv);

                 TextView saleTimeRightTv = new TextView(MainActivity.mContext);
                 saleTimeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 saleTimeRightTv.setText(" : " + str_saletime);
                 saleTimeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                 GlobalMemberValues.setTextStyleOnClover(saleTimeRightTv);
                 saleTimeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                 saletimeLn.addView(saleTimeRightTv);

                 printingLn.addView(saletimeLn);
                 // --------------------------------------------------------------------------------------------------------------------------------
                 **/

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                /** 세일아이템 관련 ***************************************************************************************************************/
                /**
                 LinearLayout saleitemlistLn = new LinearLayout(MainActivity.mContext);
                 saleitemlistLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                 saleitemlistLn.setOrientation(LinearLayout.HORIZONTAL);

                 // 세일아이템 타이틀 ---------------------------------------------------------------------------------------------------------------
                 TextView saleItemTv1 = new TextView(MainActivity.mContext);
                 saleItemTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 saleItemTv1.setText("Item Name");
                 saleItemTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv1);
                 saleItemTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv1);

                 TextView saleItemTv2 = new TextView(MainActivity.mContext);
                 saleItemTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                 saleItemTv2.setText("Qty");
                 saleItemTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv2);
                 saleItemTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv2);

                 TextView saleItemTv3 = new TextView(MainActivity.mContext);
                 saleItemTv3.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                 saleItemTv3.setText("Price");
                 saleItemTv3.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv3);
                 saleItemTv3.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv3);

                 TextView saleItemTv4 = new TextView(MainActivity.mContext);
                 saleItemTv4.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                 saleItemTv4.setText("Amount");
                 saleItemTv4.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv4);
                 saleItemTv4.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv4);

                 printingLn.addView(saleitemlistLn);
                 // --------------------------------------------------------------------------------------------------------------------------------

                 // 점선 ----------------------------------------------------------------------------------------------------------------------------
                 printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                 // ---------------------------------------------------------------------------------------------------------------------------------

                 **/



                double pickupDeliveryFee = 0.00;
                double subTotal = 0.00;
                double subTax = 0.00;
                double totalAmount = 0.00;
                double d_discountAmount = 0.0;

                //

                ItemPrint itemPrint = new ItemPrint();
                if (!GlobalMemberValues.isStrEmpty(str_saleitemlist)) {

                    String printCode = itemPrint.makeTempPrintingCode();

                    String[] strOrderItemsList = str_saleitemlist.split(GlobalMemberValues.STRSPLITTER_ORDERITEM1);
                    for (int i = 0; i < strOrderItemsList.length; i++) {
                        String[] strOrderItems = strOrderItemsList[i].split(GlobalMemberValues.STRSPLITTER_ORDERITEM2);
                        boolean isResult = itemPrint.setAddItemQtyByDuplicate(printCode, strOrderItems);
                    }

                    strOrderItemsList = itemPrint.getItemPrintListArr(printCode);

//                    str_saleitemlist;
//



//                    String[] strOrderItemsList = str_saleitemlist.split(GlobalMemberValues.STRSPLITTER_ORDERITEM1);
                    for (int i = 0; i < strOrderItemsList.length; i++) {
                        String[] strOrderItems = strOrderItemsList[i].split(GlobalMemberValues.STRSPLITTER_ORDERITEM2);

                        // 상품명, 수량 정보 --------------------------------------------------------------------
                        String tempItemNameOptionAdd = strOrderItems[0];
                        String tempItemQty = strOrderItems[1];
                        String tempPrice = strOrderItems[4];
                        String tempPriceAmount = strOrderItems[5];
                        String tempTaxAmount = "0.0";
//                        if (strOrderItems.length > 7) {
//                            tempTaxAmount = strOrderItems[7];
//                        }
                        if (strOrderItems.length > 8) {
                            tempTaxAmount = strOrderItems[8];
                        }
                        String tempTotalAmount = strOrderItems[4];

                        GlobalMemberValues.logWrite("saleitemstrarray", "tempItemNameOptionAdd : " + tempItemNameOptionAdd + "\n");

                        String[] strItemNAmeOptionAdd = tempItemNameOptionAdd.split(GlobalMemberValues.STRSPLITTER_ORDERITEM3);
                        String tempItemName = strItemNAmeOptionAdd[0];
                        String tempOptionTxt = "";
                        String tempAdditionalTxt1 = "";
                        String tempAdditionalTxt2 = "";
                        String tempItemIdx = "";
                        String tempKitchenMemo = "";
                        String tempOptionPrice = "";
                        String temptemp_additionalprice1 = "";
                        String temptemp_additionalprice2 = "";
                        String selectedDcExtraAllEach = "";
                        String selectedDcExtraType = "";
                        String dcextratype = "";
                        String dcextravalue = "";
                        String selectedDcExtraPrice = "";
                        if (strItemNAmeOptionAdd.length > 1) {
                            tempOptionTxt = strItemNAmeOptionAdd[1];
                            if (strItemNAmeOptionAdd.length > 2) {
                                tempAdditionalTxt1 = strItemNAmeOptionAdd[2];
                            }
                            if (strItemNAmeOptionAdd.length > 3) {
                                tempAdditionalTxt2 = strItemNAmeOptionAdd[3];
                            }
                            if (strItemNAmeOptionAdd.length > 4) {
                                tempItemIdx = strItemNAmeOptionAdd[4];
                            }
                            if (strItemNAmeOptionAdd.length > 6) {
                                tempKitchenMemo = strItemNAmeOptionAdd[6];
                            }
                            if (strItemNAmeOptionAdd.length > 7) {
                                tempOptionPrice = strItemNAmeOptionAdd[7];
                            }
                            if (strItemNAmeOptionAdd.length > 8) {
                                temptemp_additionalprice1 = strItemNAmeOptionAdd[8];
                            }
                            if (strItemNAmeOptionAdd.length > 9) {
                                temptemp_additionalprice2 = strItemNAmeOptionAdd[9];
                            }
                            // discount / extra
                            if (strItemNAmeOptionAdd.length > 10) {
                                selectedDcExtraAllEach = strItemNAmeOptionAdd[10];
                            }
                            if (strItemNAmeOptionAdd.length > 11) {
                                selectedDcExtraType = strItemNAmeOptionAdd[11];
                            }
                            if (strItemNAmeOptionAdd.length > 12) {
                                dcextratype = strItemNAmeOptionAdd[12];
                            }
                            if (strItemNAmeOptionAdd.length > 13) {
                                dcextravalue = strItemNAmeOptionAdd[13];
                            }
                            if (strItemNAmeOptionAdd.length > 14) {
                                selectedDcExtraPrice = strItemNAmeOptionAdd[14];
                            }
                        }


                        // ---------------------------------------------------------------------------------
//                        boolean isResult = itemPrint.setAddItemQtyByDuplicate(printCode, strOrderItems);

                        double d_tempPriceAmount = GlobalMemberValues.getDoubleAtString(tempPriceAmount);
                        d_tempPriceAmount = d_tempPriceAmount * Integer.parseInt(tempItemQty);
                        tempPriceAmount = GlobalMemberValues.getStringFormatNumber(d_tempPriceAmount,"2");
                        double d_tempTaxAmount = GlobalMemberValues.getDoubleAtString(tempTaxAmount);
//                        d_tempTaxAmount = d_tempTaxAmount * Integer.parseInt(tempItemQty);
                        tempTaxAmount = GlobalMemberValues.getStringFormatNumber(d_tempTaxAmount,"2");


                        subTotal += GlobalMemberValues.getDoubleAtString(tempPriceAmount);
                        subTax += GlobalMemberValues.getDoubleAtString(tempTaxAmount);
                        totalAmount += GlobalMemberValues.getDoubleAtString(tempPriceAmount) + GlobalMemberValues.getDoubleAtString(tempTaxAmount);;

                        LinearLayout saleitemlistLn2 = new LinearLayout(MainActivity.mContext);
                        saleitemlistLn2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                        saleitemlistLn2.setOrientation(LinearLayout.HORIZONTAL);

                        if (tempItemName.contains("========")){
                            TextView dotLineTv1 = new TextView(MainActivity.mContext);
                            dotLineTv1.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                            dotLineTv1.setGravity(Gravity.CENTER_HORIZONTAL|Gravity.TOP);
                            //dotLineTv1.setText("- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
                            dotLineTv1.setText("======================================================================================");
                            dotLineTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            printingLn.addView(dotLineTv1);

                        } else {
                            // 세일아이템 타이틀 ---------------------------------------------------------------------------------------------------------------
                            // 기존 순서대로... (item name      qty      price      amount)
                            /**
                             TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
                             saleItemTvContents1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                             saleItemTvContents1.setText(Payment_stringBackSpace_Exch(16, tempItemName));
                             saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                             GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
                             saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER));
                             saleitemlistLn2.addView(saleItemTvContents1);

                             TextView saleItemTvContents2 = new TextView(MainActivity.mContext);
                             saleItemTvContents2.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                             saleItemTvContents2.setText(tempItemQty);
                             saleItemTvContents2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                             GlobalMemberValues.setTextStyleOnClover(saleItemTvContents2);
                             saleItemTvContents2.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                             saleitemlistLn2.addView(saleItemTvContents2);

                             TextView saleItemTvContents3 = new TextView(MainActivity.mContext);
                             saleItemTvContents3.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                             saleItemTvContents3.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(tempPrice));
                             saleItemTvContents3.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                             GlobalMemberValues.setTextStyleOnClover(saleItemTvContents3);
                             saleItemTvContents3.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER));
                             saleitemlistLn2.addView(saleItemTvContents3);

                             TextView saleItemTvContents4 = new TextView(MainActivity.mContext);
                             saleItemTvContents4.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                             saleItemTvContents4.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(tempPriceAmount));
                             saleItemTvContents4.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                             GlobalMemberValues.setTextStyleOnClover(saleItemTvContents4);
                             saleItemTvContents4.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                             saleitemlistLn2.addView(saleItemTvContents4);
                             **/
                            int tempHeight = 44;
//                        if (tempItemName.length() > 30 || GlobalMemberValues.getSizeToString(tempItemName) > 30) {
//                            tempHeight = (tempHeight * 2) + 4;
//                        }
                            for (int z = 25; z <= GlobalMemberValues.getSizeToString(tempItemName) ; z += 24){
                                tempHeight += 44;
                            }


                            // 새 순서대로... (qty           item name              amount)
                            if (tempItemName.equals(GlobalMemberValues.mCommonGratuityName)){
                                // common gratuity 의 경우 표시하지 않고 가격만 전달..
                                // else 의 경우 일반 아이템 작성
                                str_commongratuity = tempPriceAmount;
                            } else {
                                TextView saleItemTvContents2 = new TextView(MainActivity.mContext);
                                saleItemTvContents2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                saleItemTvContents2.setText(tempItemQty);
                                saleItemTvContents2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(saleItemTvContents2);
                                saleItemTvContents2.setLayoutParams(new LinearLayout.LayoutParams(0, 34, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                                saleitemlistLn2.addView(saleItemTvContents2);

//                        TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
//                        saleItemTvContents1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                        saleItemTvContents1.setText(Payment_stringBackSpace_Exch(30, tempItemName));
//                        saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                        GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
//                        saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, 34, (GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER + GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER)));
//                        saleitemlistLn2.addView(saleItemTvContents1);


                                TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
                                saleItemTvContents1.setGravity(Gravity.TOP | Gravity.LEFT);
                                //saleItemTvContents1.setText(Payment_stringBackSpace_Exch(30, str_itemname));
//                        saleItemTvContents1.setText(designTextForItem(str_itemname, 30));
                                saleItemTvContents1.setText(tempItemName);
                                saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
                                saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, tempHeight, (GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER + GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER - 0.1f)));
                                saleitemlistLn2.addView(saleItemTvContents1);


                                if (!GlobalMemberValues.isStrEmpty(tempOptionTxt)) {
                                    double tempItemAmount = GlobalMemberValues.getDoubleAtString(tempPriceAmount);
                                    if (GlobalMemberValues.MODIFIER_PRICEVIEW) {
                                        double tempOptionPriceSum = GlobalMemberValues.getDoubleAtString(tempOptionPrice)
                                                + GlobalMemberValues.getDoubleAtString(temptemp_additionalprice1) + GlobalMemberValues.getDoubleAtString(temptemp_additionalprice2);
                                        // jihun 추가 start
                                        if (tempItemQty.equals("1")){
                                            tempItemAmount -= tempOptionPriceSum;
                                        } else {
                                            tempItemAmount -= tempOptionPriceSum * Integer.parseInt(tempItemQty);
                                        }
                                        // jihun 추가 end

                                        tempPriceAmount = tempItemAmount + "";
                                    }
                                }


                                TextView saleItemTvContents4 = new TextView(MainActivity.mContext);
                                saleItemTvContents4.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                saleItemTvContents4.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(tempPriceAmount));
                                saleItemTvContents4.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(saleItemTvContents4);
                                saleItemTvContents4.setLayoutParams(new LinearLayout.LayoutParams(0, 34, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                                saleitemlistLn2.addView(saleItemTvContents4);

                                // --------------------------------------------------------------------------------------------------------------------------------

                                printingLn.addView(saleitemlistLn2);
                            }



                            // Modifier -------------------------------------------------------------------------------------------------------------------------
                            if (GlobalMemberValues.isModifierPrintYN()) {
                                if (!GlobalMemberValues.isStrEmpty(tempOptionTxt) ||
                                        !GlobalMemberValues.isStrEmpty(tempAdditionalTxt1) || !GlobalMemberValues.isStrEmpty(tempAdditionalTxt2) ) {
                                    if (tempOptionTxt.contains("-J-")){
                                        tempOptionTxt = tempOptionTxt.replace("-J-","\n");
                                    }
                                    if (tempAdditionalTxt1.contains("-J-")){
                                        tempAdditionalTxt1 = tempAdditionalTxt1.replace("-J-","\n");
                                    }
                                    if (tempAdditionalTxt2.contains("-J-")){
                                        tempAdditionalTxt2 = tempAdditionalTxt2.replace("-J-","\n");
                                    }
                                    if (!GlobalMemberValues.isStrEmpty(tempOptionTxt)) {
                                        /**
                                         tempOptionTxt = "" + GlobalMemberValues.getModifierTxt2(tempItemQty, tempOptionTxt, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                         TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                         optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                         optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                         optionmodifierTv.setText(tempOptionTxt);
                                         optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                         GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                         printingLn.addView(optionmodifierTv);
                                         **/



                                        GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempOptionTxt, tempOptionPrice, false, false);
                                    }
                                    if (!GlobalMemberValues.isStrEmpty(tempAdditionalTxt1)) {
                                        /**
                                         tempAdditionalTxt1 += GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
                                         "[Add Ingredients]\n" + GlobalMemberValues.getModifierTxt2(tempItemQty, tempAdditionalTxt1, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                         TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                         optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                         optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                         optionmodifierTv.setText(tempAdditionalTxt1);
                                         optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                         GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                         printingLn.addView(optionmodifierTv);
                                         **/

                                        GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempAdditionalTxt1, temptemp_additionalprice1, false, false);
                                    }
                                    if (!GlobalMemberValues.isStrEmpty(tempAdditionalTxt2)) {
                                        /**
                                         tempAdditionalTxt2 += GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
                                         "[General Modifier]\n" + GlobalMemberValues.getModifierTxt2(tempItemQty, tempAdditionalTxt2, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                         TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                         optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                         optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                         optionmodifierTv.setText(tempAdditionalTxt2);
                                         optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                         GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                         printingLn.addView(optionmodifierTv);
                                         **/

                                        GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempAdditionalTxt2, temptemp_additionalprice2, false, false);
                                    }

                                    /**
                                     TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                     optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                     optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                     optionmodifierTv.setText("\n   ");
                                     optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                     GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                     printingLn.addView(optionmodifierTv);
                                     **/


                                }
                            }
                            // --------------------------------------------------------------------------------------------------------------------------------
                            // special request memo
                            if (!GlobalMemberValues.isStrEmpty(tempKitchenMemo) && !tempKitchenMemo.equals("nokitchenmemo")) {
                                String str_tempKitchenMemo = "--- Special Request ---\n" + "\t" + tempKitchenMemo;
                                for (int z = 25; z <= GlobalMemberValues.getSizeToString(str_tempKitchenMemo) ; z += 24){
                                    tempHeight += 38;
                                }

                                if (tempHeight/35 < GlobalMemberValues.countChar(str_tempKitchenMemo, '\n')){
                                    tempHeight = 50 * GlobalMemberValues.countChar(str_tempKitchenMemo, '\n');
                                }

                                TextView contentsTv = new TextView(MainActivity.mContext);
                                contentsTv.setText(str_tempKitchenMemo);
                                contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(contentsTv);
                                contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight + 28));
                                printingLn.addView(contentsTv);


//                            TextView tempKitchenMemoTv = new TextView(MainActivity.mContext);
//                            tempKitchenMemoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
//                            tempKitchenMemoTv.setGravity(Gravity.LEFT|Gravity.TOP);
//                            tempKitchenMemoTv.setText("--- Special Request ---\n" + "\t" + tempKitchenMemo);
//                            tempKitchenMemoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                            GlobalMemberValues.setTextStyleOnClover(tempKitchenMemoTv);

//                            printingLn.addView(tempKitchenMemoTv);


//                            GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempAdditionalTxt1, temptemp_additionalprice2), false);
                            }

                            // discount / extra
                            if (!selectedDcExtraAllEach.isEmpty()){
                                if (selectedDcExtraAllEach.equals("ALL")){
                                    String str_all_aheadtxt = "";
                                    if (selectedDcExtraType.equals("DC")){
                                        // all dc
                                        str_all_aheadtxt = "ALL Discount "+ dcextravalue + dcextratype;
                                        str_discountYN = "All D/C Total";
                                    } else {
                                        // add ex
                                        str_all_aheadtxt = "ALL Extra "+ dcextravalue + dcextratype;
                                        str_discountYN = "Extra Total";
                                    }

                                    tempHeight = 44;
                                    for (int z = 25; z <= GlobalMemberValues.getSizeToString(str_all_aheadtxt) ; z += 24){
                                        tempHeight += 44;
                                    }

                                    if (strOrderItemsList.length - 1 == i){

                                        printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));

                                        TextView contentsTv = new TextView(MainActivity.mContext);
                                        contentsTv.setText(" > " + str_all_aheadtxt);
                                        contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                        GlobalMemberValues.setTextStyleOnClover(contentsTv);
                                        contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight));
                                        printingLn.addView(contentsTv);
                                    }

                                } else if (selectedDcExtraAllEach.equals("EACH")){
                                    String str_each_aheadtxt = "";
                                    if (selectedDcExtraType.equals("DC")){
                                        // each dc
                                        str_each_aheadtxt = "Each Discount " + dcextravalue + dcextratype;
                                        str_discountYN = "Each D/C Total";
                                    } else {
                                        // each ex
                                        str_each_aheadtxt = "Each Extra " + dcextravalue + dcextratype;
                                        str_discountYN = "Extra Total";
                                    }

                                    tempHeight = 44;
                                    for (int z = 25; z <= GlobalMemberValues.getSizeToString(str_each_aheadtxt) ; z += 24){
                                        tempHeight += 44;
                                    }

                                    TextView contentsTv = new TextView(MainActivity.mContext);
                                    contentsTv.setText(" > " + str_each_aheadtxt);
                                    contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(contentsTv);
                                    contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight));
                                    printingLn.addView(contentsTv);
                                }

                                d_discountAmount = d_discountAmount + GlobalMemberValues.getDoubleAtString(selectedDcExtraPrice);
                                str_discountextra_total = GlobalMemberValues.getStringFormatNumber(d_discountAmount, "2");
                            }

                            // discount / extra

                        }


                    }
                    itemPrint.deleteItemPrintingList(printCode);
                }

                /**********************************************************************************************************************************/

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                if (str_deliverytakeaway.equals("D")) {
                    // 기본 배송비가 얼마인지 구한다.
                    double store_deliverycharge = GlobalMemberValues.getDoubleAtString(
                            MainActivity.mDbInit.dbExecuteReadReturnString("select deliverycharge from salon_storegeneral")
                    );

                    // 배송비 무료 기준금액
                    double store_deliveryfreemoney = GlobalMemberValues.getDoubleAtString(
                            MainActivity.mDbInit.dbExecuteReadReturnString("select deliveryfree from salon_storegeneral")
                    );

                    if (totalAmount > 0) {
                        if (totalAmount < store_deliveryfreemoney) {
                            pickupDeliveryFee = store_deliverycharge;
                        }
                    }
                } else {
                    if (str_deliverytakeaway.equals("T")) {
                        // Pickup (Togo) 포장 비용이 있을 경우
                        double store_pickupcharge = GlobalMemberValues.getDoubleAtString(
                                MainActivity.mDbInit.dbExecuteReadReturnString("select pickupcharge from salon_storegeneral")
                        );
                        pickupDeliveryFee = store_pickupcharge;
                    }
                }

                totalAmount += pickupDeliveryFee;

                // Sub Total -----------------------------------------------------------------------------------------------------------------------
                LinearLayout subtotalLn = new LinearLayout(MainActivity.mContext);
                subtotalLn.setLayoutParams(matchParentParams);
                subtotalLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                customerNameLeftTv.setText("Sub Total");
                customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                subtotalLn.addView(customerNameLeftTv);

                double d_temp_subtotal = subTotal - GlobalMemberValues.getDoubleAtString(str_commongratuity);

                TextView customerNameRightTv = new TextView(MainActivity.mContext);
                customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                customerNameRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(d_temp_subtotal + ""));
                customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                subtotalLn.addView(customerNameRightTv);

                printingLn.addView(subtotalLn);
                // ---------------------------------------------------------------------------------------------------------------------------------
                // Tax -------------------------------------------------------------------------------------------------------------------------------------
                LinearLayout taxLn = new LinearLayout(MainActivity.mContext);
                taxLn.setLayoutParams(matchParentParams);
                taxLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView dcextratotalTv = new TextView(MainActivity.mContext);
                dcextratotalTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                dcextratotalTv.setText("Tax");
                dcextratotalTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(dcextratotalTv);
                dcextratotalTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                taxLn.addView(dcextratotalTv);

                TextView dcextratotalLeftTv = new TextView(MainActivity.mContext);
                dcextratotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                dcextratotalLeftTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(subTax + ""));
                dcextratotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(dcextratotalLeftTv);
                dcextratotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                taxLn.addView(dcextratotalLeftTv);

                printingLn.addView(taxLn);
                // Common Gratuity -----------------------------------------------------------------------------------------------------------------------
                LinearLayout commongratuityLn = new LinearLayout(MainActivity.mContext);
                commongratuityLn.setLayoutParams(matchParentParams);
                commongratuityLn.setOrientation(LinearLayout.HORIZONTAL);

                // 04242023 --------------------------------------------------------------------------
                String tempCGtype = MainActivity.mDbInit.dbExecuteReadReturnString(
                        " select gratuitytype from salon_storegeneral "
                );
                if (GlobalMemberValues.isStrEmpty(tempCGtype)) {
                    tempCGtype = "%";
                }

                double tempGratuityvalue = GlobalMemberValues.getDoubleAtString(MainActivity.mDbInit.dbExecuteReadReturnString(
                        " select gratuityvalue from salon_storegeneral "
                ));

                String tempCGName = "";
                if (tempCGtype == "%" || tempCGtype.equals("%")) {
                    tempCGName = tempGratuityvalue + tempCGtype;
                } else {
                    tempCGName = tempCGtype + tempGratuityvalue;
                }

                String commonGratuityStr = "Gratuity " + tempCGName;
                // 04242023 --------------------------------------------------------------------------

                TextView commongratuityTv = new TextView(MainActivity.mContext);
                commongratuityTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);

                // 04242023
                commongratuityTv.setText(commonGratuityStr);

                commongratuityTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(commongratuityTv);
                commongratuityTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                commongratuityLn.addView(commongratuityTv);


                TextView commongratuityRightTv = new TextView(MainActivity.mContext);
                commongratuityRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                commongratuityRightTv.setText(finalTempDollarStr + GlobalMemberValues.setDoubleToString(GlobalMemberValues.getDoubleAtString(str_commongratuity),2));
                commongratuityRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(commongratuityRightTv);
                commongratuityRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                commongratuityLn.addView(commongratuityRightTv);

                printingLn.addView(commongratuityLn);
                // ---------------------------------------------------------------------------------------------------------------------------------

                // ---------------------------------------------------------------------------------------------------------------------------------
                // ---------------------------------------------------------------------------------------------------------------------------------
                // discount / extra
                if (!str_discountextra_total.equals("")){
                    LinearLayout discountLn = new LinearLayout(MainActivity.mContext);
                    discountLn.setLayoutParams(matchParentParams);
                    discountLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView dcextratotalTv2 = new TextView(MainActivity.mContext);
                    dcextratotalTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    dcextratotalTv2.setText(str_discountYN);
                    dcextratotalTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(dcextratotalTv2);
                    dcextratotalTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    discountLn.addView(dcextratotalTv2);

                    if (str_discountYN.contains("D/C")){
                        str_discountextra_total = "-" + str_discountextra_total;
                        totalAmount = totalAmount - d_discountAmount;
                    } else {
                        totalAmount = totalAmount + d_discountAmount;
                    }

                    TextView dcextratotalLeftTv2 = new TextView(MainActivity.mContext);
                    dcextratotalLeftTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    dcextratotalLeftTv2.setText(finalTempDollarStr + str_discountextra_total);
                    dcextratotalLeftTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(dcextratotalLeftTv2);
                    dcextratotalLeftTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    discountLn.addView(dcextratotalLeftTv2);

                    printingLn.addView(discountLn);
                }
                // ---------------------------------------------------------------------------------------------------------------------------------
                if (pickupDeliveryFee > 0) {
                    if (str_deliverytakeaway.equals("D")) {
                        main_Text +=  "Delivery Fee        ";
                    } else {
                        main_Text +=  "To Go Fee         ";
                    }

                    LinearLayout deliverytogofeeLn = new LinearLayout(MainActivity.mContext);
                    deliverytogofeeLn.setLayoutParams(matchParentParams);
                    deliverytogofeeLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView deliveryToGoFeeLeftTv = new TextView(MainActivity.mContext);
                    deliveryToGoFeeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    deliveryToGoFeeLeftTv.setText(main_Text);
                    deliveryToGoFeeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(deliveryToGoFeeLeftTv);
                    deliveryToGoFeeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    deliverytogofeeLn.addView(deliveryToGoFeeLeftTv);

                    TextView deliveryToGoFeeRightTv = new TextView(MainActivity.mContext);
                    deliveryToGoFeeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    deliveryToGoFeeRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(pickupDeliveryFee + ""));
                    deliveryToGoFeeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(deliveryToGoFeeRightTv);
                    deliveryToGoFeeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    deliverytogofeeLn.addView(deliveryToGoFeeRightTv);

                    printingLn.addView(deliverytogofeeLn);
                }

                // Total Amount --------------------------------------------------------------------------------------------------------------------
                LinearLayout totalAmountLn = new LinearLayout(MainActivity.mContext);
                totalAmountLn.setLayoutParams(matchParentParams);
                totalAmountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView totalAmountLeftTv = new TextView(MainActivity.mContext);
                totalAmountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                totalAmountLeftTv.setText("Total Amount");
                totalAmountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(totalAmountLeftTv);
                totalAmountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                totalAmountLn.addView(totalAmountLeftTv);

                TextView totalAmountRightTv = new TextView(MainActivity.mContext);
                totalAmountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                totalAmountRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(totalAmount + ""));
                totalAmountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(totalAmountRightTv);
                totalAmountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                totalAmountLn.addView(totalAmountRightTv);

                printingLn.addView(totalAmountLn);
                // ---------------------------------------------------------------------------------------------------------------------------------

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                // qr code -----------------------------------------------------------------------------------------
                if (globalMemberValues.getPOSType().equals("R") && globalMemberValues.isPOSWebPay()) {
                    LinearLayout tablepayLn = new LinearLayout(MainActivity.mContext);
                    tablepayLn.setLayoutParams(matchParentParams);
                    tablepayLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView tablepayTv = new TextView(MainActivity.mContext);
                    tablepayTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                    tablepayTv.setText("Scan the QR code below to pay at the table");
                    tablepayTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, (GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER - 5));
                    GlobalMemberValues.setTextStyleOnClover(tablepayTv);
                    tablepayTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    tablepayLn.addView(tablepayTv);

                    printingLn.addView(tablepayLn);


                    String tempAppHost = GlobalMemberValues.MOBILE_HOST;

                    String tempAppStr = GlobalMemberValues.CLOUD_SERVER_URL_BASIC;
                    String qrcodeStr = GlobalMemberValues.getReplaceText(tempAppStr, GlobalMemberValues.CLOUD_HOST, tempAppHost);
                    qrcodeStr += "index_sitedoor.asp?n=" + GlobalMemberValues.STORE_INDEX +
                            "-J-" + str_restaurant_tablename +
                            "-J-" + GlobalMemberValues.getReplaceText(str_restaurant_tableidx, "T", "") +
                            "-J-" + "Y" +
                            "-J-" + GlobalMemberValues.STATION_CODE +
                            "-J-" + str_restaurant_tableholdcode +
                            "-J-" + GlobalMemberValues.SALON_NAME +
                            "-J-" + str_restaurant_tablename +
                            "-J-" + "$" + GlobalMemberValues.getCommaStringForDouble(totalAmount + "");

                    GlobalMemberValues.logWrite("qrcodejjjlog", "qrcode txt : " + qrcodeStr + "\n");

                    ImageView qrImage = new ImageView(MainActivity.mContext);
                    qrImage.setImageBitmap(GlobalMemberValues.generateRQCode(qrcodeStr));
                    printingLn.addView(qrImage);
                }
                // ------------------------------------------------------------------------------------------------

                // receipt footer 프린터 --------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_receiptfooter)) {
                    TextView footerTv = new TextView(MainActivity.mContext);
                    footerTv.setLayoutParams(matchParentParams);
                    footerTv.setGravity(Gravity.CENTER);
                    footerTv.setText(str_receiptfooter);
                    footerTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(footerTv);
                    printingLn.addView(footerTv);

                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }
                // ------------------------------------------------------------------------------------------------

                TextView footerTv = new TextView(MainActivity.mContext);
                footerTv.setLayoutParams(matchParentParams);
                footerTv.setGravity(Gravity.CENTER);
                footerTv.setText("Printed Time " + getDate() + " " + getTime());
                footerTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(footerTv);
                printingLn.addView(footerTv);
            }
        };
        thread.start();
        try {
            thread.join();
        } catch(InterruptedException e) {}

        return printingLn;
    }

    public static LinearLayout makingLinearLayoutForBatchDetail(final JSONObject data) {
        if (data == null) {
            return  null;
        }

        GlobalMemberValues.logWrite("cloverprintinglog", "받은 데이터 : " + data.toString() + "\n");

        final LinearLayout.LayoutParams matchParentParams
                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32);
        matchParentParams.setMargins(0, 0, 0, 0);

        final LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
        printingLn.setLayoutParams(new LinearLayout.LayoutParams(GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, LinearLayout.LayoutParams.MATCH_PARENT));
        printingLn.setOrientation(LinearLayout.VERTICAL);
        printingLn.setBackgroundColor(Color.parseColor("#ffffff"));

        Thread thread = new Thread() {
            @Override
            public void run() {

                String textlist = "";

                String str_batchnumber = "";
                String str_totalcardcount = "";
                String str_totalcardtip = "";
                String str_totalcardamount = "";

                String str_visaamount = "";
                String str_masteramount = "";
                String str_amexamount = "";
                String str_discoveramount = "";

                String str_batchdate =  "";

                String str_pickupdeliveryfeeamount =  "";
                String str_pickupfeeamount =  "";
                String str_deliveryfeeamount =  "";

                textlist +=  ">>> BATCH SUMMARY <<<\r\n\r\n";

                String nowDate = getDate();
                String nowTime = getTime();

                str_batchnumber = GlobalMemberValues.getDataInJsonData(data, "BatchNumber");
                str_totalcardcount = GlobalMemberValues.getDataInJsonData(data, "CreditCount");
                str_totalcardtip = GlobalMemberValues.getDataInJsonData(data, "totalcardtip");
                str_totalcardamount = GlobalMemberValues.getDataInJsonData(data, "CreditAmount");
                str_visaamount = GlobalMemberValues.getDataInJsonData(data, "visaamount");
                str_masteramount = GlobalMemberValues.getDataInJsonData(data, "masteramount");
                str_amexamount = GlobalMemberValues.getDataInJsonData(data, "amexamount");
                str_discoveramount = GlobalMemberValues.getDataInJsonData(data, "discoveramount");
                str_batchdate = GlobalMemberValues.getDataInJsonData(data, "BatchDate");
                str_pickupdeliveryfeeamount = GlobalMemberValues.getDataInJsonData(data, "pickupdeliveryfee");
                str_pickupfeeamount = GlobalMemberValues.getDataInJsonData(data, "pickupfee");
                str_deliveryfeeamount = GlobalMemberValues.getDataInJsonData(data, "deliveryfee");

                // Batch Summary 타이틀 -----------------------------------------------------------------------------------------------
                TextView batchtitleTv = new TextView(MainActivity.mContext);
                batchtitleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                batchtitleTv.setGravity(Gravity.CENTER);
                batchtitleTv.setText(">>>>> BATCH SUMMARY <<<<<");
                batchtitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                GlobalMemberValues.setTextStyleOnClover(batchtitleTv);
                printingLn.addView(batchtitleTv);
                // --------------------------------------------------------------------------------------------------------------------

                // Batch # ------------------------------------------------------------------------------------------------------------
                LinearLayout batchnumberLn = new LinearLayout(MainActivity.mContext);
                batchnumberLn.setLayoutParams(matchParentParams);
                batchnumberLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView batchnumberLeftTv = new TextView(MainActivity.mContext);
                batchnumberLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                batchnumberLeftTv.setText("Batch #");
                batchnumberLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(batchnumberLeftTv);
                batchnumberLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                batchnumberLn.addView(batchnumberLeftTv);

                TextView batchnumberRightTv = new TextView(MainActivity.mContext);
                batchnumberRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                batchnumberRightTv.setText(GlobalMemberValues.getCommaStringForInteger(str_batchnumber));
                batchnumberRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(batchnumberRightTv);
                batchnumberRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                batchnumberLn.addView(batchnumberRightTv);

                printingLn.addView(batchnumberLn);
                // --------------------------------------------------------------------------------------------------------------------

                // TOTAL CARD COUNT ---------------------------------------------------------------------------------------------------
                LinearLayout totalcardcountLn = new LinearLayout(MainActivity.mContext);
                totalcardcountLn.setLayoutParams(matchParentParams);
                totalcardcountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView totalcardcountLeftTv = new TextView(MainActivity.mContext);
                totalcardcountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                totalcardcountLeftTv.setText("TOTAL CARD COUNT");
                totalcardcountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(totalcardcountLeftTv);
                totalcardcountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                totalcardcountLn.addView(totalcardcountLeftTv);

                TextView totalcardcountRightTv = new TextView(MainActivity.mContext);
                totalcardcountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                totalcardcountRightTv.setText(GlobalMemberValues.getCommaStringForInteger(str_totalcardcount));
                totalcardcountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(totalcardcountRightTv);
                totalcardcountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                totalcardcountLn.addView(totalcardcountRightTv);

                printingLn.addView(totalcardcountLn);
                // --------------------------------------------------------------------------------------------------------------------

                // TOTAL CARD AMOUNT --------------------------------------------------------------------------------------------------
                LinearLayout totalcardamountLn = new LinearLayout(MainActivity.mContext);
                totalcardamountLn.setLayoutParams(matchParentParams);
                totalcardamountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView totalcardamountLeftTv = new TextView(MainActivity.mContext);
                totalcardamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                totalcardamountLeftTv.setText("TOTAL CARD AMOUNT");
                totalcardamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(totalcardamountLeftTv);
                totalcardamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                totalcardamountLn.addView(totalcardamountLeftTv);

                TextView totalcardamountRightTv = new TextView(MainActivity.mContext);
                totalcardamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                totalcardamountRightTv.setText(GlobalMemberValues.getCommaStringForDouble(str_totalcardamount));
                totalcardamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(totalcardamountRightTv);
                totalcardamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                totalcardamountLn.addView(totalcardamountRightTv);

                printingLn.addView(totalcardamountLn);
                // --------------------------------------------------------------------------------------------------------------------

                // TOTAL CARD TIP -----------------------------------------------------------------------------------------------------
                LinearLayout totalcardtipLn = new LinearLayout(MainActivity.mContext);
                totalcardtipLn.setLayoutParams(matchParentParams);
                totalcardtipLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView totalcardtipLeftTv = new TextView(MainActivity.mContext);
                totalcardtipLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                totalcardtipLeftTv.setText("TOTAL CARD TIP");
                totalcardtipLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(totalcardtipLeftTv);
                totalcardtipLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                totalcardtipLn.addView(totalcardtipLeftTv);

                TextView totalcardtipRightTv = new TextView(MainActivity.mContext);
                totalcardtipRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                totalcardtipRightTv.setText(GlobalMemberValues.getCommaStringForDouble(str_totalcardtip));
                totalcardtipRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(totalcardtipRightTv);
                totalcardtipRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                totalcardtipLn.addView(totalcardtipRightTv);

                printingLn.addView(totalcardtipLn);
                // --------------------------------------------------------------------------------------------------------------------

                // TOTAL CARD TIP -----------------------------------------------------------------------------------------------------
                LinearLayout totalcarddelpickfeeLn = new LinearLayout(MainActivity.mContext);
                totalcarddelpickfeeLn.setLayoutParams(matchParentParams);
                totalcarddelpickfeeLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView totalcarddelpickfeeLeftTv = new TextView(MainActivity.mContext);
                totalcarddelpickfeeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                totalcarddelpickfeeLeftTv.setText("TOTAL CARD DEL/PICK FEE");
                totalcarddelpickfeeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(totalcarddelpickfeeLeftTv);
                totalcarddelpickfeeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                totalcarddelpickfeeLn.addView(totalcarddelpickfeeLeftTv);

                TextView totalcarddelpickfeeRightTv = new TextView(MainActivity.mContext);
                totalcarddelpickfeeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                totalcarddelpickfeeRightTv.setText(GlobalMemberValues.getCommaStringForDouble(str_pickupdeliveryfeeamount));
                totalcarddelpickfeeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(totalcarddelpickfeeRightTv);
                totalcarddelpickfeeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                totalcarddelpickfeeLn.addView(totalcarddelpickfeeRightTv);

                printingLn.addView(totalcarddelpickfeeLn);
                // --------------------------------------------------------------------------------------------------------------------

                // 타이틀 -------------------------------------------------------------------------------------------------------------
                TextView typeofcardtitleTv = new TextView(MainActivity.mContext);
                typeofcardtitleTv.setLayoutParams(matchParentParams);
                typeofcardtitleTv.setGravity(Gravity.CENTER);
                typeofcardtitleTv.setText("=========== TYPE OF CARD ===========");
                typeofcardtitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(typeofcardtitleTv);
                printingLn.addView(typeofcardtitleTv);
                // --------------------------------------------------------------------------------------------------------------------

                // VISA ---------------------------------------------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_visaamount)) {
                    LinearLayout visaLn = new LinearLayout(MainActivity.mContext);
                    visaLn.setLayoutParams(matchParentParams);
                    visaLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView visaLeftTv = new TextView(MainActivity.mContext);
                    visaLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    visaLeftTv.setText("VISA");
                    visaLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(visaLeftTv);
                    visaLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                    visaLeftTv.setPadding(40, 0, 0, 0);
                    visaLn.addView(visaLeftTv);

                    TextView visaRightTv = new TextView(MainActivity.mContext);
                    visaRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    visaRightTv.setText(GlobalMemberValues.getCommaStringForDouble(str_visaamount));
                    visaRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(visaRightTv);
                    visaRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    visaLn.addView(visaRightTv);

                    printingLn.addView(visaLn);
                }
                // --------------------------------------------------------------------------------------------------------------------

                // MASTER -------------------------------------------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_masteramount)) {
                    LinearLayout masterLn = new LinearLayout(MainActivity.mContext);
                    masterLn.setLayoutParams(matchParentParams);
                    masterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView masterLeftTv = new TextView(MainActivity.mContext);
                    masterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    masterLeftTv.setText("MASTER");
                    masterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterLeftTv);
                    masterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                    masterLeftTv.setPadding(40, 0, 0, 0);
                    masterLn.addView(masterLeftTv);

                    TextView masterRightTv = new TextView(MainActivity.mContext);
                    masterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    masterRightTv.setText(GlobalMemberValues.getCommaStringForDouble(str_masteramount));
                    masterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterRightTv);
                    masterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    masterLn.addView(masterRightTv);

                    printingLn.addView(masterLn);
                }
                // --------------------------------------------------------------------------------------------------------------------

                // AMEX -------------------------------------------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_amexamount)) {
                    LinearLayout masterLn = new LinearLayout(MainActivity.mContext);
                    masterLn.setLayoutParams(matchParentParams);
                    masterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView masterLeftTv = new TextView(MainActivity.mContext);
                    masterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    masterLeftTv.setText("AMEX");
                    masterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterLeftTv);
                    masterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                    masterLeftTv.setPadding(40, 0, 0, 0);
                    masterLn.addView(masterLeftTv);

                    TextView masterRightTv = new TextView(MainActivity.mContext);
                    masterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    masterRightTv.setText(GlobalMemberValues.getCommaStringForDouble(str_amexamount));
                    masterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterRightTv);
                    masterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    masterLn.addView(masterRightTv);

                    printingLn.addView(masterLn);
                }
                // --------------------------------------------------------------------------------------------------------------------

                // DISCOVER -------------------------------------------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_discoveramount)) {
                    LinearLayout masterLn = new LinearLayout(MainActivity.mContext);
                    masterLn.setLayoutParams(matchParentParams);
                    masterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView masterLeftTv = new TextView(MainActivity.mContext);
                    masterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    masterLeftTv.setText("DISCOVER");
                    masterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterLeftTv);
                    masterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                    masterLeftTv.setPadding(40, 0, 0, 0);
                    masterLn.addView(masterLeftTv);

                    TextView masterRightTv = new TextView(MainActivity.mContext);
                    masterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    masterRightTv.setText(GlobalMemberValues.getCommaStringForDouble(str_discoveramount));
                    masterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterRightTv);
                    masterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    masterLn.addView(masterRightTv);

                    printingLn.addView(masterLn);
                }
                // --------------------------------------------------------------------------------------------------------------------

                // TIP -------------------------------------------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_totalcardtip)) {
                    LinearLayout masterLn = new LinearLayout(MainActivity.mContext);
                    masterLn.setLayoutParams(matchParentParams);
                    masterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView masterLeftTv = new TextView(MainActivity.mContext);
                    masterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    masterLeftTv.setText("TIP");
                    masterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterLeftTv);
                    masterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                    masterLeftTv.setPadding(40, 0, 0, 0);
                    masterLn.addView(masterLeftTv);

                    TextView masterRightTv = new TextView(MainActivity.mContext);
                    masterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    masterRightTv.setText(GlobalMemberValues.getCommaStringForDouble(str_totalcardtip));
                    masterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterRightTv);
                    masterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    masterLn.addView(masterRightTv);

                    printingLn.addView(masterLn);
                }
                // --------------------------------------------------------------------------------------------------------------------

                // TO GO FEE --------------------------------------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_pickupfeeamount)) {
                    LinearLayout masterLn = new LinearLayout(MainActivity.mContext);
                    masterLn.setLayoutParams(matchParentParams);
                    masterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView masterLeftTv = new TextView(MainActivity.mContext);
                    masterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    masterLeftTv.setText("TO GO FEE");
                    masterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterLeftTv);
                    masterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                    masterLeftTv.setPadding(40, 0, 0, 0);
                    masterLn.addView(masterLeftTv);

                    TextView masterRightTv = new TextView(MainActivity.mContext);
                    masterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    masterRightTv.setText(GlobalMemberValues.getCommaStringForDouble(str_pickupfeeamount));
                    masterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterRightTv);
                    masterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    masterLn.addView(masterRightTv);

                    printingLn.addView(masterLn);
                }
                // --------------------------------------------------------------------------------------------------------------------

                // DELIVERY FEE -------------------------------------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_pickupdeliveryfeeamount)) {
                    LinearLayout masterLn = new LinearLayout(MainActivity.mContext);
                    masterLn.setLayoutParams(matchParentParams);
                    masterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView masterLeftTv = new TextView(MainActivity.mContext);
                    masterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    masterLeftTv.setText("DELIVERY FEE");
                    masterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterLeftTv);
                    masterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                    masterLeftTv.setPadding(40, 0, 0, 0);
                    masterLn.addView(masterLeftTv);

                    TextView masterRightTv = new TextView(MainActivity.mContext);
                    masterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    masterRightTv.setText(GlobalMemberValues.getCommaStringForDouble(str_pickupdeliveryfeeamount));
                    masterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterRightTv);
                    masterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    masterLn.addView(masterRightTv);

                    printingLn.addView(masterLn);
                }
                // --------------------------------------------------------------------------------------------------------------------

                // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------
                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------


                // Batched Date --------------------------------------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_pickupdeliveryfeeamount)) {
                    LinearLayout masterLn = new LinearLayout(MainActivity.mContext);
                    masterLn.setLayoutParams(matchParentParams);
                    masterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView masterLeftTv = new TextView(MainActivity.mContext);
                    masterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    masterLeftTv.setText("Batched");
                    masterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterLeftTv);
                    masterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    masterLn.addView(masterLeftTv);

                    TextView masterRightTv = new TextView(MainActivity.mContext);
                    masterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    masterRightTv.setText(str_batchdate);
                    masterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterRightTv);
                    masterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    masterLn.addView(masterRightTv);

                    printingLn.addView(masterLn);
                }
                // --------------------------------------------------------------------------------------------------------------------

                // Printed Date --------------------------------------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_pickupdeliveryfeeamount)) {
                    LinearLayout masterLn = new LinearLayout(MainActivity.mContext);
                    masterLn.setLayoutParams(matchParentParams);
                    masterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView masterLeftTv = new TextView(MainActivity.mContext);
                    masterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    masterLeftTv.setText("Printed");
                    masterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterLeftTv);
                    masterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    masterLn.addView(masterLeftTv);

                    TextView masterRightTv = new TextView(MainActivity.mContext);
                    masterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    masterRightTv.setText(nowDate + " " + nowTime);
                    masterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(masterRightTv);
                    masterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    masterLn.addView(masterRightTv);

                    printingLn.addView(masterLn);
                }
                // --------------------------------------------------------------------------------------------------------------------
            }

        };
        thread.start();
        try {
            thread.join();
        } catch(InterruptedException e) {}

        return printingLn;
    }

    public static LinearLayout makingLinearLayoutForBatch(final JSONObject data) {
        if (data == null) {
            return  null;
        }

        GlobalMemberValues.logWrite("cloverprintinglog", "받은 데이터 : " + data.toString() + "\n");

        final LinearLayout.LayoutParams matchParentParams
                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32);
        matchParentParams.setMargins(0, 0, 0, 0);

        final LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
        printingLn.setLayoutParams(new LinearLayout.LayoutParams(GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, LinearLayout.LayoutParams.MATCH_PARENT));
        printingLn.setOrientation(LinearLayout.VERTICAL);
        printingLn.setBackgroundColor(Color.parseColor("#ffffff"));

        Thread thread = new Thread() {
            @Override
            public void run() {
                String textlist = "";

                String str_saledate = "";
                String str_service = "";
                String str_product = "";
                String str_giftcard = "";
                String str_discount = "";
                String str_void = "";
                String str_netsales = "";
                String str_refund = "";
                String str_tax = "";
                String str_grosssales = "";
                String str_cash = "";
                String str_card = "";
                String str_cardvisa = "";
                String str_cardaster = ""; // "0||0.00"
                String str_cardamex = "";
                String str_carddiscover = "";
                String str_cardoffcard = "";
                String str_giftcard2 = "";
                String str_point = "";
                String str_other = "";

                String str_cnt_visa = "";
                String str_cnt_master = "";
                String str_cnt_amex = "";
                String str_cnt_discover = "";
                String str_cnt_offcard = "";


                String str_emp_empsalesempname = "";
                String str_emp_empsalesqty = "";
                String str_emp_empsalestip = "";
                String str_emp_empsalescomm = "";
                String str_emp_empsalessalesamt = "";

                String str_cardtip = "";
                String str_pickupfee = "";
                String str_deliveryfee = "";

                String nowDate = getDate();
                String nowTime = getTime();


                str_saledate = GlobalMemberValues.getDataInJsonData(data, "saledate");

                str_service = GlobalMemberValues.getDataInJsonData(data,"service");
                str_product = GlobalMemberValues.getDataInJsonData(data,"product");
                str_giftcard = GlobalMemberValues.getDataInJsonData(data,"giftcard");
                str_discount = GlobalMemberValues.getDataInJsonData(data,"discount");
                str_void = GlobalMemberValues.getDataInJsonData(data,"void");

                str_netsales = GlobalMemberValues.getDataInJsonData(data,"netsales");
                str_refund = GlobalMemberValues.getDataInJsonData(data,"refund");
                str_tax = GlobalMemberValues.getDataInJsonData(data,"tax");
                str_grosssales = GlobalMemberValues.getDataInJsonData(data,"grosssales");

                str_cash = GlobalMemberValues.getDataInJsonData(data,"cash");
                str_card = GlobalMemberValues.getDataInJsonData(data,"card");
                str_cardvisa = GlobalMemberValues.getDataInJsonData(data,"cardvisa");
                str_cnt_visa = cardReadCount(GlobalMemberValues.getDataInJsonData(data,"cardvisa"));
                str_cardaster = GlobalMemberValues.getDataInJsonData(data,"cardmaster");
                str_cnt_master = cardReadCount(GlobalMemberValues.getDataInJsonData(data,"cardmaster"));
                str_cardamex = GlobalMemberValues.getDataInJsonData(data,"cardamex");
                str_cnt_amex = cardReadCount(GlobalMemberValues.getDataInJsonData(data,"cardamex"));
                str_carddiscover = GlobalMemberValues.getDataInJsonData(data,"carddiscover");
                str_cnt_discover = cardReadCount(GlobalMemberValues.getDataInJsonData(data,"carddiscover"));
                str_cardoffcard = GlobalMemberValues.getDataInJsonData(data,"cardoffcard");
                str_cnt_offcard = cardReadCount(GlobalMemberValues.getDataInJsonData(data,"cardoffcard"));

                str_giftcard2 = GlobalMemberValues.getDataInJsonData(data,"giftcard2");
                str_point = GlobalMemberValues.getDataInJsonData(data,"point");
                str_other = GlobalMemberValues.getDataInJsonData(data,"other");

                str_cardtip = GlobalMemberValues.getDataInJsonData(data,"cardtip");
                str_pickupfee = GlobalMemberValues.getDataInJsonData(data,"pickupfee");
                str_deliveryfee = GlobalMemberValues.getDataInJsonData(data,"deliveryfee");

                // Closing 타이틀 -----------------------------------------------------------------------------------------------------
                TextView batchtitleTv = new TextView(MainActivity.mContext);
                batchtitleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                batchtitleTv.setGravity(Gravity.CENTER);
                batchtitleTv.setText("[CLOSING REPORT]");
                batchtitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                GlobalMemberValues.setTextStyleOnClover(batchtitleTv);
                printingLn.addView(batchtitleTv);
                // --------------------------------------------------------------------------------------------------------------------

                // Sale Date ----------------------------------------------------------------------------------------------------------
                LinearLayout saledateLn = new LinearLayout(MainActivity.mContext);
                saledateLn.setLayoutParams(matchParentParams);
                saledateLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView saledateLeftTv = new TextView(MainActivity.mContext);
                saledateLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                saledateLeftTv.setText("Sale Date");
                saledateLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(saledateLeftTv);
                saledateLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                saledateLn.addView(saledateLeftTv);

                TextView saledateRightTv = new TextView(MainActivity.mContext);
                saledateRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                saledateRightTv.setText(str_saledate);
                saledateRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(saledateRightTv);
                saledateRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                saledateLn.addView(saledateRightTv);

                printingLn.addView(saledateLn);
                // --------------------------------------------------------------------------------------------------------------------

                // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------
                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                /** 세일아이템 관련 ***************************************************************************************************************/
                LinearLayout empslaeinfoLn = new LinearLayout(MainActivity.mContext);
                empslaeinfoLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                empslaeinfoLn.setOrientation(LinearLayout.HORIZONTAL);

                // 세일아이템 타이틀 ---------------------------------------------------------------------------------------------------------------
                TextView empslaeinfoTv1 = new TextView(MainActivity.mContext);
                empslaeinfoTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                empslaeinfoTv1.setText("Emp.Name");
                empslaeinfoTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(empslaeinfoTv1);
                empslaeinfoTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.2f));
                empslaeinfoLn.addView(empslaeinfoTv1);

                TextView empslaeinfoTv2 = new TextView(MainActivity.mContext);
                empslaeinfoTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                empslaeinfoTv2.setText("Tip");
                empslaeinfoTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(empslaeinfoTv2);
                empslaeinfoTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.8f));
                empslaeinfoLn.addView(empslaeinfoTv2);

                TextView empslaeinfoTv3 = new TextView(MainActivity.mContext);
                empslaeinfoTv3.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                empslaeinfoTv3.setText("Sale.Amt");
                empslaeinfoTv3.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(empslaeinfoTv3);
                empslaeinfoTv3.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                empslaeinfoLn.addView(empslaeinfoTv3);

                printingLn.addView(empslaeinfoLn);
                // --------------------------------------------------------------------------------------------------------------------------------

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                JSONArray arr_empSaleList = new JSONArray();
                try {
                    arr_empSaleList = data.getJSONArray("employeesaleslist");
                } catch (JSONException e) {
                    e.printStackTrace();
                }

                GlobalMemberValues.logWrite("closingreportlog", "arr_empSaleList.length() : " + arr_empSaleList.length() + "\n");

                if (arr_empSaleList.length() != 0) {
                    // employeelist not null!
                    int cnt = arr_empSaleList.length();
                    for (int i = 0; i < cnt; i++) {
                        try {
                            JSONObject dic_jobc = arr_empSaleList.getJSONObject(i);
                            str_emp_empsalesempname = dic_jobc.getString("empsalesempname");
                            str_emp_empsalesqty = dic_jobc.getString("empsalesqty");
                            str_emp_empsalestip = dic_jobc.getString("empsalestip");
                            str_emp_empsalescomm = dic_jobc.getString("empsalescomm");
                            str_emp_empsalessalesamt = dic_jobc.getString("empsalessalesamt");
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }

                        LinearLayout empslaeinfolistLn2 = new LinearLayout(MainActivity.mContext);
                        empslaeinfolistLn2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                        empslaeinfolistLn2.setOrientation(LinearLayout.HORIZONTAL);

                        // 세일아이템 타이틀 ---------------------------------------------------------------------------------------------------------------
                        TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
                        saleItemTvContents1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        saleItemTvContents1.setText(Payment_stringBackSpace_Exch(17, str_emp_empsalesempname));
                        saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
                        saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, 30, 2.2f));
                        empslaeinfolistLn2.addView(saleItemTvContents1);

                        TextView saleItemTvContents2 = new TextView(MainActivity.mContext);
                        saleItemTvContents2.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                        saleItemTvContents2.setText(str_emp_empsalestip);
                        saleItemTvContents2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(saleItemTvContents2);
                        saleItemTvContents2.setLayoutParams(new LinearLayout.LayoutParams(0, 30, 0.8f));
                        empslaeinfolistLn2.addView(saleItemTvContents2);

                        TextView saleItemTvContents3 = new TextView(MainActivity.mContext);
                        saleItemTvContents3.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        saleItemTvContents3.setText(str_emp_empsalessalesamt);
                        saleItemTvContents3.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(saleItemTvContents3);
                        saleItemTvContents3.setLayoutParams(new LinearLayout.LayoutParams(0, 30, 1.0f));
                        empslaeinfolistLn2.addView(saleItemTvContents3);
                        // --------------------------------------------------------------------------------------------------------------------------------

                        printingLn.addView(empslaeinfolistLn2);
                    }
                }
                // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------
                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                // FOOD ------------------------------------------------------------------------------------------------------------
                LinearLayout foodLn = new LinearLayout(MainActivity.mContext);
                foodLn.setLayoutParams(matchParentParams);
                foodLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView foodLeftTv = new TextView(MainActivity.mContext);
                foodLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                foodLeftTv.setText("FOOD");
                foodLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(foodLeftTv);
                foodLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                foodLn.addView(foodLeftTv);

                TextView foodRightTv = new TextView(MainActivity.mContext);
                foodRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                foodRightTv.setText(str_service);
                foodRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(foodRightTv);
                foodRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                foodLn.addView(foodRightTv);

                printingLn.addView(foodLn);
                // --------------------------------------------------------------------------------------------------------------------

                // PRODUCT ------------------------------------------------------------------------------------------------------------
                LinearLayout productLn = new LinearLayout(MainActivity.mContext);
                productLn.setLayoutParams(matchParentParams);
                productLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView productLeftTv = new TextView(MainActivity.mContext);
                productLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                productLeftTv.setText("PRODUCT");
                productLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(productLeftTv);
                productLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                productLn.addView(productLeftTv);

                TextView productRightTv = new TextView(MainActivity.mContext);
                productRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                productRightTv.setText(str_product);
                productRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(productRightTv);
                productRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                productLn.addView(productRightTv);

                printingLn.addView(productLn);
                // --------------------------------------------------------------------------------------------------------------------

                // GIFT CARD ------------------------------------------------------------------------------------------------------------
                LinearLayout giftcardLn = new LinearLayout(MainActivity.mContext);
                giftcardLn.setLayoutParams(matchParentParams);
                giftcardLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView giftcardLeftTv = new TextView(MainActivity.mContext);
                giftcardLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                giftcardLeftTv.setText("GIFT CARD");
                giftcardLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(giftcardLeftTv);
                giftcardLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                giftcardLn.addView(giftcardLeftTv);

                TextView giftcardRightTv = new TextView(MainActivity.mContext);
                giftcardRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                giftcardRightTv.setText(str_giftcard);
                giftcardRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(giftcardRightTv);
                giftcardRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                giftcardLn.addView(giftcardRightTv);

                printingLn.addView(giftcardLn);
                // --------------------------------------------------------------------------------------------------------------------

                // DISCOUNT ------------------------------------------------------------------------------------------------------------
                LinearLayout discountLn = new LinearLayout(MainActivity.mContext);
                discountLn.setLayoutParams(matchParentParams);
                discountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView discountLeftTv = new TextView(MainActivity.mContext);
                discountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                discountLeftTv.setText("DISCOUNT");
                discountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(discountLeftTv);
                discountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                discountLn.addView(discountLeftTv);

                TextView discountRightTv = new TextView(MainActivity.mContext);
                discountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                discountRightTv.setText(str_discount);
                discountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(discountRightTv);
                discountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                discountLn.addView(discountRightTv);

                printingLn.addView(discountLn);
                // --------------------------------------------------------------------------------------------------------------------

                // TO GO FEE ------------------------------------------------------------------------------------------------------------
                LinearLayout pickupfeeLn = new LinearLayout(MainActivity.mContext);
                pickupfeeLn.setLayoutParams(matchParentParams);
                pickupfeeLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView pickupfeeLeftTv = new TextView(MainActivity.mContext);
                pickupfeeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                pickupfeeLeftTv.setText("TO GO FEE");
                pickupfeeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(pickupfeeLeftTv);
                pickupfeeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                pickupfeeLn.addView(pickupfeeLeftTv);

                TextView pickupfeeRightTv = new TextView(MainActivity.mContext);
                pickupfeeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                pickupfeeRightTv.setText(str_pickupfee);
                pickupfeeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(pickupfeeRightTv);
                pickupfeeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                pickupfeeLn.addView(pickupfeeRightTv);

                printingLn.addView(pickupfeeLn);
                // --------------------------------------------------------------------------------------------------------------------

                // DELIVERY FEE ------------------------------------------------------------------------------------------------------------
                LinearLayout deliveryfeeLn = new LinearLayout(MainActivity.mContext);
                deliveryfeeLn.setLayoutParams(matchParentParams);
                deliveryfeeLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView deliveryfeeLeftTv = new TextView(MainActivity.mContext);
                deliveryfeeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                deliveryfeeLeftTv.setText("DELIVERY FEE");
                deliveryfeeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(deliveryfeeLeftTv);
                deliveryfeeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                deliveryfeeLn.addView(deliveryfeeLeftTv);

                TextView deliveryfeeRightTv = new TextView(MainActivity.mContext);
                deliveryfeeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                deliveryfeeRightTv.setText(str_deliveryfee);
                deliveryfeeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(deliveryfeeRightTv);
                deliveryfeeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                deliveryfeeLn.addView(deliveryfeeRightTv);

                printingLn.addView(deliveryfeeLn);
                // --------------------------------------------------------------------------------------------------------------------

                // VOID ------------------------------------------------------------------------------------------------------------
                LinearLayout voidLn = new LinearLayout(MainActivity.mContext);
                voidLn.setLayoutParams(matchParentParams);
                voidLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView voidLeftTv = new TextView(MainActivity.mContext);
                voidLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                voidLeftTv.setText("VOID");
                voidLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(voidLeftTv);
                voidLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                voidLn.addView(voidLeftTv);

                TextView voidRightTv = new TextView(MainActivity.mContext);
                voidRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                voidRightTv.setText(str_void);
                voidRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(voidRightTv);
                voidRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                voidLn.addView(voidRightTv);

                printingLn.addView(voidLn);
                // --------------------------------------------------------------------------------------------------------------------

                // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------
                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                // NET SALES ------------------------------------------------------------------------------------------------------------
                LinearLayout netsalesLn = new LinearLayout(MainActivity.mContext);
                netsalesLn.setLayoutParams(matchParentParams);
                netsalesLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView netsalesLeftTv = new TextView(MainActivity.mContext);
                netsalesLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                netsalesLeftTv.setText("NET SALES");
                netsalesLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(netsalesLeftTv);
                netsalesLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                netsalesLn.addView(netsalesLeftTv);

                TextView netsalesRightTv = new TextView(MainActivity.mContext);
                netsalesRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                netsalesRightTv.setText(str_netsales);
                netsalesRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(netsalesRightTv);
                netsalesRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                netsalesLn.addView(netsalesRightTv);

                printingLn.addView(netsalesLn);
                // --------------------------------------------------------------------------------------------------------------------

                // REFUND ------------------------------------------------------------------------------------------------------------
                LinearLayout refundLn = new LinearLayout(MainActivity.mContext);
                refundLn.setLayoutParams(matchParentParams);
                refundLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView refundLeftTv = new TextView(MainActivity.mContext);
                refundLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                refundLeftTv.setText("REFUND");
                refundLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(refundLeftTv);
                refundLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                refundLn.addView(refundLeftTv);

                TextView refundRightTv = new TextView(MainActivity.mContext);
                refundRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                refundRightTv.setText(str_refund);
                refundRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(refundRightTv);
                refundRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                refundLn.addView(refundRightTv);

                printingLn.addView(refundLn);
                // --------------------------------------------------------------------------------------------------------------------

                // TAX ------------------------------------------------------------------------------------------------------------
                LinearLayout taxLn = new LinearLayout(MainActivity.mContext);
                taxLn.setLayoutParams(matchParentParams);
                taxLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView taxLeftTv = new TextView(MainActivity.mContext);
                taxLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                taxLeftTv.setText("TAX");
                taxLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(taxLeftTv);
                taxLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                taxLn.addView(taxLeftTv);

                TextView taxRightTv = new TextView(MainActivity.mContext);
                taxRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                taxRightTv.setText(str_tax);
                taxRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(taxRightTv);
                taxRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                taxLn.addView(taxRightTv);

                printingLn.addView(taxLn);
                // --------------------------------------------------------------------------------------------------------------------

                // GROSS SALES ------------------------------------------------------------------------------------------------------------
                LinearLayout grosssalesLn = new LinearLayout(MainActivity.mContext);
                grosssalesLn.setLayoutParams(matchParentParams);
                grosssalesLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView grosssalesLeftTv = new TextView(MainActivity.mContext);
                grosssalesLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                grosssalesLeftTv.setText("GROSS SALES");
                grosssalesLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(grosssalesLeftTv);
                grosssalesLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                grosssalesLn.addView(grosssalesLeftTv);

                TextView grosssalesRightTv = new TextView(MainActivity.mContext);
                grosssalesRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                grosssalesRightTv.setText(str_grosssales);
                grosssalesRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(grosssalesRightTv);
                grosssalesRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                grosssalesLn.addView(grosssalesRightTv);

                printingLn.addView(grosssalesLn);
                // --------------------------------------------------------------------------------------------------------------------

                // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------
                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                // CASH ------------------------------------------------------------------------------------------------------------
                LinearLayout cashLn = new LinearLayout(MainActivity.mContext);
                cashLn.setLayoutParams(matchParentParams);
                cashLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView cashLeftTv = new TextView(MainActivity.mContext);
                cashLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                cashLeftTv.setText("CASH");
                cashLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(cashLeftTv);
                cashLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                cashLn.addView(cashLeftTv);

                TextView cashRightTv = new TextView(MainActivity.mContext);
                cashRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                cashRightTv.setText(str_cash);
                cashRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(cashRightTv);
                cashRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                cashLn.addView(cashRightTv);

                printingLn.addView(cashLn);
                // --------------------------------------------------------------------------------------------------------------------

                // CREDIT CARD ------------------------------------------------------------------------------------------------------------
                LinearLayout creditcardLn = new LinearLayout(MainActivity.mContext);
                creditcardLn.setLayoutParams(matchParentParams);
                creditcardLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView creditcardLeftTv = new TextView(MainActivity.mContext);
                creditcardLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                creditcardLeftTv.setText("CREDIT CARD");
                creditcardLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(creditcardLeftTv);
                creditcardLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                creditcardLn.addView(creditcardLeftTv);

                TextView creditcardRightTv = new TextView(MainActivity.mContext);
                creditcardRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                creditcardRightTv.setText(str_card);
                creditcardRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(creditcardRightTv);
                creditcardRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                creditcardLn.addView(creditcardRightTv);

                printingLn.addView(creditcardLn);
                // --------------------------------------------------------------------------------------------------------------------

                // CREDIT CARD TIP ------------------------------------------------------------------------------------------------------------
                LinearLayout creditcardtipLn = new LinearLayout(MainActivity.mContext);
                creditcardtipLn.setLayoutParams(matchParentParams);
                creditcardtipLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView creditcardtipLeftTv = new TextView(MainActivity.mContext);
                creditcardtipLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                creditcardtipLeftTv.setText("CREDIT CARD TIP");
                creditcardtipLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(creditcardtipLeftTv);
                creditcardtipLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                creditcardtipLn.addView(creditcardtipLeftTv);

                TextView creditcardtipRightTv = new TextView(MainActivity.mContext);
                creditcardtipRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                creditcardtipRightTv.setText(str_cardtip);
                creditcardtipRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(creditcardtipRightTv);
                creditcardtipRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                creditcardtipLn.addView(creditcardtipRightTv);

                printingLn.addView(creditcardtipLn);
                // --------------------------------------------------------------------------------------------------------------------

                // VISA ------------------------------------------------------------------------------------------------------------
                LinearLayout visaLn = new LinearLayout(MainActivity.mContext);
                visaLn.setLayoutParams(matchParentParams);
                visaLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView visaLeftTv = new TextView(MainActivity.mContext);
                visaLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                visaLeftTv.setText("VISA");
                visaLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(visaLeftTv);
                visaLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                visaLeftTv.setPadding(40, 0, 0, 0);
                visaLn.addView(visaLeftTv);

                TextView visaCenterTv = new TextView(MainActivity.mContext);
                visaCenterTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                visaCenterTv.setText(str_cnt_visa);
                visaCenterTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(visaCenterTv);
                visaCenterTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.5f));
                visaLn.addView(visaCenterTv);

                TextView visaRightTv = new TextView(MainActivity.mContext);
                visaRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                visaRightTv.setText(cardAmountString(str_cardvisa));
                visaRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(visaRightTv);
                visaRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                visaLn.addView(visaRightTv);

                printingLn.addView(visaLn);
                // --------------------------------------------------------------------------------------------------------------------

                // MASTER -------------------------------------------------------------------------------------------------------------
                LinearLayout masterLn = new LinearLayout(MainActivity.mContext);
                masterLn.setLayoutParams(matchParentParams);
                masterLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView masterLeftTv = new TextView(MainActivity.mContext);
                masterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                masterLeftTv.setText("MASTER");
                masterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(masterLeftTv);
                masterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                masterLeftTv.setPadding(40, 0, 0, 0);
                masterLn.addView(masterLeftTv);

                TextView masterCenterTv = new TextView(MainActivity.mContext);
                masterCenterTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                masterCenterTv.setText(str_cnt_master);
                masterCenterTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(masterCenterTv);
                masterCenterTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.5f));
                masterLn.addView(masterCenterTv);

                TextView masterRightTv = new TextView(MainActivity.mContext);
                masterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                masterRightTv.setText(cardAmountString(str_cardaster));
                masterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(masterRightTv);
                masterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                masterLn.addView(masterRightTv);

                printingLn.addView(masterLn);
                // --------------------------------------------------------------------------------------------------------------------

                // AMEX -------------------------------------------------------------------------------------------------------------
                LinearLayout amexLn = new LinearLayout(MainActivity.mContext);
                amexLn.setLayoutParams(matchParentParams);
                amexLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView amexLeftTv = new TextView(MainActivity.mContext);
                amexLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                amexLeftTv.setText("AMEX");
                amexLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(amexLeftTv);
                amexLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                amexLeftTv.setPadding(40, 0, 0, 0);
                amexLn.addView(amexLeftTv);

                TextView amexCenterTv = new TextView(MainActivity.mContext);
                amexCenterTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                amexCenterTv.setText(str_cnt_amex);
                amexCenterTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(amexCenterTv);
                amexCenterTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.5f));
                amexLn.addView(amexCenterTv);

                TextView amexRightTv = new TextView(MainActivity.mContext);
                amexRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                amexRightTv.setText(cardAmountString(str_cardamex));
                amexRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(amexRightTv);
                amexRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                amexLn.addView(amexRightTv);

                printingLn.addView(amexLn);
                // --------------------------------------------------------------------------------------------------------------------

                // DISCOVER -------------------------------------------------------------------------------------------------------------
                LinearLayout discoverLn = new LinearLayout(MainActivity.mContext);
                discoverLn.setLayoutParams(matchParentParams);
                discoverLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView discoverLeftTv = new TextView(MainActivity.mContext);
                discoverLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                discoverLeftTv.setText("DISCOVER");
                discoverLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(discoverLeftTv);
                discoverLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                discoverLeftTv.setPadding(40, 0, 0, 0);
                discoverLn.addView(discoverLeftTv);

                TextView discoverCenterTv = new TextView(MainActivity.mContext);
                discoverCenterTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                discoverCenterTv.setText(str_cnt_discover);
                discoverCenterTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(discoverCenterTv);
                discoverCenterTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.5f));
                discoverLn.addView(discoverCenterTv);

                TextView discoverRightTv = new TextView(MainActivity.mContext);
                discoverRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                discoverRightTv.setText(cardAmountString(str_carddiscover));
                discoverRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(discoverRightTv);
                discoverRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                discoverLn.addView(discoverRightTv);

                printingLn.addView(discoverLn);
                // --------------------------------------------------------------------------------------------------------------------

                // OFF CARD -------------------------------------------------------------------------------------------------------------
                LinearLayout offcardLn = new LinearLayout(MainActivity.mContext);
                offcardLn.setLayoutParams(matchParentParams);
                offcardLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView offcardLeftTv = new TextView(MainActivity.mContext);
                offcardLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                offcardLeftTv.setText("OFFLINE CARD");
                offcardLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(offcardLeftTv);
                offcardLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                offcardLeftTv.setPadding(40, 0, 0, 0);
                offcardLn.addView(offcardLeftTv);

                TextView offcardCenterTv = new TextView(MainActivity.mContext);
                offcardCenterTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                offcardCenterTv.setText(str_cnt_offcard);
                offcardCenterTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(offcardCenterTv);
                offcardCenterTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.5f));
                offcardLn.addView(offcardCenterTv);

                TextView offcardRightTv = new TextView(MainActivity.mContext);
                offcardRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                offcardRightTv.setText(cardAmountString(str_cardoffcard));
                offcardRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(offcardRightTv);
                offcardRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                offcardLn.addView(offcardRightTv);

                printingLn.addView(offcardLn);
                // --------------------------------------------------------------------------------------------------------------------

                // GIFT CARD REDEEMED -------------------------------------------------------------------------------------------------------------
                LinearLayout giftcardredeemedLn = new LinearLayout(MainActivity.mContext);
                giftcardredeemedLn.setLayoutParams(matchParentParams);
                giftcardredeemedLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView giftcardredeemedLeftTv = new TextView(MainActivity.mContext);
                giftcardredeemedLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                giftcardredeemedLeftTv.setText("GIFT CARD REDEEMED");
                giftcardredeemedLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(giftcardredeemedLeftTv);
                giftcardredeemedLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                giftcardredeemedLn.addView(giftcardredeemedLeftTv);

                TextView giftcardredeemedRightTv = new TextView(MainActivity.mContext);
                giftcardredeemedRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                giftcardredeemedRightTv.setText(str_giftcard2);
                giftcardredeemedRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(giftcardredeemedRightTv);
                giftcardredeemedRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                giftcardredeemedLn.addView(giftcardredeemedRightTv);

                printingLn.addView(giftcardredeemedLn);
                // --------------------------------------------------------------------------------------------------------------------

                // POINT -------------------------------------------------------------------------------------------------------------
                LinearLayout pointLn = new LinearLayout(MainActivity.mContext);
                pointLn.setLayoutParams(matchParentParams);
                pointLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView pointLeftTv = new TextView(MainActivity.mContext);
                pointLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                pointLeftTv.setText("POINT");
                pointLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(pointLeftTv);
                pointLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                pointLn.addView(pointLeftTv);

                TextView pointRightTv = new TextView(MainActivity.mContext);
                pointRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                pointRightTv.setText(str_point);
                pointRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(pointRightTv);
                pointRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                pointLn.addView(pointRightTv);

                printingLn.addView(pointLn);
                // --------------------------------------------------------------------------------------------------------------------

                // OTHER -------------------------------------------------------------------------------------------------------------
                LinearLayout otherLn = new LinearLayout(MainActivity.mContext);
                otherLn.setLayoutParams(matchParentParams);
                otherLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView otherLeftTv = new TextView(MainActivity.mContext);
                otherLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                otherLeftTv.setText("OTHER");
                otherLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(otherLeftTv);
                otherLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                otherLn.addView(otherLeftTv);

                TextView otherRightTv = new TextView(MainActivity.mContext);
                otherRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                otherRightTv.setText(str_other);
                otherRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(otherRightTv);
                otherRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                otherLn.addView(otherRightTv);

                printingLn.addView(otherLn);
                // --------------------------------------------------------------------------------------------------------------------

                // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------
                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                // Printed Date -------------------------------------------------------------------------------------------------------------
                LinearLayout printeddateLn = new LinearLayout(MainActivity.mContext);
                printeddateLn.setLayoutParams(matchParentParams);
                printeddateLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView printeddateLeftTv = new TextView(MainActivity.mContext);
                printeddateLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                printeddateLeftTv.setText("Printed");
                printeddateLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(printeddateLeftTv);
                printeddateLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                printeddateLn.addView(printeddateLeftTv);

                TextView printeddateRightTv = new TextView(MainActivity.mContext);
                printeddateRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                printeddateRightTv.setText(nowTime + "  " + nowDate);
                printeddateRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(printeddateRightTv);
                printeddateRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                printeddateLn.addView(printeddateRightTv);

                printingLn.addView(printeddateLn);
                // --------------------------------------------------------------------------------------------------------------------
            }
        };
        thread.start();

        try {
            thread.join();
        } catch(InterruptedException e) {}

        return printingLn;
    }

    public static LinearLayout makingLinearLayoutForStartingCash(final JSONObject data) {
        if (data == null) {
            return  null;
        }

        GlobalMemberValues.logWrite("cloverprintinglog", "받은 데이터 : " + data.toString() + "\n");

        final LinearLayout.LayoutParams matchParentParams
                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32);
        matchParentParams.setMargins(0, 0, 0, 0);

        final LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
        printingLn.setLayoutParams(new LinearLayout.LayoutParams(GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, LinearLayout.LayoutParams.MATCH_PARENT));
        printingLn.setOrientation(LinearLayout.VERTICAL);
        printingLn.setBackgroundColor(Color.parseColor("#ffffff"));

        Thread thread = new Thread() {
            @Override
            public void run() {
                String textlist = "";

                String str_cashinoutdate = "";

                String str_totalsaleamount = "";
                String str_commissionamount = "";
                String str_deliverypickupfeeamount = "";
                String str_tipamount = "";

                String str_foodsaleamount = "";
                String str_productsaleamount = "";
                String str_giftcardsaleamount = "";
                String str_discountamount = "";
                String str_voidamount = "";
                String str_netsalesamount = "";
                String str_refundamount = "";
                String str_taxamount = "";
                String str_grosssalesamount = "";

                String str_cashintotal = "";
                String str_salescashtotal = "";
                String str_allcashtotal = "";
                String str_salechecktotal = "";
                String str_salecardtotal = "";
                String str_cardvisa = "";
                String str_cardaster = ""; // "0||0.00"
                String str_cardamex = "";
                String str_carddiscover = "";
                String str_cardoffcard = "";
                String str_salegiftcardtotal = "";
                String str_salepointtotal = "";

                String str_cnt_visa = "";
                String str_cnt_master = "";
                String str_cnt_amex = "";
                String str_cnt_discover = "";
                String str_cnt_offcard = "";


                String str_emp_loginouttype = "";
                String str_emp_loginoutdate = "";

                String str_emp_cashinreason = "";
                String str_emp_cashinmoney = "";

                String str_cashinoutemployeenameyn = "";
                String str_cashinoutemployeename = "";

                String str_cashouttotal = "";
                String str_overshorttxt = "";
                String str_overshortamt = "";
                String str_salecardtiptotal = "";
                String str_endcashtotal = "";

                String str_pickupfeeamount = "";
                String str_deliveryfeeamount = "";

                String str_starting_ending = "";

                str_totalsaleamount = GlobalMemberValues.getDataInJsonData(data, "totalsaleamount");
                str_commissionamount = GlobalMemberValues.getDataInJsonData(data, "commissionamount");
                str_deliverypickupfeeamount = GlobalMemberValues.getDataInJsonData(data, "deliverypickupfeeamount");
                str_tipamount = GlobalMemberValues.getDataInJsonData(data, "tipamount");

                str_foodsaleamount = GlobalMemberValues.getDataInJsonData(data, "foodsaleamount");
                str_productsaleamount = GlobalMemberValues.getDataInJsonData(data, "productsaleamount");
                str_giftcardsaleamount = GlobalMemberValues.getDataInJsonData(data, "giftcardsaleamount");
                str_discountamount = GlobalMemberValues.getDataInJsonData(data, "discountamount");
                str_voidamount = GlobalMemberValues.getDataInJsonData(data, "voidamount");

                str_netsalesamount = GlobalMemberValues.getDataInJsonData(data, "netsalesamount");
                str_refundamount = GlobalMemberValues.getDataInJsonData(data, "refundamount");
                str_taxamount = GlobalMemberValues.getDataInJsonData(data, "taxamount");
                str_grosssalesamount = GlobalMemberValues.getDataInJsonData(data, "grosssalesamount");

                str_cashintotal = GlobalMemberValues.getDataInJsonData(data, "cashintotal");
                str_salescashtotal = GlobalMemberValues.getDataInJsonData(data, "salescashtotal");
                str_allcashtotal = GlobalMemberValues.getDataInJsonData(data, "allcashtotal");

                str_salechecktotal = GlobalMemberValues.getDataInJsonData(data, "salechecktotal");

                str_salecardtotal = GlobalMemberValues.getDataInJsonData(data, "salecardtotal");
                str_cardvisa = GlobalMemberValues.getDataInJsonData(data, "cardvisa");
                str_cnt_visa = cardReadCount(GlobalMemberValues.getDataInJsonData(data, "cardvisa"));
                str_cardaster = GlobalMemberValues.getDataInJsonData(data, "cardmaster");
                str_cnt_master = cardReadCount(GlobalMemberValues.getDataInJsonData(data, "cardmaster"));
                str_cardamex = GlobalMemberValues.getDataInJsonData(data, "cardamex");
                str_cnt_amex = cardReadCount(GlobalMemberValues.getDataInJsonData(data, "cardamex"));
                str_carddiscover = GlobalMemberValues.getDataInJsonData(data, "carddiscover");
                str_cnt_discover = cardReadCount(GlobalMemberValues.getDataInJsonData(data, "carddiscover"));
                str_cardoffcard = GlobalMemberValues.getDataInJsonData(data, "cardoffcard");
                str_cnt_offcard = cardReadCount(GlobalMemberValues.getDataInJsonData(data, "cardoffcard"));

                str_salegiftcardtotal = GlobalMemberValues.getDataInJsonData(data, "salegiftcardtotal");
                str_salepointtotal = GlobalMemberValues.getDataInJsonData(data, "salepointtotal");

                str_cashouttotal = GlobalMemberValues.getDataInJsonData(data, "cashouttotal");
                str_overshorttxt = GlobalMemberValues.getDataInJsonData(data, "overshorttxt");
                str_overshortamt = GlobalMemberValues.getDataInJsonData(data, "overshortamt");
                str_salecardtiptotal = GlobalMemberValues.getDataInJsonData(data, "salecardtiptotal");
                str_endcashtotal = GlobalMemberValues.getDataInJsonData(data, "endcashtotal");

                str_pickupfeeamount = GlobalMemberValues.getDataInJsonData(data, "pickupfeeamount");
                str_deliveryfeeamount = GlobalMemberValues.getDataInJsonData(data, "deliveryfeeamount");

                str_starting_ending = GlobalMemberValues.getDataInJsonData(data,"startingcashprint_kind");

                // 타이틀 -----------------------------------------------------------------------------------------------------
                TextView batchtitleTv = new TextView(MainActivity.mContext);
                batchtitleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                batchtitleTv.setGravity(Gravity.CENTER);
                if (str_starting_ending.equals("Starting cash")){
                    batchtitleTv.setText("[STARTING CASH REPORT]");
                } else {
                    batchtitleTv.setText("[ENDING CASH REPORT]");
                }

                batchtitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                GlobalMemberValues.setTextStyleOnClover(batchtitleTv);
                printingLn.addView(batchtitleTv);
                // --------------------------------------------------------------------------------------------------------------------


                // Admin 이 직원별로 Cash In/Out 기록을 출력할 때 ------------------------------------
                str_cashinoutemployeenameyn = GlobalMemberValues.getDataInJsonData(data, "cashinoutemployeenameyn");

                if (str_cashinoutemployeenameyn == "Y" || str_cashinoutemployeenameyn.equals("Y")) {
                    str_cashinoutemployeename = GlobalMemberValues.getDataInJsonData(data, "employeename");

                    // Employee Name ----------------------------------------------------------------------------------------------------
                    LinearLayout employeenameLn = new LinearLayout(MainActivity.mContext);
                    employeenameLn.setLayoutParams(matchParentParams);
                    employeenameLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView employeenameLeftTv = new TextView(MainActivity.mContext);
                    employeenameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    employeenameLeftTv.setText("Employee Name");
                    employeenameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(employeenameLeftTv);
                    employeenameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    employeenameLn.addView(employeenameLeftTv);

                    TextView employeenameRightTv = new TextView(MainActivity.mContext);
                    employeenameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    employeenameRightTv.setText(str_cashinoutemployeename);
                    employeenameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(employeenameRightTv);
                    employeenameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    employeenameLn.addView(employeenameRightTv);

                    printingLn.addView(employeenameLn);
                    // --------------------------------------------------------------------------------------------------------------------
                } else {
                    // Employee Name ----------------------------------------------------------------------------------------------------
                    LinearLayout employeenameLn = new LinearLayout(MainActivity.mContext);
                    employeenameLn.setLayoutParams(matchParentParams);
                    employeenameLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView employeenameLeftTv = new TextView(MainActivity.mContext);
                    employeenameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    employeenameLeftTv.setText("Employee Name");
                    employeenameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(employeenameLeftTv);
                    employeenameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    employeenameLn.addView(employeenameLeftTv);

                    TextView employeenameRightTv = new TextView(MainActivity.mContext);
                    employeenameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    employeenameRightTv.setText(GlobalMemberValues.GLOBAL_EMPLOYEEINFO.empName);
                    employeenameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(employeenameRightTv);
                    employeenameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    employeenameLn.addView(employeenameRightTv);

                    printingLn.addView(employeenameLn);
                    // --------------------------------------------------------------------------------------------------------------------
                }
                // -------------------------------------------------------------------------

                String nowDate = getDate();
                String nowTime = getTime();

                // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 10));
                // ---------------------------------------------------------------------------------------------------------------------------------

                // cashinout 타이틀 --------------------------------------------------------------------------------------------------
                TextView cashinouttitleTv = new TextView(MainActivity.mContext);
                cashinouttitleTv.setLayoutParams(matchParentParams);
                cashinouttitleTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                cashinouttitleTv.setText("[Cash in / out data]");
                cashinouttitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(cashinouttitleTv);
                printingLn.addView(cashinouttitleTv);
                // --------------------------------------------------------------------------------------------------------------------

                // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------
                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                JSONArray arr_empCashinList = new JSONArray();
                try {
                    arr_empCashinList = data.getJSONArray("employeecashinlog");
                } catch (JSONException e) {
                    e.printStackTrace();
                }

                if (arr_empCashinList.length() != 0) {
                    // employeelist not null!
                    int cnt = arr_empCashinList.length();
                    for (int i = 0; i < cnt; i++) {

                        try {
                            JSONObject dic_jobc = arr_empCashinList.getJSONObject(i);
                            str_emp_cashinmoney = dic_jobc.getString("cashinmoney");
                            str_emp_cashinreason = dic_jobc.getString("cashinreason");
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }

                        LinearLayout cashinoutlistLn2 = new LinearLayout(MainActivity.mContext);
                        cashinoutlistLn2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                        cashinoutlistLn2.setOrientation(LinearLayout.HORIZONTAL);

                        // 로그인/아웃 ---------------------------------------------------------------------------------------------------------------
                        TextView loginoutcontentsTv = new TextView(MainActivity.mContext);
                        loginoutcontentsTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        loginoutcontentsTv.setText(str_emp_cashinreason);
                        loginoutcontentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(loginoutcontentsTv);
                        loginoutcontentsTv.setLayoutParams(new LinearLayout.LayoutParams(0, 30, 1.0f));
                        cashinoutlistLn2.addView(loginoutcontentsTv);

                        TextView loginoutdatecontentsTv = new TextView(MainActivity.mContext);
                        loginoutdatecontentsTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        loginoutdatecontentsTv.setText(str_emp_cashinmoney);
                        loginoutdatecontentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(loginoutdatecontentsTv);
                        loginoutdatecontentsTv.setLayoutParams(new LinearLayout.LayoutParams(0, 30, 2.0f));
                        cashinoutlistLn2.addView(loginoutdatecontentsTv);
                        // --------------------------------------------------------------------------------------------------------------------------------

                        printingLn.addView(cashinoutlistLn2);

                    }
                }

                JSONObject object_empCashinList_money_type = new JSONObject();
                try {
                    object_empCashinList_money_type = data.getJSONObject("employeecashinlog_money_type");
                } catch (JSONException e) {
                    e.printStackTrace();
                }

                if (object_empCashinList_money_type.length() != 0) {
                    // employeelist not null!
                    JSONArray array_cash_types = new JSONArray();
                    try {
                        array_cash_types = object_empCashinList_money_type.getJSONArray("cash_types");
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

                    if (array_cash_types != null){
                        String[] strings = {"100.00", "50.00","20.00","10.00","5.00","2.00","1.00","0.50","0.25","0.10","0.05","0.01", "0.01 X 50","0.05 X 40","0.25 X 40","0.10 X 50"};
                        for (int zs = 0; zs < strings.length; zs++) {
                            LinearLayout cashinoutlistLn3 = new LinearLayout(MainActivity.mContext);
                            cashinoutlistLn3.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                            cashinoutlistLn3.setOrientation(LinearLayout.HORIZONTAL);

                            TextView starting_cash_type_Tv = new TextView(MainActivity.mContext);
                            starting_cash_type_Tv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            starting_cash_type_Tv.setText("$" + strings[zs]);
                            starting_cash_type_Tv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(starting_cash_type_Tv);
                            starting_cash_type_Tv.setLayoutParams(new LinearLayout.LayoutParams(0, 30, 2.0f));
                            cashinoutlistLn3.addView(starting_cash_type_Tv);

                            String count = "";
                            try {
                                count = array_cash_types.getString(zs);
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }

                            if (count == "") count = "0";

                            TextView starting_cash_type_count_TV = new TextView(MainActivity.mContext);
                            starting_cash_type_count_TV.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            starting_cash_type_count_TV.setText(count);
                            starting_cash_type_count_TV.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(starting_cash_type_count_TV);
                            starting_cash_type_count_TV.setLayoutParams(new LinearLayout.LayoutParams(0, 30, 1.0f));
                            cashinoutlistLn3.addView(starting_cash_type_count_TV);


                            TextView starting_cash_type_count_TV2 = new TextView(MainActivity.mContext);
                            starting_cash_type_count_TV2.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            double price = 0.00;
                            if (strings[zs].contains("X")){
                                String temp = strings[zs];
                                String temp_price = temp.substring(0,4);
                                String temp_count = temp.substring(7,9);
                                price = Double.parseDouble(temp_price);
                                int i_count = Integer.parseInt(temp_count);
                                price = price * i_count;
                            } else {
                                price = Double.parseDouble(strings[zs]);
                            }
                            String s_price = GlobalMemberValues.getStringFormatNumber(price * Integer.parseInt(count), "2");
                            starting_cash_type_count_TV2.setText("$"+s_price);
                            starting_cash_type_count_TV2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(starting_cash_type_count_TV2);
                            starting_cash_type_count_TV2.setLayoutParams(new LinearLayout.LayoutParams(0, 30, 2.0f));
                            cashinoutlistLn3.addView(starting_cash_type_count_TV2);

                            // --------------------------------------------------------------------------------------------------------------------------------

                            printingLn.addView(cashinoutlistLn3);
                        }
                    }
                }

                // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------
                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                // Printed ------------------------------------------------------------------------------------------------------------
                LinearLayout printedLn = new LinearLayout(MainActivity.mContext);
                printedLn.setLayoutParams(matchParentParams);
                printedLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView printedLeftTv = new TextView(MainActivity.mContext);
                printedLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                printedLeftTv.setText("Printed");
                printedLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(printedLeftTv);
                printedLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                printedLn.addView(printedLeftTv);

                TextView printedRightTv = new TextView(MainActivity.mContext);
                printedRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                printedRightTv.setText(nowTime + "  " + nowDate);
                printedRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(printedRightTv);
                printedRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                printedLn.addView(printedRightTv);

                printingLn.addView(printedLn);
                // --------------------------------------------------------------------------------------------------------------------
            }

        };
        thread.start();

        try {
            thread.join();
        } catch(InterruptedException e) {}

        return printingLn;
    }

    public static LinearLayout makingLinearLayoutForTest(final JSONObject data) {
        LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
        printingLn.setLayoutParams(new LinearLayout.LayoutParams(GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, LinearLayout.LayoutParams.MATCH_PARENT));
        printingLn.setOrientation(LinearLayout.VERTICAL);
        printingLn.setBackgroundColor(Color.parseColor("#ffffff"));

        TextView footerTv = new TextView(MainActivity.mContext);
        footerTv.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, 50));
        footerTv.setGravity(Gravity.CENTER);
        footerTv.setText("Successfully Test Printed...");
        footerTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 20);
        GlobalMemberValues.setTextStyleOnClover(footerTv);
        printingLn.addView(footerTv);

        return printingLn;
    }

    public static LinearLayout makingLinearLayoutForKitchen(final JSONObject data, final String paramPrintNum) {
        GlobalMemberValues.logWrite("cloverprintinglogJJJ", "받은 데이터 : " + data.toString() + "\n");

        final String[] str_receiptno = {""};
        final String[] str_ordertype = {""};

        final LinearLayout.LayoutParams matchParentParams
                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32);
        matchParentParams.setMargins(0, 0, 0, 0);

        final LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
        printingLn.setLayoutParams(new LinearLayout.LayoutParams(GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, LinearLayout.LayoutParams.MATCH_PARENT));
        printingLn.setOrientation(LinearLayout.VERTICAL);
        printingLn.setBackgroundColor(Color.parseColor("#ffffff"));


        GlobalMemberValues.logWrite("kitchenprinterdatalogprintnum", "여기 A" + data.toString() + "\n");

        Thread thread = new Thread(){
            @RequiresApi(api = Build.VERSION_CODES.M)
            @SuppressLint("LongLogTag")
            @Override
            public void run(){

                int alignment = Printer.ALIGNMENT_LEFT;
                int size = 0;
                int attribute = 0;

                String titleText1 = "";
                String titleText2 = "";
                String titleText3 = "";
                String main_Text = "";

                String memo_Text = "";

                String customerText = "";

                String str_saledate = "";
                String str_saletime = "";

                String str_saleitemlist = "";

                String str_customername = "";
                String str_customerphonenum = "";
                String str_customeraddress = "";

                String str_reprint_CustomerPhoneNum = "";

                String str_deliverytakeaway = "";
                String str_deliverydate = "";

                String str_customermemo = "";

                String str_reprintyn = "N";

                String str_receiptfooter = "";

                String str_customerOrderNumber = "";
                String str_customerPagerNumber = "";

                String str_phoneOrder = "";
                String str_phoneOrderNumber = "";
                String str_phoneorderholecode = "";

                // Restaurant 관련
                String str_restaurant_tablename = "";
                String str_restaurant_tablepeoplecnt = "";

                //보이드리턴관련
                String str_returnitems = "";

                String str_checkcompany = "";

                String str_isMaster = "";


                // 10112023
                String str_orderfrom = "";
                String str_salescodethirdparty = "";



                str_saledate = GlobalMemberValues.getDataInJsonData(data, "saledate");
                str_saletime = GlobalMemberValues.getDataInJsonData(data, "saletime");
                str_receiptno[0] = GlobalMemberValues.getDataInJsonData(data, "receiptno");

                str_saleitemlist = GlobalMemberValues.getDataInJsonData(data, "saleitemlist");

                str_customername = GlobalMemberValues.getDataInJsonData(data, "customername");
                str_customerphonenum = GlobalMemberValues.getDataInJsonData(data, "customerphonenum");
                str_customeraddress = GlobalMemberValues.getDataInJsonData(data, "customeraddress");

                str_deliverytakeaway = GlobalMemberValues.getDataInJsonData(data, "deliverytakeaway");
                str_deliverydate = GlobalMemberValues.getDataInJsonData(data, "deliverydate");

                str_ordertype[0] = GlobalMemberValues.getDataInJsonData(data, "ordertype");

                str_customermemo = GlobalMemberValues.getDataInJsonData(data, "customermemo");

                // Restaurant 관련
                str_restaurant_tablename = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablename");
                str_restaurant_tablepeoplecnt = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablepeoplecnt");

                // 보이드리턴관련
                str_returnitems = GlobalMemberValues.getDataInJsonData(data, "returnitems");
                String tempReturnItems = "";
                if (str_receiptno[0].substring(0, 1).equals("C") && !GlobalMemberValues.isStrEmpty(str_returnitems)) {
                    tempReturnItems = GlobalMemberValues.getReplaceText(str_returnitems, "-ANNIETTASU-", "-OA-");
                }
                GlobalMemberValues.logWrite("jjjkcprintlog", "tempReturnItems : " + tempReturnItems + "\n");


                // 10112023
                str_orderfrom = GlobalMemberValues.getDataInJsonData(data, "orderfrom");
                str_salescodethirdparty = GlobalMemberValues.getDataInJsonData(data, "salescodethirdparty");

                GlobalMemberValues.logWrite("printllljjjlog", "str_orderfrom : " + str_orderfrom + "\n");
                GlobalMemberValues.logWrite("printllljjjlog", "str_salescodethirdparty : " + str_salescodethirdparty + "\n");


                if (data.toString().contains("receiptfooter")) {
                    str_receiptfooter = GlobalMemberValues.getDataInJsonData(data, "receiptfooter");
                } else {
                    str_receiptfooter = "";
                }

                if (data.toString().contains("customerordernumber")) {
                    str_customerOrderNumber = GlobalMemberValues.getDataInJsonData(data, "customerordernumber");
                } else {
                    str_customerOrderNumber = "";
                }

                if (data.toString().contains("customerpagernumber")) {
                    str_customerPagerNumber = GlobalMemberValues.getDataInJsonData(data, "customerpagernumber");
                } else {
                    str_customerPagerNumber = "";
                }

                if (data.toString().contains("phoneorder")) {
                    str_phoneOrder = GlobalMemberValues.getDataInJsonData(data, "phoneorder");
                } else {
                    str_phoneOrder = "";
                }

                if (data.toString().contains("phoneordernumber")) {
                    str_phoneOrderNumber = GlobalMemberValues.getDataInJsonData(data, "phoneordernumber");
                } else {
                    str_phoneOrderNumber = "";
                }

                if (str_deliverydate.trim().equals(":00")) {
                    str_deliverydate = "";
                }

                if (data.toString().contains("customerphonenum")) {
                    str_reprint_CustomerPhoneNum = GlobalMemberValues.getDataInJsonData(data,"customerphonenum");
                }

                if (data.toString().contains("checkcompany")) {
                    str_checkcompany = GlobalMemberValues.getDataInJsonData(data,"checkcompany");
                }


                if (data.toString().contains("isMaster")) {
                    str_isMaster = GlobalMemberValues.getDataInJsonData(data,"isMaster");
                }

                GlobalMemberValues.logWrite("deliverytimelog", "str_deliverydate : " + str_deliverydate + "\n");

                // 먼저 kitchen printer1 에 해당되는 food 가 있는지 확인한다. ---------------------------------------------------------------
                int tempItemCount = 0;
                if (!GlobalMemberValues.isStrEmpty(str_saleitemlist)) {
                    String[] strOrderItemsList = str_saleitemlist.split(GlobalMemberValues.STRSPLITTER_ORDERITEM1);
                    for (int i = 0; i < strOrderItemsList.length; i++) {
                        String[] strOrderItems = strOrderItemsList[i].split(GlobalMemberValues.STRSPLITTER_ORDERITEM2);

                        // 상품명, 수량 정보 ------------------------------------------------------------------------
                        String tempItemNameOptionAdd = strOrderItems[0];
                        GlobalMemberValues.logWrite("jjjkcprintlog", "tempItemNameOptionAdd : " + tempItemNameOptionAdd + "\n");
                        String[] strItemNAmeOptionAdd = tempItemNameOptionAdd.split(GlobalMemberValues.STRSPLITTER_ORDERITEM3);

                        String tempItemIdx = "";
                        if (strItemNAmeOptionAdd.length > 4) {
                            tempItemIdx = strItemNAmeOptionAdd[4];
                        }
                        // -----------------------------------------------------------------------------------------

//                        if (GlobalMemberValues.isKitchenPrinting(paramPrintNum, tempItemIdx)) {
//                            tempItemCount++;
//                        }

                        if (GlobalMemberValues.isPossibleKitchenPrinting(data, paramPrintNum)) {
                            tempItemCount++;
                        }
                    }
                }
                // ----------------------------------------------------------------------------------------------------------------------
                // 프린팅 최상단
                // 간격 추가
                String str_topfeed_count = GlobalMemberValues.getValueOnReceiptSetting("topfeedrowcount_yn","3");
                if (StringUtil.isNumeric(str_topfeed_count)){
                    String str_topfeed = " ";
                    for (int i_topfeed_ghost = 0 ; Integer.parseInt(str_topfeed_count) > i_topfeed_ghost; i_topfeed_ghost++){
                        str_topfeed = str_topfeed + "\n";
                    }
                    TextView topfeeds = new TextView(MainActivity.mContext);
                    topfeeds.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                    topfeeds.setGravity(Gravity.CENTER);
                    topfeeds.setText(str_topfeed);
                    topfeeds.setTextSize(TypedValue.COMPLEX_UNIT_PX, 20);
                    GlobalMemberValues.setTextStyleOnClover(topfeeds);
                    printingLn.addView(topfeeds);
                }

                GlobalMemberValues.logWrite("kitchenprinterdatalogprintnum", "여기 B" + data.toString() + "\n");

                if (str_isMaster.equals("Y")){
                    TextView pagerNoTv = new TextView(MainActivity.mContext);
                    pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                    pagerNoTv.setGravity(Gravity.CENTER);
                    pagerNoTv.setText("MASTER");
                    pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 50);
                    GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                    printingLn.addView(pagerNoTv);
                }


                if (GlobalMemberValues.mCancelKitchenPrinting == "Y") {
                    TextView pagerNoTv = new TextView(MainActivity.mContext);
                    pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                    pagerNoTv.setGravity(Gravity.CENTER);
                    pagerNoTv.setText("CANCELED");
                    pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 50);
                    GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                    printingLn.addView(pagerNoTv);
                }

                if (str_receiptno[0].substring(0,1).equals("V")) {
                    TextView orderVoidReturnTV = new TextView(MainActivity.mContext);
                    orderVoidReturnTV.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                    orderVoidReturnTV.setGravity(Gravity.CENTER);
                    orderVoidReturnTV.setText("VOID ORDER");
                    orderVoidReturnTV.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 50);
                    GlobalMemberValues.setTextStyleOnClover(orderVoidReturnTV);
                    printingLn.addView(orderVoidReturnTV);
                } else if (str_receiptno[0].substring(0,1).equals("C")){
                    TextView orderVoidReturnTV = new TextView(MainActivity.mContext);
                    orderVoidReturnTV.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                    orderVoidReturnTV.setGravity(Gravity.CENTER);
                    orderVoidReturnTV.setText("RETURN ORDER");
                    orderVoidReturnTV.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 50);
                    GlobalMemberValues.setTextStyleOnClover(orderVoidReturnTV);
                    printingLn.addView(orderVoidReturnTV);
                }

                if (!str_deliverydate.equals("") && str_deliverydate.length() > 0){

                    // 10112023
                    String timetitlestr = "*** Pickup Time ***";
                    if (!GlobalMemberValues.isStrEmpty(str_orderfrom)) {
                        timetitlestr = "[READY BY]";
                    }

                    TextView tv_deliveryDate_title = new TextView(MainActivity.mContext);
                    tv_deliveryDate_title.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    tv_deliveryDate_title.setGravity(Gravity.CENTER);

                    // 10112023
                    tv_deliveryDate_title.setText(timetitlestr);

                    tv_deliveryDate_title.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    tv_deliveryDate_title.setPaintFlags(tv_deliveryDate_title.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    GlobalMemberValues.setTextStyleOnClover(tv_deliveryDate_title);
                    printingLn.addView(tv_deliveryDate_title);

//                    SimpleDateFormat old = new SimpleDateFormat("yyyy-dd-MM HH:mm:ss");
//                    SimpleDateFormat newTimeformat = new SimpleDateFormat("MM/dd/yyyy hh:mm:ss a");
//
//                    Date old_date = null;
//                    try {
//                        old_date = old.parse(str_deliverydate);
//                    } catch (ParseException e) {
//                        e.printStackTrace();
//                    }
////                    //10/15/2021 10:58:00 AM
////                    if (old_date == null){
////                        old = new SimpleDateFormat("MM/dd/yyyy hh:mm:ss a");
////                        //10/15/2021 10:58:00 AM
////                        //MM/dd/yyyy hh:mm:ss a;
////                        try {
////                            old_date = old.parse(str_deliverydate);
////                        } catch (ParseException e) {
////                            e.printStackTrace();
////                        }
////                    }
//
//                    if (old_date != null || !str_deliverydate.isEmpty()){
//                        String new_salonSalesWebSaleDate = "";
//                        if (old_date != null){
//                            new_salonSalesWebSaleDate = newTimeformat.format(old_date);
//                            str_deliverydate = new_salonSalesWebSaleDate;
//                        }
//
//
//                        TextView tv_deliveryDate = new TextView(MainActivity.mContext);
//                        tv_deliveryDate.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
//                        tv_deliveryDate.setGravity(Gravity.CENTER);
//                        tv_deliveryDate.setText(str_deliverydate);
//                        tv_deliveryDate.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
//                        tv_deliveryDate.setPaintFlags(tv_deliveryDate.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
//                        GlobalMemberValues.setTextStyleOnClover(tv_deliveryDate);
//                        printingLn.addView(tv_deliveryDate);
//                    }

                    TextView tv_deliveryDate = new TextView(MainActivity.mContext);
                    tv_deliveryDate.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    tv_deliveryDate.setGravity(Gravity.CENTER);
                    tv_deliveryDate.setText(str_deliverydate);
                    tv_deliveryDate.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    tv_deliveryDate.setPaintFlags(tv_deliveryDate.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    GlobalMemberValues.setTextStyleOnClover(tv_deliveryDate);
                    printingLn.addView(tv_deliveryDate);
                }


                // Restaurant 관련
                GlobalMemberValues globalMemberValues = new GlobalMemberValues();
                if (!GlobalMemberValues.isStrEmpty(str_restaurant_tablename)) {
                    if (GlobalMemberValues.getValueOnReceiptSetting("tablenumber_yn","3").equals("Y")){
                        TextView pagerNoTv = new TextView(MainActivity.mContext);
                        pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                        pagerNoTv.setGravity(Gravity.CENTER);
                        pagerNoTv.setText(str_restaurant_tablename);
                        pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 50);
                        GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                        printingLn.addView(pagerNoTv);
                    }

                }

                if (tempItemCount > 0) {
                    String orderTypeStr = "";
                    if (str_ordertype[0].equals("POS")) {
                        orderTypeStr = "POS ORDER";
                    } else {
                        orderTypeStr = "WEB ORDER";
                    }

                    String deliveryTakeawayStr = "";
                    if (str_deliverytakeaway.equals("D")) {
                        deliveryTakeawayStr = "DELIVERY";
                        if (!GlobalMemberValues.isStrEmpty(str_deliverydate)) {
                            deliveryTakeawayStr += " (" + str_deliverydate + ")";
                        }
                    } else {
                        if (str_deliverytakeaway.equals("T")) {
                            deliveryTakeawayStr = "TO GO";
                        } else {
                            deliveryTakeawayStr = "HERE";
                        }
                    }

                    if (!GlobalMemberValues.isStrEmpty(str_phoneOrder) && str_phoneOrder.equals("Y")) {
                        str_customerOrderNumber = str_phoneOrderNumber;
                    }

                    if (!GlobalMemberValues.isStrEmpty(str_customerPagerNumber)) {
                        String tempTitleTxt = "";
                        float tempAddTextSize = 0;
                        if (GlobalMemberValues.getKitchenPrinterTextSize().equals("R")) {
                            //tempTitleTxt = "Pager ";
                            //tempTitleTxt = "";
                            tempAddTextSize = 20;
                        } else {
                            tempAddTextSize = 20;
                        }

                        if (!GlobalMemberValues.isStrEmpty(str_customerPagerNumber)) {
                            if (GlobalMemberValues.getValueOnReceiptSetting("pagernumber_yn","3").equals("Y")){
                                if (GlobalMemberValues.getValueOnReceiptSetting2("pagernumberalignment","3").equals("T")){
                                    TextView pagerNoTv = new TextView(MainActivity.mContext);
                                    pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                                    pagerNoTv.setGravity(Gravity.CENTER);
                                    pagerNoTv.setText(tempTitleTxt + GlobalMemberValues.getPagerNumberHeaderTxt() + str_customerPagerNumber);
                                    pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 40 + tempAddTextSize);
                                    GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                                    printingLn.addView(pagerNoTv);

                                    // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                    printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                                    // ---------------------------------------------------------------------------------------------------------------------------------
                                }
                            }
                        }
                    }

                    TextView kitchentitleTv = new TextView(MainActivity.mContext);
                    kitchentitleTv.setLayoutParams(matchParentParams);
                    kitchentitleTv.setGravity(Gravity.CENTER);
                    kitchentitleTv.setText("*** Kitchen ***");
                    kitchentitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(kitchentitleTv);
                    printingLn.addView(kitchentitleTv);

                    if (GlobalMemberValues.getValueOnReceiptSetting("ordertype_yn","3").equals("Y")){
                        if (GlobalMemberValues.getValueOnReceiptSetting2("ordertypealignment","3").equals("T")){
                            TextView posordertitleTv = new TextView(MainActivity.mContext);
                            posordertitleTv.setLayoutParams(matchParentParams);
                            posordertitleTv.setGravity(Gravity.CENTER);
                            posordertitleTv.setText("[ " + orderTypeStr + " ]");
                            posordertitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(posordertitleTv);
                            printingLn.addView(posordertitleTv);
                        }
                    }

                    // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 40));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    GlobalMemberValues.logWrite("kitchenprinterdatalogprintnum", "여기 C" + data.toString() + "\n");

                    String tempTitleTxt1 = "";
                    int tempAddTextSize = 0;
                    int tempTextAlign = Gravity.LEFT;
                    int tempAddHeight = 0;
                    if (GlobalMemberValues.getKitchenPrinterTextSize().equals("R")) {
                        tempAddTextSize = 0;
                        //tempTitleTxt1 = " : ";
                    } else {
                        tempAddTextSize = 0;
                        tempTextAlign = Gravity.CENTER_HORIZONTAL;
                        tempAddHeight = 10;
                    }

                    if (GlobalMemberValues.isKitchenOrderNumberSectionViewOn()) {
                        // Receiving ------------------------------------------------------------------------------------------------------------
                        LinearLayout receivingLn = new LinearLayout(MainActivity.mContext);
                        receivingLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80 + tempAddHeight));
                        receivingLn.setOrientation(LinearLayout.HORIZONTAL);

                        /**
                         if (GlobalMemberValues.getKitchenPrinterTextSize().equals("R")) {
                         TextView receivingLeftTv = new TextView(MainActivity.mContext);
                         receivingLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                         receivingLeftTv.setText("Receiving");
                         receivingLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10 + tempAddTextSize);
                         GlobalMemberValues.setTextStyleOnClover(receivingLeftTv);
                         receivingLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                         receivingLn.addView(receivingLeftTv);
                         }
                         **/

                        TextView receivingRightTv = new TextView(MainActivity.mContext);
                        receivingRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                        receivingRightTv.setText( tempTitleTxt1 + deliveryTakeawayStr);
                        //receivingRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10 + tempAddTextSize);
                        receivingRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 50);
                        GlobalMemberValues.setTextStyleOnClover(receivingRightTv);
                        receivingRightTv.setPaintFlags(receivingRightTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);

                        receivingRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        receivingLn.addView(receivingRightTv);

                        printingLn.addView(receivingLn);
                        // --------------------------------------------------------------------------------------------------------------------


                        // 10112023
                        if (!GlobalMemberValues.isStrEmpty(str_orderfrom)) {
                            // third party 관련 ------------------------------------------------------------------------------------------------------------
                            LinearLayout thirdpartyLn = new LinearLayout(MainActivity.mContext);
                            thirdpartyLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                            thirdpartyLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView thirdpartyTv = new TextView(MainActivity.mContext);
                            thirdpartyTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                            thirdpartyTv.setText(str_orderfrom.toUpperCase());
                            //thirdpartyTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10 + tempAddTextSize);
                            thirdpartyTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 50);
                            GlobalMemberValues.setTextStyleOnClover(thirdpartyTv);
                            thirdpartyTv.setPaintFlags(thirdpartyTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);

                            thirdpartyTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            thirdpartyLn.addView(thirdpartyTv);

                            printingLn.addView(thirdpartyLn);
                            // ------------------------------------------------------------------------------------------------------------
                        }


                        // Order No. ------------------------------------------------------------------------------------------------------------
                        LinearLayout ordernumLn = new LinearLayout(MainActivity.mContext);
                        ordernumLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50 + tempAddHeight));
                        ordernumLn.setOrientation(LinearLayout.HORIZONTAL);

                        /**
                         if (GlobalMemberValues.getKitchenPrinterTextSize().equals("R")) {
                         TextView ordernumLeftTv = new TextView(MainActivity.mContext);
                         ordernumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                         ordernumLeftTv.setText("Order No.");
                         ordernumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 20 + tempAddTextSize);
                         GlobalMemberValues.setTextStyleOnClover(ordernumLeftTv);
                         ordernumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                         ordernumLn.addView(ordernumLeftTv);
                         }
                         **/


                        // 10112023
                        String customerOrderNumberStr = "";
                        if (!GlobalMemberValues.isStrEmpty(str_salescodethirdparty)) {
                            customerOrderNumberStr = str_salescodethirdparty;
                        } else {
                            customerOrderNumberStr = tempTitleTxt1 + "# " + str_customerOrderNumber;
                        }


                        if (GlobalMemberValues.getValueOnReceiptSetting("ordernumber_yn","3").equals("Y")){

                            TextView ordernumRightTv = new TextView(MainActivity.mContext);
                            ordernumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                            ordernumRightTv.setText(tempTitleTxt1 + "# " + str_customerOrderNumber);
                            ordernumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 20 + tempAddTextSize);
                            GlobalMemberValues.setTextStyleOnClover(ordernumRightTv);
                            ordernumRightTv.setPaintFlags(receivingRightTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);

                            ordernumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            ordernumLn.addView(ordernumRightTv);

                            printingLn.addView(ordernumLn);
                        }

                        // --------------------------------------------------------------------------------------------------------------------

                        // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 40));
                        // ---------------------------------------------------------------------------------------------------------------------------------
                    }


                    if (!str_checkcompany.isEmpty()){
                        TextView titleTv = new TextView(MainActivity.mContext);
                        titleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                        titleTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
                        titleTv.setText("["+str_checkcompany+"]");
                        titleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                        GlobalMemberValues.setTextStyleOnClover(titleTv);
                        printingLn.addView(titleTv);
                    }



                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    GlobalMemberValues.logWrite("kitchenprinterdatalogprintnum", "여기 D" + data.toString() + "\n");

                    /**
                     TextView itemlisttitleTv = new TextView(MainActivity.mContext);
                     itemlisttitleTv.setLayoutParams(matchParentParams);
                     itemlisttitleTv.setGravity(Gravity.CENTER);
                     itemlisttitleTv.setText("Item List");
                     itemlisttitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                     GlobalMemberValues.setTextStyleOnClover(itemlisttitleTv);
                     printingLn.addView(itemlisttitleTv);

                     // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                     printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                     // ---------------------------------------------------------------------------------------------------------------------------------
                     **/

                    GlobalMemberValues.logWrite("kitchenprinterdatalogprintnum", "여기서 데이터는...: " + data.toString() + "\n");

                    if (!GlobalMemberValues.isStrEmpty(str_saleitemlist)) {
                        String[] strOrderItemsList = str_saleitemlist.split(GlobalMemberValues.STRSPLITTER_ORDERITEM1);
                        for (int i = 0; i < strOrderItemsList.length; i++) {
                            String[] strOrderItems = strOrderItemsList[i].split(GlobalMemberValues.STRSPLITTER_ORDERITEM2);

                            // 상품명, 수량 정보 --------------------------------------------------------------
                            String tempItemNameOptionAdd = strOrderItems[0];
                            String tempItemQty = strOrderItems[1];

                            GlobalMemberValues.logWrite("saleitemstrarray", "tempItemNameOptionAdd : " + tempItemNameOptionAdd + "\n");

                            String[] strItemNAmeOptionAdd = tempItemNameOptionAdd.split(GlobalMemberValues.STRSPLITTER_ORDERITEM3);
                            String tempItemName = strItemNAmeOptionAdd[0];
                            String tempOptionTxt = "";
                            String tempAdditionalTxt1 = "";
                            String tempAdditionalTxt2 = "";
                            String tempItemIdx = "";
                            String tempKitchenPrintingNumber = "";
                            String tempKitchenMemo = "";
                            String tempKitchenMemo2 = "";
                            String tempSoldOutMemo = "";
                            String temp_additemYN = "";

                            if (strItemNAmeOptionAdd.length > 1) {
                                tempOptionTxt = strItemNAmeOptionAdd[1];
                                if (strItemNAmeOptionAdd.length > 2) {
                                    tempAdditionalTxt1 = strItemNAmeOptionAdd[2];
                                }
                                if (strItemNAmeOptionAdd.length > 3) {
                                    tempAdditionalTxt2 = strItemNAmeOptionAdd[3];
                                }
                                if (strItemNAmeOptionAdd.length > 4) {
                                    tempItemIdx = strItemNAmeOptionAdd[4];
                                }
                                if (strItemNAmeOptionAdd.length > 5) {
                                    tempKitchenPrintingNumber = strItemNAmeOptionAdd[5];
                                }
                                if (strItemNAmeOptionAdd.length > 6) {
                                    tempKitchenMemo = strItemNAmeOptionAdd[6];
                                }
                                if (strItemNAmeOptionAdd.length > 7) {
                                    tempKitchenMemo2 = strItemNAmeOptionAdd[7];
                                }
                                if (strItemNAmeOptionAdd.length > 8) {
                                    tempSoldOutMemo = strItemNAmeOptionAdd[8];
                                }

                                if (strItemNAmeOptionAdd.length > 17){
                                    temp_additemYN = strItemNAmeOptionAdd[17];
                                }
                            }
                            // ---------------------------------------------------------------------

                            GlobalMemberValues.logWrite("kitchenprinterdatalogprintnum", "data : " + data.toString() + "\n");
                            GlobalMemberValues.logWrite("kitchenprinterdatalogprintnum", "tempItemIdx : " + tempItemIdx + "\n");

                            if (tempKitchenPrintingNumber.indexOf(paramPrintNum) > -1) {
                                GlobalMemberValues.logWrite("kitchenprinterdatalogprintnum", "여기들어옴..."+ "\n");
                                if (!GlobalMemberValues.getValueOnReceiptSetting("quantitysumarize_yn","3").equals("Y")){
                                    tempItemQty = "";
                                }

                                String tempQtyItemName = tempItemQty + "   ";

                                int tempHeight = GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10 + tempAddTextSize;
                                for (int z = 27; z <= GlobalMemberValues.getSizeToString(tempQtyItemName + tempItemName) ; z += 27){
                                    tempHeight += 67;
                                }

                                if (temp_additemYN.equals("Y") && !tempItemName.equals(GlobalMemberValues.mCommonGratuityName)){
                                    TextView isAdditemTV = new TextView(MainActivity.mContext);
                                    isAdditemTV.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 37));
                                    isAdditemTV.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
                                    isAdditemTV.setMaxLines(1);
                                    isAdditemTV.setHeight(37);
//                                itemnameTv.setText(tempQtyItemName + designTextForItemForKitchen(tempItemName, 29, tempQtyItemName.length()));
                                    isAdditemTV.setText(">>> ADD ITEM <<<");
                                    isAdditemTV.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10 + tempAddTextSize);
                                    GlobalMemberValues.setTextStyleOnClover(isAdditemTV);
                                    printingLn.addView(isAdditemTV);
                                }

                                TextView itemnameTv = new TextView(MainActivity.mContext);
                                itemnameTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight));
                                itemnameTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
                                itemnameTv.setMaxLines(2);
                                itemnameTv.setHeight(tempHeight);
//                                itemnameTv.setText(tempQtyItemName + designTextForItemForKitchen(tempItemName, 29, tempQtyItemName.length()));
                                itemnameTv.setText(tempQtyItemName + tempItemName);
                                itemnameTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10 + tempAddTextSize);
                                GlobalMemberValues.setTextStyleOnClover(itemnameTv);
                                printingLn.addView(itemnameTv);

                                // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 10));
                                // ---------------------------------------------------------------------------------------------------------------------------------

                                if (!GlobalMemberValues.isStrEmpty(tempOptionTxt)) {

                                    if (tempOptionTxt.contains("-J-")){
                                        tempOptionTxt = tempOptionTxt.replace("-J-","\n");
                                    }

                                    /**
                                     TextView titleTv = new TextView(MainActivity.mContext);
                                     titleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                     titleTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
                                     titleTv.setText("--- Option ---");
                                     titleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                                     GlobalMemberValues.setTextStyleOnClover(titleTv);
                                     printingLn.addView(titleTv);
                                     **/

//                                    TextView contentsTv = new TextView(MainActivity.mContext);
//                                    contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
//                                    contentsTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
//                                    contentsTv.setText(GlobalMemberValues.setStringCutLineInKitchenReceipt(tempOptionTxt));
//                                    //contentsTv.setText(GlobalMemberValues.getModifierTxtForKitchen2(tempOptionTxt, 6));
//                                    contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
//                                    GlobalMemberValues.setTextStyleOnClover(contentsTv);
//                                    printingLn.addView(contentsTv);
                                    GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempOptionTxt, "NOTPRICE", false, false);
                                }
                                if (!GlobalMemberValues.isStrEmpty(tempAdditionalTxt1)) {
                                    if (tempAdditionalTxt1.contains("-J-")){
                                        tempAdditionalTxt1 = tempAdditionalTxt1.replace("-J-","\n");
                                    }

                                    TextView titleTv = new TextView(MainActivity.mContext);
                                    titleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                    titleTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
                                    titleTv.setText("--- Add Ingredients ---");
                                    titleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                                    GlobalMemberValues.setTextStyleOnClover(titleTv);
                                    printingLn.addView(titleTv);

                                    TextView contentsTv = new TextView(MainActivity.mContext);
                                    contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                    contentsTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
                                    contentsTv.setText(GlobalMemberValues.getModifierTxtForKitchen2(tempAdditionalTxt1, 6));
                                    contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                                    GlobalMemberValues.setTextStyleOnClover(contentsTv);
                                    printingLn.addView(contentsTv);
                                }
                                if (!GlobalMemberValues.isStrEmpty(tempAdditionalTxt2)) {
                                    if (tempAdditionalTxt2.contains("-J-")){
                                        tempAdditionalTxt2 = tempAdditionalTxt2.replace("-J-","\n");
                                    }
                                    TextView titleTv = new TextView(MainActivity.mContext);
                                    titleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                    titleTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
                                    titleTv.setText("--- General Modifier ---");
                                    titleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                                    GlobalMemberValues.setTextStyleOnClover(titleTv);
                                    printingLn.addView(titleTv);

                                    TextView contentsTv = new TextView(MainActivity.mContext);
                                    contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                    contentsTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
                                    contentsTv.setText(GlobalMemberValues.getModifierTxtForKitchen2(tempAdditionalTxt2, 6));
                                    contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                                    GlobalMemberValues.setTextStyleOnClover(contentsTv);
                                    printingLn.addView(contentsTv);
                                }
                                if (!GlobalMemberValues.isStrEmpty(tempKitchenMemo) && !tempKitchenMemo.equals("nokitchenmemo")) {
                                    if (GlobalMemberValues.getValueOnReceiptSetting("itemmemo_yn","3").equals("Y")){
                                        TextView titleTv = new TextView(MainActivity.mContext);
                                        titleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                        titleTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
                                        titleTv.setText("--- Special Request ---");
                                        titleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                                        GlobalMemberValues.setTextStyleOnClover(titleTv);
                                        printingLn.addView(titleTv);

                                        for (int z = 25; z <= GlobalMemberValues.getSizeToString(tempKitchenMemo) ; z += 24){
                                            tempHeight += 38;
                                        }

                                        if (tempHeight/35 < GlobalMemberValues.countChar(tempKitchenMemo, '\n')){
                                            tempHeight = 50 * (GlobalMemberValues.countChar(tempKitchenMemo, '\n') + 1);
                                        } else {
                                            tempHeight = tempHeight + 50;
                                        }

                                        TextView contentsTv = new TextView(MainActivity.mContext);
                                        contentsTv.setText(tempKitchenMemo);
                                        contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                                        contentsTv.setBreakStrategy(Layout.BREAK_STRATEGY_SIMPLE);
                                        GlobalMemberValues.setTextStyleOnClover(contentsTv);
                                        contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight));
                                        printingLn.addView(contentsTv);

//                                    TextView contentsTv = new TextView(MainActivity.mContext);
//                                    contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
//                                    contentsTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
//                                    contentsTv.setText(GlobalMemberValues.getModifierTxtForKitchen(tempKitchenMemo));
//                                    contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
//                                    GlobalMemberValues.setTextStyleOnClover(contentsTv);
//                                    printingLn.addView(contentsTv);
                                    }
                                }

                                // jihun park 082620
                                if (str_phoneOrderNumber.isEmpty()){

                                }
                                if (str_phoneOrder.equals("Y")){

                                } else {
                                    if (!GlobalMemberValues.isStrEmpty(tempKitchenMemo2) && !tempKitchenMemo2.equals("0.00")) {
                                        TextView titleTv = new TextView(MainActivity.mContext);
                                        titleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                        titleTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
                                        titleTv.setText("   [Kitchen Memo]");
                                        titleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                                        GlobalMemberValues.setTextStyleOnClover(titleTv);
                                        printingLn.addView(titleTv);


                                        for (int z = 25; z <= GlobalMemberValues.getSizeToString(tempKitchenMemo2) ; z += 24){
                                            tempHeight += 38;
                                        }

                                        if (tempHeight/35 < GlobalMemberValues.countChar(tempKitchenMemo2, '\n')){
                                            tempHeight = 50 * GlobalMemberValues.countChar(tempKitchenMemo2, '\n');
                                        }

                                        TextView contentsTv = new TextView(MainActivity.mContext);
                                        contentsTv.setText(tempKitchenMemo2);
                                        contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                                        contentsTv.setBreakStrategy(Layout.BREAK_STRATEGY_SIMPLE);
                                        GlobalMemberValues.setTextStyleOnClover(contentsTv);
                                        contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight));
                                        printingLn.addView(contentsTv);

//                                        TextView contentsTv = new TextView(MainActivity.mContext);
//                                        contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
//                                        contentsTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
//                                        contentsTv.setText(GlobalMemberValues.getModifierTxtForKitchen(tempKitchenMemo2));
//                                        contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
//                                        GlobalMemberValues.setTextStyleOnClover(contentsTv);
//                                        printingLn.addView(contentsTv);
                                    }
                                    if (!GlobalMemberValues.isStrEmpty(tempSoldOutMemo) && !tempSoldOutMemo.equals("0.00")) {
                                        TextView titleTv = new TextView(MainActivity.mContext);
                                        titleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                        titleTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
                                        titleTv.setText("   [If sold out]");
                                        titleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                                        GlobalMemberValues.setTextStyleOnClover(titleTv);
                                        printingLn.addView(titleTv);

                                        for (int z = 25; z <= GlobalMemberValues.getSizeToString(tempSoldOutMemo) ; z += 24){
                                            tempHeight += 28;
                                        }

                                        TextView contentsTv = new TextView(MainActivity.mContext);
                                        contentsTv.setText(tempSoldOutMemo);
                                        contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                                        GlobalMemberValues.setTextStyleOnClover(contentsTv);
                                        contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight));
                                        printingLn.addView(contentsTv);

//                                        TextView contentsTv = new TextView(MainActivity.mContext);
//                                        contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
//                                        contentsTv.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
//                                        contentsTv.setText(GlobalMemberValues.getModifierTxtForKitchen(tempSoldOutMemo));
//                                        contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
//                                        GlobalMemberValues.setTextStyleOnClover(contentsTv);
//                                        printingLn.addView(contentsTv);
                                    }
                                }


                                /**
                                 TextView titleTv = new TextView(MainActivity.mContext);
                                 titleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                 titleTv.setGravity(Gravity.RIGHT|Gravity.CENTER_VERTICAL);
                                 titleTv.setText("Qty : " + tempItemQty);
                                 titleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 5 + tempAddTextSize);
                                 GlobalMemberValues.setTextStyleOnClover(titleTv);
                                 printingLn.addView(titleTv);
                                 **/

                                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                                // ---------------------------------------------------------------------------------------------------------------------------------
                            }
                        }
                    }

                    // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 10));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    if (!GlobalMemberValues.isStrEmpty(str_customermemo)) {
                        if (GlobalMemberValues.getValueOnReceiptSetting("ordermemo_yn","3").equals("Y")){
                            // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                            printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                            // ---------------------------------------------------------------------------------------------------------------------------------

                            TextView noteTv = new TextView(MainActivity.mContext);
                            noteTv.setLayoutParams(matchParentParams);
                            noteTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                            noteTv.setText("[Note]");
                            noteTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(noteTv);
                            printingLn.addView(noteTv);

                            TextView memotextTv = new TextView(MainActivity.mContext);
                            memotextTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                            memotextTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                            memotextTv.setText(str_customermemo);
                            memotextTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(memotextTv);
                            printingLn.addView(memotextTv);
                        }


                    }

                    // receipt footer 프린터 ----------------------------------------------------------------------------------
                    String footer_kitchen = GlobalMemberValues.getReceiptFooterKitchen2();
                    if (!GlobalMemberValues.isStrEmpty(footer_kitchen)) {
                        TextView footerTv = new TextView(MainActivity.mContext);
                        footerTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                        footerTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                        footerTv.setText(footer_kitchen);
                        footerTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(footerTv);
                        printingLn.addView(footerTv);

                        // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                        // ---------------------------------------------------------------------------------------------------------------------------------

                    }
                    // --------------------------------------------------------------------------------------------------------

                    if (str_phoneOrder == "Y" || str_phoneOrder.equals("Y")) {
                    } else {
                        // Receipt No. ------------------------------------------------------------------------------------------------------------
                        LinearLayout phonenumLn = new LinearLayout(MainActivity.mContext);
                        phonenumLn.setLayoutParams(matchParentParams);
                        phonenumLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView phonenumLeftTv = new TextView(MainActivity.mContext);
                        phonenumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        phonenumLeftTv.setText("Receipt No.");
                        phonenumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(phonenumLeftTv);
                        phonenumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.7f));
                        phonenumLn.addView(phonenumLeftTv);

                        TextView phonenumRightTv = new TextView(MainActivity.mContext);
                        phonenumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        phonenumRightTv.setText(" : " + str_receiptno[0]);
                        phonenumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(phonenumRightTv);
                        phonenumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        phonenumLn.addView(phonenumRightTv);

                        printingLn.addView(phonenumLn);
                        // --------------------------------------------------------------------------------------------------------------------
                    }

                    if (GlobalMemberValues.mCustomerInfoShowYN) {
                        if (GlobalMemberValues.getValueOnReceiptSetting("guestinfo_yn","3").equals("Y")){
                            if (!GlobalMemberValues.isStrEmpty(GlobalMemberValues.getReplaceText(str_customername, " ", ""))) {
                                // Customer ------------------------------------------------------------------------------------------------------------
                                LinearLayout customerLn = new LinearLayout(MainActivity.mContext);
                                customerLn.setLayoutParams(matchParentParams);
                                customerLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView customerLeftTv = new TextView(MainActivity.mContext);
                                customerLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                customerLeftTv.setText("Customer");
                                customerLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(customerLeftTv);
                                customerLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.7f));
                                customerLn.addView(customerLeftTv);

                                TextView customerRightTv = new TextView(MainActivity.mContext);
                                customerRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                customerRightTv.setText(" : " + str_customername);
                                customerRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(customerRightTv);
                                customerRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                customerLn.addView(customerRightTv);

                                printingLn.addView(customerLn);
                                // --------------------------------------------------------------------------------------------------------------------
                            }

                            if (!GlobalMemberValues.isStrEmpty(str_customerphonenum)) {
                                if (str_customerphonenum.contains("@")){

                                } else {
                                    // Phone No. ------------------------------------------------------------------------------------------------------------
                                    LinearLayout phonenumLn = new LinearLayout(MainActivity.mContext);
                                    phonenumLn.setLayoutParams(matchParentParams);
                                    phonenumLn.setOrientation(LinearLayout.HORIZONTAL);

                                    TextView phonenumLeftTv = new TextView(MainActivity.mContext);
                                    phonenumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                    if (str_customerphonenum.contains("@")){
                                        phonenumLeftTv.setText("E-mail");
                                    } else {
                                        phonenumLeftTv.setText("Phone No.");
                                    }
                                    phonenumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(phonenumLeftTv);
                                    phonenumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.7f));
                                    phonenumLn.addView(phonenumLeftTv);

                                    TextView phonenumRightTv = new TextView(MainActivity.mContext);
                                    phonenumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                    phonenumRightTv.setText(" : " + str_customerphonenum);
//                            phonenumRightTv.setText(" : " + telNumberExch(str_customerphonenum));
                                    phonenumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(phonenumRightTv);
                                    phonenumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                    phonenumLn.addView(phonenumRightTv);

                                    printingLn.addView(phonenumLn);
                                }

                                // --------------------------------------------------------------------------------------------------------------------
                            } else if (!GlobalMemberValues.isStrEmpty(str_reprint_CustomerPhoneNum)){
                                if (str_customerphonenum.contains("@")){

                                } else {
                                    // Phone No. ------------------------------------------------------------------------------------------------------------
                                    LinearLayout phonenumLn = new LinearLayout(MainActivity.mContext);
                                    phonenumLn.setLayoutParams(matchParentParams);
                                    phonenumLn.setOrientation(LinearLayout.HORIZONTAL);

                                    TextView phonenumLeftTv = new TextView(MainActivity.mContext);
                                    phonenumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                    if (str_customerphonenum.contains("@")){
                                        phonenumLeftTv.setText("E-mail");
                                    } else {
                                        phonenumLeftTv.setText("Phone No.");
                                    }
                                    phonenumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(phonenumLeftTv);
                                    phonenumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.7f));
                                    phonenumLn.addView(phonenumLeftTv);

                                    TextView phonenumRightTv = new TextView(MainActivity.mContext);
                                    phonenumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                    phonenumRightTv.setText(" : " + str_customerphonenum);
//                            phonenumRightTv.setText(" : " + telNumberExch(str_customerphonenum));
                                    phonenumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(phonenumRightTv);
                                    phonenumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                    phonenumLn.addView(phonenumRightTv);

                                    printingLn.addView(phonenumLn);
                                }

                            }

                            if (!GlobalMemberValues.isStrEmpty(str_customeraddress)) {
                                // Address ------------------------------------------------------------------------------------------------------------
                                TextView addressTv = new TextView(MainActivity.mContext);
                                addressTv.setLayoutParams(matchParentParams);
                                addressTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                                addressTv.setText("<Address>");
                                addressTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(addressTv);
                                printingLn.addView(addressTv);
                                // --------------------------------------------------------------------------------------------------------------------
                                // Address Contents ------------------------------------------------------------------------------------------------------------
                                TextView addresscontentsTv = new TextView(MainActivity.mContext);
                                addresscontentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                addresscontentsTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                                addresscontentsTv.setText(str_customeraddress);
                                addresscontentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(addresscontentsTv);
                                printingLn.addView(addresscontentsTv);
                                // --------------------------------------------------------------------------------------------------------------------

                                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                                // ---------------------------------------------------------------------------------------------------------------------------------
                            }
                        }

                    }

                    if (!GlobalMemberValues.isStrEmpty(str_customerPagerNumber)) {
                        if (GlobalMemberValues.getValueOnReceiptSetting("pagernumber_yn","3").equals("Y")){
                            if (GlobalMemberValues.getValueOnReceiptSetting2("pagernumberalignment","3").equals("B")){
                                TextView pagerNoTv = new TextView(MainActivity.mContext);
                                pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                                pagerNoTv.setGravity(Gravity.CENTER);
                                pagerNoTv.setText(GlobalMemberValues.getPagerNumberHeaderTxt() + str_customerPagerNumber);
                                pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 40 + tempAddTextSize);
                                GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                                printingLn.addView(pagerNoTv);

                                // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                                // ---------------------------------------------------------------------------------------------------------------------------------
                            }
                        }
                    }

                    if (GlobalMemberValues.getValueOnReceiptSetting("ordertype_yn","3").equals("Y")){
                        if (GlobalMemberValues.getValueOnReceiptSetting2("ordertypealignment","3").equals("B")){
                            TextView posordertitleTv = new TextView(MainActivity.mContext);
                            posordertitleTv.setLayoutParams(matchParentParams);
                            posordertitleTv.setGravity(Gravity.CENTER);
                            posordertitleTv.setText("[ " + orderTypeStr + " ]");
                            posordertitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(posordertitleTv);
                            printingLn.addView(posordertitleTv);
                        }
                    }


                    // 10112023
                    if (!GlobalMemberValues.isStrEmpty(str_orderfrom)) {
                        // Receipt No. ------------------------------------------------------------------------------------------------------------
                        LinearLayout phonenumLn = new LinearLayout(MainActivity.mContext);
                        phonenumLn.setLayoutParams( new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32));
                        phonenumLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView phonenumLeftTv = new TextView(MainActivity.mContext);
                        phonenumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        phonenumLeftTv.setText(str_orderfrom.toUpperCase());
                        phonenumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(phonenumLeftTv);
                        phonenumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.7f));
                        phonenumLn.addView(phonenumLeftTv);

                        TextView phonenumRightTv = new TextView(MainActivity.mContext);
                        phonenumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        phonenumRightTv.setText(" : " + str_salescodethirdparty);
                        phonenumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(phonenumRightTv);
                        phonenumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                        phonenumLn.addView(phonenumRightTv);

                        printingLn.addView(phonenumLn);
                        // --------------------------------------------------------------------------------------------------------------------
                    }



                    // Printed Time ------------------------------------------------------------------------------------------------------------
                    LinearLayout printedtimeLn = new LinearLayout(MainActivity.mContext);
                    printedtimeLn.setLayoutParams(matchParentParams);
                    printedtimeLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView printedtimeLeftTv = new TextView(MainActivity.mContext);
                    printedtimeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    printedtimeLeftTv.setText("Printed Time");
                    printedtimeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(printedtimeLeftTv);
                    printedtimeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.7f));
                    printedtimeLn.addView(printedtimeLeftTv);

                    TextView printedtimeRightTv = new TextView(MainActivity.mContext);
                    printedtimeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    printedtimeRightTv.setText(" : " + getDate() + " " + getTime());
                    printedtimeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(printedtimeRightTv);
                    printedtimeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    printedtimeLn.addView(printedtimeRightTv);

                    printingLn.addView(printedtimeLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));

                    // 프린팅 최하단
                    // 간격 추가
                    String str_bottomfeed_count = GlobalMemberValues.getValueOnReceiptSetting("bottomfeedrowcount_yn","3");
                    if (StringUtil.isNumeric(str_bottomfeed_count)){
                        String str_bottomfeed = " ";
                        for (int i_topfeed_ghost = 0 ; Integer.parseInt(str_bottomfeed_count) > i_topfeed_ghost; i_topfeed_ghost++){
                            str_bottomfeed = str_bottomfeed + "\n";
                        }
                        TextView bottomfeeds = new TextView(MainActivity.mContext);
                        bottomfeeds.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                        bottomfeeds.setGravity(Gravity.CENTER);
                        bottomfeeds.setText(str_bottomfeed);
                        bottomfeeds.setTextSize(TypedValue.COMPLEX_UNIT_PX, 20);
                        GlobalMemberValues.setTextStyleOnClover(bottomfeeds);
                        printingLn.addView(bottomfeeds);
                    }

                    // ---------------------------------------------------------------------------------------------------------------------------------
                }
                GlobalMemberValues.setKitchenPrintedChangeStatus(str_receiptno[0], str_ordertype[0]);
                GlobalMemberValues.setPhoneorderKitchenPrinted(str_receiptno[0]);
            }
        };

        thread.start();
        try {
            thread.join();
        } catch(InterruptedException e) {}

        return printingLn;
    }


    @SuppressLint("LongLogTag")
    private static String telNumberExch(String instr)
    {
        String return_str = "";
        String temp_str = "";
        String temp_str2 = "";
        temp_str = instr.replace("-","");
        Log.e("temp_strtemp_strtemp_strtemp_str",temp_str);
        if (temp_str.length() == 11)
        {
            temp_str2 = temp_str.substring(0,1) + "-" + temp_str.substring(1,4) + "-" + temp_str.substring(4,7) + "-" + temp_str.substring(7,11);
        } else if (temp_str.length() == 10)
        {
            temp_str2 = temp_str.substring(0,3) + "-" + temp_str.substring(3,6) + "-" + temp_str.substring(6,10);
        } else
        {

        }
        return_str = temp_str2;
        return return_str;
    }

    public static String Payment_stringBackSpace_Exch(int stringLength, String instr)
    {
        String return_str = "";
        String temp_str = "";

        if (!GlobalMemberValues.isStrEmpty(instr)) {
            instr = GlobalMemberValues.getDecodeString(instr);

            int strLength = GlobalMemberValues.getSizeToString(instr);

            if (strLength > stringLength) {
                //temp_str = instr.substring(0,stringLength) + " ";
                temp_str = GlobalMemberValues.getJJJSubString(instr, 0, stringLength) + " ";
            } else {
                String spaceStr = "";
                int i_space = stringLength - strLength;
                StringBuilder temp_build = new StringBuilder(instr);
                for (int i = 0; i < i_space; i++){
                    spaceStr += " ";
                }
                temp_str = temp_build.toString() + spaceStr;
            }

            //return_str = strLength + "-" + temp_str;
            return_str = temp_str;
        }

        return return_str;
    }

    public static String getDate(){
        String nowDate = "";
        Date curDate;
        String     strCurTime;
        SimpleDateFormat sdf;
        sdf = new SimpleDateFormat("MM/dd/yyyy", Locale.US);
        curDate = new Date();
        strCurTime = sdf.format(curDate);
        System.out.println(strCurTime);
        nowDate = strCurTime;
        return nowDate;
    }
    public static String getTime(){
        String nowTime = "";
        Date     curDate;
        String     strCurTime;
        SimpleDateFormat  sdf;
        sdf = new SimpleDateFormat("HH:mm:ss", Locale.US);
        curDate = new Date();
        strCurTime = sdf.format(curDate);
        System.out.println(strCurTime);
        nowTime = strCurTime;
        return nowTime;
    }

    public static String combineStringForVoidPrint(String paramStr) {
        String returnValue = "";
        if (!GlobalMemberValues.isStrEmpty(paramStr)) {
            double tempParamStr = GlobalMemberValues.getDoubleAtString(paramStr);
            if (tempParamStr == 0) {
                returnValue = paramStr;
            } else {
                tempParamStr = tempParamStr * -1;
                returnValue = GlobalMemberValues.getStringFormatNumber(tempParamStr, "2");
            }
        }

        return returnValue;
    }

    public static String cardReadCount(String instr) {
        String return_str = "0";
        String[] arr = instr.split("\\|\\|");
        if (arr[0].toString().equals("")) {
        } else {
            return_str = arr[0].toString();
        }
        return return_str;
    }

    public static String cardAmountString(String instr) {
        String return_str = "0.00";
        String[] arr = instr.split("\\|\\|");
        if (arr.length == 0 ||arr.length == 1) {
            return_str = "0.00";
        } else {
            if (arr[1].toString().equals("")) {
                return_str = "0.00";
            } else {
                return_str = arr[1].toString();
            }
        }
        return return_str;
    }

    //
    public static String cutString(String str, int len) {

        byte[] by = str.getBytes();
        int count = 0;
        try  {
            for(int i = 0; i < len; i++) {
                if((by[i] & 0x80) == 0x80) count++; // 핵심 코드
            }
            if((by[len - 1] & 0x80) == 0x80 && (count % 2) == 1) len--; // 핵심코드

            return new String(by, 0, len);

        }
        catch(ArrayIndexOutOfBoundsException e)
        {
            System.out.println(e);
            return "";
        }

    }

    //
    public static String designTextForItem(String paramTxt, int paramMaxLen) {
        String return_str = "";
        String temp_str = "";

        if (!GlobalMemberValues.isStrEmpty(paramTxt)) {
            paramTxt = GlobalMemberValues.getDecodeString(paramTxt);

            paramTxt = GlobalMemberValues.getReplaceText(paramTxt, "\n", " ");

            int strLength = GlobalMemberValues.getSizeToString(paramTxt);

            if (strLength > paramMaxLen) {
                String test_temp  = cutString(paramTxt,paramMaxLen);

//                String paramTxt1 = paramTxt.substring(0, paramMaxLen);
                String paramTxt1 = test_temp;
                String paramTxt2 = paramTxt.substring(test_temp.length());
                temp_str = paramTxt1.trim() + "\n" + paramTxt2.trim();
            } else {
                StringBuilder temp_build = new StringBuilder(paramTxt);
                temp_str = temp_build.toString();
            }

            GlobalMemberValues.logWrite("changeItemNamelog", "temp_str : " + temp_str + "\n");

            return_str = temp_str;
        }

        return return_str;
    }

    private static String designTextForItemForKitchen(String paramTxt, int paramMaxLen, int paramSpace) {
        String return_str = "";
        String temp_str = "";

        if (!GlobalMemberValues.isStrEmpty(paramTxt)) {
            paramTxt = GlobalMemberValues.getDecodeString(paramTxt);

            paramTxt = GlobalMemberValues.getReplaceText(paramTxt, "\n", " ");

            int strLength = GlobalMemberValues.getSizeToString(paramTxt);

            paramMaxLen++;

            if (strLength > paramMaxLen) {
                String tempSpace = " ";
                if (paramSpace > 0) {
                    for (int atj = 0; atj < paramSpace; atj++) {
                        tempSpace += " ";
                    }
                }

                String paramTxt1 = paramTxt.substring(0, paramMaxLen);
                String paramTxt2 = paramTxt.substring(paramMaxLen);
                temp_str = paramTxt1.trim() + "\n" + tempSpace + paramTxt2.trim();
            } else {
                StringBuilder temp_build = new StringBuilder(paramTxt);
                temp_str = temp_build.toString();
            }

            GlobalMemberValues.logWrite("changeItemNamelog", "temp_str : " + temp_str + "\n");

            return_str = temp_str;
        }

        return return_str;
    }

    public static LinearLayout makingLinearLayoutForCashInOut(final JSONObject data, String paramMatchYN) {
        if (data == null) {
            return  null;
        }

        GlobalMemberValues.logWrite("cloverprintinglog", "받은 데이터 : " + data.toString() + "\n");

        int tempWidthLn = GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER;
        if (paramMatchYN == "Y" || paramMatchYN.equals("Y")) {
            tempWidthLn = LinearLayout.LayoutParams.MATCH_PARENT;
        }

        final LinearLayout.LayoutParams matchParentParams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32);
        matchParentParams.setMargins(0, 0, 0, 0);

        final LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
        printingLn.setLayoutParams(new LinearLayout.LayoutParams(tempWidthLn, LinearLayout.LayoutParams.MATCH_PARENT));
        printingLn.setOrientation(LinearLayout.VERTICAL);
        printingLn.setBackgroundColor(Color.parseColor("#ffffff"));

        Thread thread = new Thread() {
            @RequiresApi(api = Build.VERSION_CODES.KITKAT)
            @Override
            public void run() {

                String previous_endofday = "";

                String endofdayyn = "N";

                String str_emp_loginouttype = "";
                String str_emp_loginoutdate = "";

                String str_emp_cashinreason = "";
                String str_emp_cashinmoney = "";

                String str_storestate = "";
                String str_storename = "";
                String str_storecity = "";
                String str_storezip = "";
                String str_storephone = "";
                String str_storeaddress2 = "";
                String str_storeaddress1 = "";

                String salesoverview_alltickets = "";
                String salesoverview_employeename = "";
                String salesoverview_cashindate = "";
                String salesoverview_cashoutdate = "";

                // Sales Summary
                String salessummary_sales = "";
                String salessummary_extra = "";
                String salessummary_discount = "";
                String salessummary_refund = "";
                String salessummary_netsales = "";
                String salessummary_taxesandfees = "";
                String salessummary_subtotal = "";
                String salessummary_totaltips = "";

                // 01062023
                String salessummary_totaltips_cash = "";
                String salessummary_totaltips_card = "";

                String salessummary_pickupfee = "";
                String salessummary_deliveryfee = "";
                String salessummary_total = "";
                String salessummary_overshortcash = "";
                String salessummary_gratuity = "";

                // 10302023
                String salessummary_gratuity_cash = "";
                String salessummary_gratuity_card = "";
                String salessummary_gratuity_giftcard = "";
                String salessummary_gratuity_point = "";
                String salessummary_gratuity_other = "";

                String salessummary_total_formulti = "";

                // Sales by Tender Types
                String salesbytendertypes_cashtransactions = "";
                String salesbytendertypes_cashtotalamount = "";
                String salesbytendertypes_creditcardtransactions = "";
                String salesbytendertypes_creditcardtotalamount = "";
                String salesbytendertypes_giftcardtransactions = "";
                String salesbytendertypes_giftcardtotalamount = "";
                String salesbytendertypes_pointstransactions = "";
                String salesbytendertypes_pointstotalamount = "";
                String salesbytendertypes_otherstransactions = "";
                String salesbytendertypes_otherstotalamount = "";
                String salesbytendertypes_totaltransaction = "";
                String salesbytendertypes_totalamount = "";

                // Cash Summary Details
                String cashsummarydetails_cashtransactions = "";
                String cashsummarydetails_cashsales = "";
                String cashsummarydetails_cashrefund = "";
                String cashsummarydetails_others = "";
                String cashsummarydetails_cashtotal = "";

                // Credit Card Merchant Settlement Details
                String cardsettlementdetail_cardtransmaster = "";
                String cardsettlementdetail_cardsalesmaster = "";
                String cardsettlementdetail_cardrefundmaster = "";
                String cardsettlementdetail_cardtipmaster = "";
                String cardsettlementdetail_cardtotalmaster = "";

                String cardsettlementdetail_cardtransvisa = "";
                String cardsettlementdetail_cardsalesvisa = "";
                String cardsettlementdetail_cardrefundvisa = "";
                String cardsettlementdetail_cardtipvisa = "";
                String cardsettlementdetail_cardtotalvisa = "";

                String cardsettlementdetail_cardtransamex = "";
                String cardsettlementdetail_cardsalesamex = "";
                String cardsettlementdetail_cardrefundamex = "";
                String cardsettlementdetail_cardtipamex = "";
                String cardsettlementdetail_cardtotalamex = "";

                String cardsettlementdetail_cardtransdiscover = "";
                String cardsettlementdetail_cardsalesdiscover = "";
                String cardsettlementdetail_cardrefunddiscover = "";
                String cardsettlementdetail_cardtipdiscvoer = "";
                String cardsettlementdetail_cardtotaldiscover = "";

                String cardsettlementdetail_cardtransother = "";
                String cardsettlementdetail_cardsalesother = "";
                String cardsettlementdetail_cardrefundother = "";
                String cardsettlementdetail_cardtipother = "";
                String cardsettlementdetail_cardtotalother = "";

                String cardsettlementdetail_cardtranstotal = "";
                String cardsettlementdetail_cardsalestotal = "";
                String cardsettlementdetail_cardrefundtotal = "";
                String cardsettlementdetail_cardtotalothers = "";
                String cardsettlementdetail_cardtiptotal = "";
                String cardsettlementdetail_cardtotaltotal = "";

                String giftcardsummary_redeemed = "";
                String giftcardsummary_newcertsales = "";

                // online data
                String onlinedata_transactions = "";
                String onlinedata_salestotal = "";
                String onlinedata_refund = "";
                String onlinedata_tipamount = "";
                String onlinedata_totalamount = "";

                // kiosk data
                String kioskdata_transactions = "";
                String kioskdata_salestotal = "";
                String kioskdata_refund = "";
                String kioskdata_tipamount = "";
                String kioskdata_totalamount = "";


                // 10112023
                String thirdparty_data = "";


                previous_endofday = GlobalMemberValues.getDataInJsonData(data, "previous_endofday");

                endofdayyn = GlobalMemberValues.getDataInJsonData(data, "endofdayyn");

                str_storestate = GlobalMemberValues.getDataInJsonData(data, "storestate");
                str_storename  = GlobalMemberValues.getDataInJsonData(data, "storename");
                str_storecity = GlobalMemberValues.getDataInJsonData(data, "storecity");
                str_storezip = GlobalMemberValues.getDataInJsonData(data, "storezip");
                str_storephone = GlobalMemberValues.getDataInJsonData(data, "storephone");
                str_storeaddress2 = GlobalMemberValues.getDataInJsonData(data, "storeaddress2");
                str_storeaddress1 = GlobalMemberValues.getDataInJsonData(data, "storeaddress1");

                salesoverview_alltickets = GlobalMemberValues.getDataInJsonData(data, "salesoverview_alltickets");
                salesoverview_employeename = GlobalMemberValues.getDataInJsonData(data, "salesoverview_employeename");
                salesoverview_cashindate = GlobalMemberValues.getDataInJsonData(data, "salesoverview_cashindate");
                salesoverview_cashoutdate = GlobalMemberValues.getDataInJsonData(data, "salesoverview_cashoutdate");

                salessummary_sales = GlobalMemberValues.getDataInJsonData(data, "salessummary_sales");
                salessummary_extra = GlobalMemberValues.getDataInJsonData(data, "salessummary_extra");
                salessummary_discount = GlobalMemberValues.getDataInJsonData(data, "salessummary_discount");
                salessummary_refund = GlobalMemberValues.getDataInJsonData(data, "salessummary_refund");
                salessummary_netsales = GlobalMemberValues.getDataInJsonData(data, "salessummary_netsales");
                salessummary_taxesandfees = GlobalMemberValues.getDataInJsonData(data, "salessummary_taxesandfees");
                salessummary_subtotal = GlobalMemberValues.getDataInJsonData(data, "salessummary_subtotal");
                salessummary_totaltips = GlobalMemberValues.getDataInJsonData(data, "salessummary_totaltips");

                // 01062023
                salessummary_totaltips_cash = GlobalMemberValues.getDataInJsonData(data, "salessummary_totaltips_cash");
                salessummary_totaltips_card = GlobalMemberValues.getDataInJsonData(data, "salessummary_totaltips_card");

                salessummary_pickupfee = GlobalMemberValues.getDataInJsonData(data, "salessummary_pickupfee");
                salessummary_deliveryfee = GlobalMemberValues.getDataInJsonData(data, "salessummary_deliveryfee");
                salessummary_total = GlobalMemberValues.getDataInJsonData(data, "salessummary_total");
                salessummary_overshortcash = GlobalMemberValues.getDataInJsonData(data, "salessummary_overshortcash");

                if (data.has("salessummary_commongratuity")){
                    salessummary_gratuity = GlobalMemberValues.getDataInJsonData(data, "salessummary_commongratuity");
                }

                // 10302023 --------------------------------------------------------------------
                if (data.has("salessummary_commongratuity_cash")){
                    salessummary_gratuity_cash = GlobalMemberValues.getDataInJsonData(data, "salessummary_commongratuity_cash");
                }
                if (data.has("salessummary_commongratuity_card")){
                    salessummary_gratuity_card = GlobalMemberValues.getDataInJsonData(data, "salessummary_commongratuity_card");
                }
                if (data.has("salessummary_commongratuity_giftcard")){
                    salessummary_gratuity_giftcard = GlobalMemberValues.getDataInJsonData(data, "salessummary_commongratuity_giftcard");
                }
                if (data.has("salessummary_commongratuity_point")){
                    salessummary_gratuity_point = GlobalMemberValues.getDataInJsonData(data, "salessummary_commongratuity_point");
                }
                if (data.has("salessummary_commongratuity_other")){
                    salessummary_gratuity_other = GlobalMemberValues.getDataInJsonData(data, "salessummary_commongratuity_other");
                }
                // 10302023 --------------------------------------------------------------------


                if (data.has("salessummary_total_formulti")){
                    salessummary_total_formulti = GlobalMemberValues.getDataInJsonData(data, "salessummary_total_formulti");
                }

                salesbytendertypes_cashtransactions = GlobalMemberValues.getDataInJsonData(data, "salesbytendertypes_cashtransactions");
                salesbytendertypes_cashtotalamount = GlobalMemberValues.getDataInJsonData(data, "salesbytendertypes_cashtotalamount");
                salesbytendertypes_creditcardtransactions = GlobalMemberValues.getDataInJsonData(data, "salesbytendertypes_creditcardtransactions");
                salesbytendertypes_creditcardtotalamount = GlobalMemberValues.getDataInJsonData(data, "salesbytendertypes_creditcardtotalamount");
                salesbytendertypes_giftcardtransactions = GlobalMemberValues.getDataInJsonData(data, "salesbytendertypes_giftcardtransactions");
                salesbytendertypes_giftcardtotalamount = GlobalMemberValues.getDataInJsonData(data, "salesbytendertypes_giftcardtotalamount");
                salesbytendertypes_pointstransactions = GlobalMemberValues.getDataInJsonData(data, "salesbytendertypes_pointstransactions");
                salesbytendertypes_pointstotalamount = GlobalMemberValues.getDataInJsonData(data, "salesbytendertypes_pointstotalamount");
                salesbytendertypes_otherstransactions = GlobalMemberValues.getDataInJsonData(data, "salesbytendertypes_otherstransactions");
                salesbytendertypes_otherstotalamount = GlobalMemberValues.getDataInJsonData(data, "salesbytendertypes_otherstotalamount");
                salesbytendertypes_totaltransaction = GlobalMemberValues.getDataInJsonData(data, "salesbytendertypes_totaltransaction");
                salesbytendertypes_totalamount = GlobalMemberValues.getDataInJsonData(data, "salesbytendertypes_totalamount");

                cashsummarydetails_cashtransactions = GlobalMemberValues.getDataInJsonData(data, "cashsummarydetails_cashtransactions");
                cashsummarydetails_cashsales = GlobalMemberValues.getDataInJsonData(data, "cashsummarydetails_cashsales");
                cashsummarydetails_cashrefund = GlobalMemberValues.getDataInJsonData(data, "cashsummarydetails_cashrefund");
                cashsummarydetails_others = GlobalMemberValues.getDataInJsonData(data, "cashsummarydetails_others");
                cashsummarydetails_cashtotal = GlobalMemberValues.getDataInJsonData(data, "cashsummarydetails_cashtotal");

                cardsettlementdetail_cardtransmaster = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtransmaster");
                cardsettlementdetail_cardsalesmaster = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardsalesmaster");
                cardsettlementdetail_cardrefundmaster = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardrefundmaster");
                cardsettlementdetail_cardtipmaster = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtipmaster");
                cardsettlementdetail_cardtotalmaster = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtotalmaster");

                cardsettlementdetail_cardtransvisa = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtransvisa");
                cardsettlementdetail_cardsalesvisa = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardsalesvisa");
                cardsettlementdetail_cardrefundvisa = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardrefundvisa");
                cardsettlementdetail_cardtipvisa = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtipvisa");
                cardsettlementdetail_cardtotalvisa = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtotalvisa");

                cardsettlementdetail_cardtransamex = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtransamex");
                cardsettlementdetail_cardsalesamex = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardsalesamex");
                cardsettlementdetail_cardrefundamex = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardrefundamex");
                cardsettlementdetail_cardtipamex = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtipamex");
                cardsettlementdetail_cardtotalamex = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtotalamex");

                cardsettlementdetail_cardtransdiscover = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtransdiscover");
                cardsettlementdetail_cardsalesdiscover = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardsalesdiscover");
                cardsettlementdetail_cardrefunddiscover = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardrefunddiscover");
                cardsettlementdetail_cardtipdiscvoer = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtipdiscvoer");
                cardsettlementdetail_cardtotaldiscover = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtotaldiscover");

                cardsettlementdetail_cardtransother = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtransother");
                cardsettlementdetail_cardsalesother = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardsalesother");
                cardsettlementdetail_cardrefundother = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardrefundother");
                cardsettlementdetail_cardtipother = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtipother");
                cardsettlementdetail_cardtotalother = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtotalother");

                cardsettlementdetail_cardtranstotal = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtranstotal");
                cardsettlementdetail_cardsalestotal = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardsalestotal");
                cardsettlementdetail_cardrefundtotal = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardrefundtotal");
                cardsettlementdetail_cardtotalothers = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtotalothers");
                cardsettlementdetail_cardtiptotal = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtiptotal");
                cardsettlementdetail_cardtotaltotal = GlobalMemberValues.getDataInJsonData(data, "cardsettlementdetail_cardtotaltotal");

                giftcardsummary_redeemed = GlobalMemberValues.getDataInJsonData(data, "giftcardsummary_redeemed");
                giftcardsummary_newcertsales = GlobalMemberValues.getDataInJsonData(data, "giftcardsummary_newcertsales");

                if (GlobalMemberValues.isOnlineOrderUseYN()) {
                    onlinedata_transactions = GlobalMemberValues.getDataInJsonData(data, "onlinedata_transactions");
                    onlinedata_salestotal = GlobalMemberValues.getDataInJsonData(data, "onlinedata_salestotal");
                    onlinedata_refund = GlobalMemberValues.getDataInJsonData(data, "onlinedata_refund");
                    onlinedata_tipamount = GlobalMemberValues.getDataInJsonData(data, "onlinedata_tipamount");
                    onlinedata_totalamount = GlobalMemberValues.getDataInJsonData(data, "onlinedata_totalamount");

                    kioskdata_transactions = GlobalMemberValues.getDataInJsonData(data, "kioskdata_transactions");
                    kioskdata_salestotal = GlobalMemberValues.getDataInJsonData(data, "kioskdata_salestotal");
                    kioskdata_refund = GlobalMemberValues.getDataInJsonData(data, "kioskdata_refund");
                    kioskdata_tipamount = GlobalMemberValues.getDataInJsonData(data, "kioskdata_tipamount");
                    kioskdata_totalamount = GlobalMemberValues.getDataInJsonData(data, "kioskdata_totalamount");

                    // 10112023
                    thirdparty_data = GlobalMemberValues.getDataInJsonData(data, "thirdparty_data");
                }

                if (GlobalMemberValues.isStrEmpty(endofdayyn)) {
                    endofdayyn = "N";
                }

                if (!GlobalMemberValues.isStrEmpty(previous_endofday)) {
                    // 이전 END OF DAY 검색일 경우 ----------------------------------------------------------------------------------------
                    TextView topdateTv = new TextView(MainActivity.mContext);
                    topdateTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 40));
                    topdateTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                    topdateTv.setText("PREV. END OF DAY (" + previous_endofday + ")");
                    topdateTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    GlobalMemberValues.setTextStyleOnClover(topdateTv);
                    printingLn.addView(topdateTv);
                    // --------------------------------------------------------------------------------------------------------------------
                }

                // 타이틀 -----------------------------------------------------------------------------------------------------
                TextView batchtitleTv = new TextView(MainActivity.mContext);
                batchtitleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                batchtitleTv.setGravity(Gravity.CENTER);
                if (endofdayyn == "N" || endofdayyn.equals("N")) {
                    batchtitleTv.setText("CASHOUT REPORT");
                } else {
                    batchtitleTv.setText("END OF DAY REPORT");
                }
                batchtitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 20);
                GlobalMemberValues.setTextStyleOnClover(batchtitleTv);
                printingLn.addView(batchtitleTv);
                // --------------------------------------------------------------------------------------------------------------------


                // 로고 프린팅
                String logoprintingonreceiptyn = MainActivity.mDbInit.dbExecuteReadReturnString(
                        " select logoprintingonreceiptyn from salon_storestationsettings_deviceprinter ");
                if (GlobalMemberValues.isStrEmpty(logoprintingonreceiptyn)) {
                    logoprintingonreceiptyn = "N";
                }
                if (logoprintingonreceiptyn == "Y" || logoprintingonreceiptyn.equals("Y")) {
                    File path = GlobalMemberValues.ADFILELOCALPATH;
                    File isFile = new File(path, "receiptlogoimg.png"); //파일명까지 포함함 경로의 File 객체 생성
                    String adImage = isFile.getPath();
                    if (new File(adImage).exists()) {
                        ImageView logoimg = new ImageView(MainActivity.mContext);
                        logoimg.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 200));
                        logoimg.setImageBitmap(BitmapFactory.decodeFile(isFile.getAbsolutePath()));
                        //logoimg.setScaleType(ImageView.ScaleType.FIT_CENTER);
                        printingLn.addView(logoimg);

                        // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                        // ------------------------------------------------------------------------------------------------------------------------------
                    }
                }

                // Store 이름
                TextView storenameTv = new TextView(MainActivity.mContext);
                storenameTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                storenameTv.setGravity(Gravity.CENTER);
                storenameTv.setText("*** " + str_storename + " ***");
                storenameTv.setPaintFlags(storenameTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                storenameTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                GlobalMemberValues.setTextStyleOnClover(storenameTv);
                printingLn.addView(storenameTv);

                // Store 주소 1, 2
                TextView storeaddrTv = new TextView(MainActivity.mContext);
                storeaddrTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                storeaddrTv.setGravity(Gravity.CENTER);
                storeaddrTv.setText(str_storeaddress1 + " "+ str_storeaddress2);
                storeaddrTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(storeaddrTv);
                printingLn.addView(storeaddrTv);

                // Store 주소 나머지
                TextView storeaddretcTv = new TextView(MainActivity.mContext);
                storeaddretcTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                storeaddretcTv.setGravity(Gravity.CENTER);
                storeaddretcTv.setText(str_storecity + " " + str_storestate + " "+ str_storezip);
                storeaddretcTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(storeaddretcTv);
                printingLn.addView(storeaddretcTv);

                // Store 전화번호
                TextView storetelTv = new TextView(MainActivity.mContext);
                storetelTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                storetelTv.setGravity(Gravity.CENTER);
                storetelTv.setText("(TEL) "+ telNumberExch(str_storephone));
                storetelTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(storetelTv);
                printingLn.addView(storetelTv);

                GlobalMemberValues.logWrite("cloverdatacheckreturnlog", "스토어명 : " + str_storename + "\n");
                GlobalMemberValues.logWrite("cloverdatacheckreturnlog", "전화번호 : " + telNumberExch(str_storephone) + "\n");

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------


                if (false) {
//                if (endofdayyn == "N" || endofdayyn.equals("N")) {
                    // Log In/Out 타이틀 --------------------------------------------------------------------------------------------------
                    TextView loginoutdatatitleTv = new TextView(MainActivity.mContext);
                    loginoutdatatitleTv.setLayoutParams(matchParentParams);
                    loginoutdatatitleTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                    loginoutdatatitleTv.setText("[Log in/out data]");
                    loginoutdatatitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(loginoutdatatitleTv);
                    printingLn.addView(loginoutdatatitleTv);
                    // --------------------------------------------------------------------------------------------------------------------

                    // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    // log in/out sub  --------------------------------------------------------------------------------------------------
                    LinearLayout loginoutsubLn = new LinearLayout(MainActivity.mContext);
                    loginoutsubLn.setLayoutParams(matchParentParams);
                    loginoutsubLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView loginoutsubLeftTv = new TextView(MainActivity.mContext);
                    loginoutsubLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    loginoutsubLeftTv.setText("Type");
                    loginoutsubLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(loginoutsubLeftTv);
                    loginoutsubLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    loginoutsubLn.addView(loginoutsubLeftTv);

                    TextView loginoutsubRightTv = new TextView(MainActivity.mContext);
                    loginoutsubRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                    loginoutsubRightTv.setText("Date");
                    loginoutsubRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(loginoutsubRightTv);
                    loginoutsubRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                    loginoutsubLn.addView(loginoutsubRightTv);

                    printingLn.addView(loginoutsubLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    JSONArray arr_empLoginoutList = new JSONArray();
                    try {
                        arr_empLoginoutList = data.getJSONArray("employeeloginoutlog");
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

                    if (arr_empLoginoutList.length() != 0) {
                        // employeelist not null!
                        int cnt = arr_empLoginoutList.length();
                        for (int i = 0; i < cnt; i++) {

                            try {
                                JSONObject dic_jobc = arr_empLoginoutList.getJSONObject(i);
                                str_emp_loginouttype = dic_jobc.getString("loginouttype");
                                str_emp_loginoutdate = dic_jobc.getString("loginoutdatetime");
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }

                            // 인쇄실행해야 하는 부분.
                            String tempSpace = "";
                            switch (str_emp_loginouttype.toUpperCase()) {
                                case "LOGIN" : {
                                    tempSpace = "       ";
                                    break;
                                }
                                case "LOGOUT" : {
                                    tempSpace = "      ";
                                    break;
                                }
                            }

                            LinearLayout loginoutlistLn2 = new LinearLayout(MainActivity.mContext);
                            loginoutlistLn2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                            loginoutlistLn2.setOrientation(LinearLayout.HORIZONTAL);

                            // 로그인/아웃 ---------------------------------------------------------------------------------------------------------------
                            TextView loginoutcontentsTv = new TextView(MainActivity.mContext);
                            loginoutcontentsTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            loginoutcontentsTv.setText(str_emp_loginouttype);
                            loginoutcontentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(loginoutcontentsTv);
                            loginoutcontentsTv.setLayoutParams(new LinearLayout.LayoutParams(0, 30, 1.0f));
                            loginoutlistLn2.addView(loginoutcontentsTv);

                            TextView loginoutdatecontentsTv = new TextView(MainActivity.mContext);
                            loginoutdatecontentsTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            loginoutdatecontentsTv.setText(str_emp_loginoutdate);
                            loginoutdatecontentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(loginoutdatecontentsTv);
                            loginoutdatecontentsTv.setLayoutParams(new LinearLayout.LayoutParams(0, 30, 3.0f));
                            loginoutlistLn2.addView(loginoutdatecontentsTv);
                            // --------------------------------------------------------------------------------------------------------------------------------

                            printingLn.addView(loginoutlistLn2);
                        }
                    }
                    // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    // 직원 Cash In 기록 출력 ---------------------------------------------------

                    // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 10));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }


                if (endofdayyn == "N" || endofdayyn.equals("N")) {
                    // cashinout 타이틀 --------------------------------------------------------------------------------------------------
                    TextView cashinouttitleTv = new TextView(MainActivity.mContext);
                    cashinouttitleTv.setLayoutParams(matchParentParams);
                    cashinouttitleTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                    cashinouttitleTv.setText("[Cash in / out data]");
                    cashinouttitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashinouttitleTv);
                    printingLn.addView(cashinouttitleTv);
                    // --------------------------------------------------------------------------------------------------------------------

                    // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    JSONArray arr_empCashinList = new JSONArray();
                    try {
                        arr_empCashinList = data.getJSONArray("employeecashinlog");
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

                    if (arr_empCashinList.length() != 0) {
                        // employeelist not null!
                        int cnt = arr_empCashinList.length();
                        for (int i = 0; i < cnt; i++) {

                            try {
                                JSONObject dic_jobc = arr_empCashinList.getJSONObject(i);
                                str_emp_cashinmoney = dic_jobc.getString("cashinmoney");
                                str_emp_cashinreason = dic_jobc.getString("cashinreason");
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }

                            LinearLayout cashinoutlistLn2 = new LinearLayout(MainActivity.mContext);
                            cashinoutlistLn2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                            cashinoutlistLn2.setOrientation(LinearLayout.HORIZONTAL);

                            // 로그인/아웃 ---------------------------------------------------------------------------------------------------------------
                            TextView loginoutcontentsTv = new TextView(MainActivity.mContext);
                            loginoutcontentsTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            loginoutcontentsTv.setText(str_emp_cashinreason);
                            loginoutcontentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(loginoutcontentsTv);
                            loginoutcontentsTv.setLayoutParams(new LinearLayout.LayoutParams(0, 30, 1.0f));
                            cashinoutlistLn2.addView(loginoutcontentsTv);

                            TextView loginoutdatecontentsTv = new TextView(MainActivity.mContext);
                            loginoutdatecontentsTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            loginoutdatecontentsTv.setText(str_emp_cashinmoney);
                            loginoutdatecontentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(loginoutdatecontentsTv);
                            loginoutdatecontentsTv.setLayoutParams(new LinearLayout.LayoutParams(0, 30, 2.0f));
                            cashinoutlistLn2.addView(loginoutdatecontentsTv);
                            // --------------------------------------------------------------------------------------------------------------------------------

                            printingLn.addView(cashinoutlistLn2);
                        }
                    }

                    // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }

                /** Sales Over 시작 **********************************************************************************************************************/
                // SALES OVERVIEW 타이틀 -----------------------------------------------------------------------------------------------------
                TextView salesoverviewtitleTv = new TextView(MainActivity.mContext);
                salesoverviewtitleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                salesoverviewtitleTv.setGravity(Gravity.CENTER);
                salesoverviewtitleTv.setText("Sales Overview");
                salesoverviewtitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                GlobalMemberValues.setTextStyleOnClover(salesoverviewtitleTv);
                printingLn.addView(salesoverviewtitleTv);
                // --------------------------------------------------------------------------------------------------------------------

                // All Tickets ----------------------------------------------------------------------------------------------------
                LinearLayout allticketsLn = new LinearLayout(MainActivity.mContext);
                allticketsLn.setLayoutParams(matchParentParams);
                allticketsLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView allticketsLeftTv = new TextView(MainActivity.mContext);
                allticketsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                allticketsLeftTv.setText("All Tickets");
                allticketsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(allticketsLeftTv);
                allticketsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                allticketsLn.addView(allticketsLeftTv);

                TextView allticketsRightTv = new TextView(MainActivity.mContext);
                allticketsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                allticketsRightTv.setText(salesoverview_alltickets);
                allticketsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(allticketsRightTv);
                allticketsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                allticketsLn.addView(allticketsRightTv);

                printingLn.addView(allticketsLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Employee Name ----------------------------------------------------------------------------------------------------
                if (endofdayyn == "N" || endofdayyn.equals("N")) {
                    salesoverview_employeename = GlobalMemberValues.getDataInJsonData(data, "salesoverview_employeename");


                    LinearLayout employeenameLn = new LinearLayout(MainActivity.mContext);
                    employeenameLn.setLayoutParams(matchParentParams);
                    employeenameLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView employeenameLeftTv = new TextView(MainActivity.mContext);
                    employeenameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    employeenameLeftTv.setText("Employee Name");
                    employeenameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(employeenameLeftTv);
                    employeenameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    employeenameLn.addView(employeenameLeftTv);

                    TextView employeenameRightTv = new TextView(MainActivity.mContext);
                    employeenameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    employeenameRightTv.setText(salesoverview_employeename);
                    employeenameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(employeenameRightTv);
                    employeenameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    employeenameLn.addView(employeenameRightTv);

                    printingLn.addView(employeenameLn);
                }
                // --------------------------------------------------------------------------------------------------------------------

                if (endofdayyn == "N" || endofdayyn.equals("N")) {
                    // Cash In Date --------------------------------------------------------------------------------------------------
                    LinearLayout cashindateLn = new LinearLayout(MainActivity.mContext);
                    cashindateLn.setLayoutParams(matchParentParams);
                    cashindateLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cashindateLeftTv = new TextView(MainActivity.mContext);
                    cashindateLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cashindateLeftTv.setText("Cash In Date");
                    cashindateLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashindateLeftTv);
                    cashindateLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cashindateLn.addView(cashindateLeftTv);

                    TextView cashindateRightTv = new TextView(MainActivity.mContext);
                    cashindateRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cashindateRightTv.setText(salesoverview_cashindate);
                    cashindateRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashindateRightTv);
                    cashindateRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    cashindateLn.addView(cashindateRightTv);

                    printingLn.addView(cashindateLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // Cash Out Date --------------------------------------------------------------------------------------------------
                    LinearLayout cashoutdateLn = new LinearLayout(MainActivity.mContext);
                    cashoutdateLn.setLayoutParams(matchParentParams);
                    cashoutdateLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cashoutdateLeftTv = new TextView(MainActivity.mContext);
                    cashoutdateLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cashoutdateLeftTv.setText("Cash Out Date");
                    cashoutdateLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashoutdateLeftTv);
                    cashoutdateLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cashoutdateLn.addView(cashoutdateLeftTv);

                    TextView cashoutdateRightTv = new TextView(MainActivity.mContext);
                    cashoutdateRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cashoutdateRightTv.setText(salesoverview_cashoutdate);
                    cashoutdateRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashoutdateRightTv);
                    cashoutdateRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    cashoutdateLn.addView(cashoutdateRightTv);

                    printingLn.addView(cashoutdateLn);
                    // --------------------------------------------------------------------------------------------------------------------
                }

                // Printed Date --------------------------------------------------------------------------------------------------
                String nowDate = getDate();
                String nowTime = getTime();

                LinearLayout cashoutdateLn = new LinearLayout(MainActivity.mContext);
                cashoutdateLn.setLayoutParams(matchParentParams);
                cashoutdateLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView cashoutdateLeftTv = new TextView(MainActivity.mContext);
                cashoutdateLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                cashoutdateLeftTv.setText("Printed");
                cashoutdateLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(cashoutdateLeftTv);
                cashoutdateLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                cashoutdateLn.addView(cashoutdateLeftTv);

                TextView cashoutdateRightTv = new TextView(MainActivity.mContext);
                cashoutdateRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                cashoutdateRightTv.setText(nowDate + " " + nowTime);
                cashoutdateRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(cashoutdateRightTv);
                cashoutdateRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                cashoutdateLn.addView(cashoutdateRightTv);

                printingLn.addView(cashoutdateLn);
                // --------------------------------------------------------------------------------------------------------------------

                // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 10));
                // ---------------------------------------------------------------------------------------------------------------------------------

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                /** Sales Over 끝 ************************************************************************************************************************/

                /** Sales Summary  시작 **********************************************************************************************************************/
                // SALES SUMMARY 타이틀 -----------------------------------------------------------------------------------------------------
                TextView salessummarytitleTv = new TextView(MainActivity.mContext);
                salessummarytitleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                salessummarytitleTv.setGravity(Gravity.CENTER);
                salessummarytitleTv.setText("Sales Summary");
                salessummarytitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                GlobalMemberValues.setTextStyleOnClover(salessummarytitleTv);
                printingLn.addView(salessummarytitleTv);
                // --------------------------------------------------------------------------------------------------------------------

                // Sales --------------------------------------------------------------------------------------------------------------
                LinearLayout salessummary_salesLn = new LinearLayout(MainActivity.mContext);
                salessummary_salesLn.setLayoutParams(matchParentParams);
                salessummary_salesLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salessummary_salesLeftTv = new TextView(MainActivity.mContext);
                salessummary_salesLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salessummary_salesLeftTv.setText("Sales");
                salessummary_salesLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_salesLeftTv);
                salessummary_salesLeftTv.setPaintFlags(salessummary_salesLeftTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                salessummary_salesLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salessummary_salesLn.addView(salessummary_salesLeftTv);

                TextView salessummary_salesRightTv = new TextView(MainActivity.mContext);
                salessummary_salesRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salessummary_salesRightTv.setText(salessummary_sales);
                salessummary_salesRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_salesRightTv);
                salessummary_salesRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salessummary_salesLn.addView(salessummary_salesRightTv);

                printingLn.addView(salessummary_salesLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Extra Total ----------------------------------------------------------------------------------------------------
                /**
                LinearLayout salessummary_extraLn = new LinearLayout(MainActivity.mContext);
                salessummary_extraLn.setLayoutParams(matchParentParams);
                salessummary_extraLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salessummary_extraLeftTv = new TextView(MainActivity.mContext);
                salessummary_extraLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salessummary_extraLeftTv.setText("Extra Total");
                salessummary_extraLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_extraLeftTv);
                salessummary_extraLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salessummary_extraLn.addView(salessummary_extraLeftTv);

                TextView salessummary_extraRightTv = new TextView(MainActivity.mContext);
                salessummary_extraRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salessummary_extraRightTv.setText(salessummary_extra);
                salessummary_extraRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_extraRightTv);
                salessummary_extraRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salessummary_extraLn.addView(salessummary_extraRightTv);

                printingLn.addView(salessummary_extraLn);
                 **/
                // --------------------------------------------------------------------------------------------------------------------

                // Discount Total ----------------------------------------------------------------------------------------------------
                LinearLayout salessummary_discountLn = new LinearLayout(MainActivity.mContext);
                salessummary_discountLn.setLayoutParams(matchParentParams);
                salessummary_discountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salessummary_discountLeftTv = new TextView(MainActivity.mContext);
                salessummary_discountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salessummary_discountLeftTv.setText("Discount Total");
                salessummary_discountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_discountLeftTv);
                salessummary_discountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salessummary_discountLn.addView(salessummary_discountLeftTv);

                TextView salessummary_discountRightTv = new TextView(MainActivity.mContext);
                salessummary_discountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salessummary_discountRightTv.setText(salessummary_discount);
                salessummary_discountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_discountRightTv);
                salessummary_discountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salessummary_discountLn.addView(salessummary_discountRightTv);

                printingLn.addView(salessummary_discountLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Refund Total ----------------------------------------------------------------------------------------------------
                LinearLayout salessummary_refundLn = new LinearLayout(MainActivity.mContext);
                salessummary_refundLn.setLayoutParams(matchParentParams);
                salessummary_refundLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salessummary_refundLeftTv = new TextView(MainActivity.mContext);
                salessummary_refundLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salessummary_refundLeftTv.setText("Refund Total");
                salessummary_refundLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_refundLeftTv);
                salessummary_refundLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salessummary_refundLn.addView(salessummary_refundLeftTv);

                TextView salessummary_refundRightTv = new TextView(MainActivity.mContext);
                salessummary_refundRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salessummary_refundRightTv.setText(salessummary_refund);
                salessummary_refundRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_refundRightTv);
                salessummary_refundRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salessummary_refundLn.addView(salessummary_refundRightTv);

                printingLn.addView(salessummary_refundLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Net Sales ----------------------------------------------------------------------------------------------------
                LinearLayout salessummary_netsalesLn = new LinearLayout(MainActivity.mContext);
                salessummary_netsalesLn.setLayoutParams(matchParentParams);
                salessummary_netsalesLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salessummary_netsalesLeftTv = new TextView(MainActivity.mContext);
                salessummary_netsalesLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salessummary_netsalesLeftTv.setText("Net Sales");
                salessummary_netsalesLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_netsalesLeftTv);
                salessummary_netsalesLeftTv.setPaintFlags(salessummary_netsalesLeftTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                salessummary_netsalesLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salessummary_netsalesLn.addView(salessummary_netsalesLeftTv);

                TextView salessummary_netsalesRightTv = new TextView(MainActivity.mContext);
                salessummary_netsalesRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salessummary_netsalesRightTv.setText(salessummary_netsales);
                salessummary_netsalesRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_netsalesRightTv);
                salessummary_netsalesRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salessummary_netsalesLn.addView(salessummary_netsalesRightTv);

                printingLn.addView(salessummary_netsalesLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Taxes & Fees ----------------------------------------------------------------------------------------------------
                LinearLayout salessummary_taxesandfeesLn = new LinearLayout(MainActivity.mContext);
                salessummary_taxesandfeesLn.setLayoutParams(matchParentParams);
                salessummary_taxesandfeesLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salessummary_taxesandfeesLeftTv = new TextView(MainActivity.mContext);
                salessummary_taxesandfeesLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salessummary_taxesandfeesLeftTv.setText("Taxes & Fees");
                salessummary_taxesandfeesLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_taxesandfeesLeftTv);
                salessummary_taxesandfeesLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salessummary_taxesandfeesLn.addView(salessummary_taxesandfeesLeftTv);

                TextView salessummary_taxesandfeesRightTv = new TextView(MainActivity.mContext);
                salessummary_taxesandfeesRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salessummary_taxesandfeesRightTv.setText(salessummary_taxesandfees);
                salessummary_taxesandfeesRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_taxesandfeesRightTv);
                salessummary_taxesandfeesRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salessummary_taxesandfeesLn.addView(salessummary_taxesandfeesRightTv);

                printingLn.addView(salessummary_taxesandfeesLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Sub Total ----------------------------------------------------------------------------------------------------
                LinearLayout salessummary_subtotalLn = new LinearLayout(MainActivity.mContext);
                salessummary_subtotalLn.setLayoutParams(matchParentParams);
                salessummary_subtotalLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salessummary_subtotalLeftTv = new TextView(MainActivity.mContext);
                salessummary_subtotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salessummary_subtotalLeftTv.setText("Sub Total");
                salessummary_subtotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_subtotalLeftTv);
                salessummary_subtotalLeftTv.setPaintFlags(salessummary_subtotalLeftTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                salessummary_subtotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salessummary_subtotalLn.addView(salessummary_subtotalLeftTv);

                double d_temp_subtotal = GlobalMemberValues.getDoubleAtString(salessummary_subtotal) - GlobalMemberValues.getDoubleAtString(salessummary_gratuity);

                TextView salessummary_subtotalRightTv = new TextView(MainActivity.mContext);
                salessummary_subtotalRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salessummary_subtotalRightTv.setText(GlobalMemberValues.getCommaStringForDouble(d_temp_subtotal + ""));
                salessummary_subtotalRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_subtotalRightTv);
                salessummary_subtotalRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salessummary_subtotalLn.addView(salessummary_subtotalRightTv);

                printingLn.addView(salessummary_subtotalLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Gratuity ---------------------------------------------------------------------------------------------
                if (!salessummary_gratuity.isEmpty()){
                    LinearLayout gratuity_Ln = new LinearLayout(MainActivity.mContext);
                    gratuity_Ln.setLayoutParams(matchParentParams);
                    gratuity_Ln.setOrientation(LinearLayout.HORIZONTAL);

                    TextView gratuity_LeftTv = new TextView(MainActivity.mContext);
                    gratuity_LeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    gratuity_LeftTv.setText("Gratuity");
                    gratuity_LeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuity_LeftTv);
                    gratuity_LeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    gratuity_Ln.addView(gratuity_LeftTv);

                    TextView gratuity_RightTv = new TextView(MainActivity.mContext);
                    gratuity_RightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    gratuity_RightTv.setText(salessummary_gratuity);
                    gratuity_RightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuity_RightTv);
                    gratuity_RightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    gratuity_Ln.addView(gratuity_RightTv);

                    printingLn.addView(gratuity_Ln);
                }

                // 10302023 -----------------------------------------------------------------------------
                if (!salessummary_gratuity_cash.isEmpty() && GlobalMemberValues.getDoubleAtString(salessummary_gratuity_cash) > 0){
                    LinearLayout gratuity_Ln = new LinearLayout(MainActivity.mContext);
                    gratuity_Ln.setLayoutParams(matchParentParams);
                    gratuity_Ln.setOrientation(LinearLayout.HORIZONTAL);

                    TextView gratuity_LeftTv = new TextView(MainActivity.mContext);
                    gratuity_LeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    gratuity_LeftTv.setText("- Cash");
                    gratuity_LeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuity_LeftTv);
                    gratuity_LeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    gratuity_Ln.addView(gratuity_LeftTv);

                    TextView gratuity_RightTv = new TextView(MainActivity.mContext);
                    gratuity_RightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    gratuity_RightTv.setText(salessummary_gratuity_cash);
                    gratuity_RightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuity_RightTv);
                    gratuity_RightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    gratuity_Ln.addView(gratuity_RightTv);

                    printingLn.addView(gratuity_Ln);
                }

                if (!salessummary_gratuity_card.isEmpty() && GlobalMemberValues.getDoubleAtString(salessummary_gratuity_card) > 0){
                    LinearLayout gratuity_Ln = new LinearLayout(MainActivity.mContext);
                    gratuity_Ln.setLayoutParams(matchParentParams);
                    gratuity_Ln.setOrientation(LinearLayout.HORIZONTAL);

                    TextView gratuity_LeftTv = new TextView(MainActivity.mContext);
                    gratuity_LeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    gratuity_LeftTv.setText("- Card");
                    gratuity_LeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuity_LeftTv);
                    gratuity_LeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    gratuity_Ln.addView(gratuity_LeftTv);

                    TextView gratuity_RightTv = new TextView(MainActivity.mContext);
                    gratuity_RightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    gratuity_RightTv.setText(salessummary_gratuity_card);
                    gratuity_RightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuity_RightTv);
                    gratuity_RightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    gratuity_Ln.addView(gratuity_RightTv);

                    printingLn.addView(gratuity_Ln);
                }

                if (!salessummary_gratuity_giftcard.isEmpty() && GlobalMemberValues.getDoubleAtString(salessummary_gratuity_giftcard) > 0){
                    LinearLayout gratuity_Ln = new LinearLayout(MainActivity.mContext);
                    gratuity_Ln.setLayoutParams(matchParentParams);
                    gratuity_Ln.setOrientation(LinearLayout.HORIZONTAL);

                    TextView gratuity_LeftTv = new TextView(MainActivity.mContext);
                    gratuity_LeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    gratuity_LeftTv.setText("- Gift Card");
                    gratuity_LeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuity_LeftTv);
                    gratuity_LeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    gratuity_Ln.addView(gratuity_LeftTv);

                    TextView gratuity_RightTv = new TextView(MainActivity.mContext);
                    gratuity_RightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    gratuity_RightTv.setText(salessummary_gratuity_giftcard);
                    gratuity_RightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuity_RightTv);
                    gratuity_RightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    gratuity_Ln.addView(gratuity_RightTv);

                    printingLn.addView(gratuity_Ln);
                }

                if (!salessummary_gratuity_point.isEmpty() && GlobalMemberValues.getDoubleAtString(salessummary_gratuity_point) > 0){
                    LinearLayout gratuity_Ln = new LinearLayout(MainActivity.mContext);
                    gratuity_Ln.setLayoutParams(matchParentParams);
                    gratuity_Ln.setOrientation(LinearLayout.HORIZONTAL);

                    TextView gratuity_LeftTv = new TextView(MainActivity.mContext);
                    gratuity_LeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    gratuity_LeftTv.setText("- Point");
                    gratuity_LeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuity_LeftTv);
                    gratuity_LeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    gratuity_Ln.addView(gratuity_LeftTv);

                    TextView gratuity_RightTv = new TextView(MainActivity.mContext);
                    gratuity_RightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    gratuity_RightTv.setText(salessummary_gratuity_point);
                    gratuity_RightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuity_RightTv);
                    gratuity_RightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    gratuity_Ln.addView(gratuity_RightTv);

                    printingLn.addView(gratuity_Ln);
                }

                if (!salessummary_gratuity_other.isEmpty() && GlobalMemberValues.getDoubleAtString(salessummary_gratuity_other) > 0){
                    LinearLayout gratuity_Ln = new LinearLayout(MainActivity.mContext);
                    gratuity_Ln.setLayoutParams(matchParentParams);
                    gratuity_Ln.setOrientation(LinearLayout.HORIZONTAL);

                    TextView gratuity_LeftTv = new TextView(MainActivity.mContext);
                    gratuity_LeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    gratuity_LeftTv.setText("- Other");
                    gratuity_LeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuity_LeftTv);
                    gratuity_LeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    gratuity_Ln.addView(gratuity_LeftTv);

                    TextView gratuity_RightTv = new TextView(MainActivity.mContext);
                    gratuity_RightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    gratuity_RightTv.setText(salessummary_gratuity_other);
                    gratuity_RightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(gratuity_RightTv);
                    gratuity_RightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    gratuity_Ln.addView(gratuity_RightTv);

                    printingLn.addView(gratuity_Ln);
                }
                // 10302023 -----------------------------------------------------------------------------

                // Gratuity ---------------------------------------------------------------------------------------------

                // Credit Tips ----------------------------------------------------------------------------------------------------
                LinearLayout salessummary_credittipsLn = new LinearLayout(MainActivity.mContext);
                salessummary_credittipsLn.setLayoutParams(matchParentParams);
                salessummary_credittipsLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salessummary_credittipsLeftTv = new TextView(MainActivity.mContext);
                salessummary_credittipsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salessummary_credittipsLeftTv.setText("Credit Tips");
                salessummary_credittipsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_credittipsLeftTv);
                salessummary_credittipsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salessummary_credittipsLn.addView(salessummary_credittipsLeftTv);

                TextView salessummary_credittipsRightTv = new TextView(MainActivity.mContext);
                salessummary_credittipsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salessummary_credittipsRightTv.setText(salessummary_totaltips);
                salessummary_credittipsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_credittipsRightTv);
                salessummary_credittipsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salessummary_credittipsLn.addView(salessummary_credittipsRightTv);

                printingLn.addView(salessummary_credittipsLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Total Tips ----------------------------------------------------------------------------------------------------
                LinearLayout salessummary_totaltipsLn = new LinearLayout(MainActivity.mContext);
                salessummary_totaltipsLn.setLayoutParams(matchParentParams);
                salessummary_totaltipsLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salessummary_totaltipsLeftTv = new TextView(MainActivity.mContext);
                salessummary_totaltipsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salessummary_totaltipsLeftTv.setText("Total Tips");
                salessummary_totaltipsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_totaltipsLeftTv);
                salessummary_totaltipsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salessummary_totaltipsLn.addView(salessummary_totaltipsLeftTv);

                TextView salessummary_totaltipsRightTv = new TextView(MainActivity.mContext);
                salessummary_totaltipsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);

//                salessummary_totaltipsRightTv.setText(salessummary_totaltips);
                salessummary_totaltipsRightTv.setText(GlobalMemberValues.setDoubleToString(GlobalMemberValues.getDoubleAtString(salessummary_gratuity) + GlobalMemberValues.getDoubleAtString(salessummary_totaltips),2));
                salessummary_totaltipsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_totaltipsRightTv);
                salessummary_totaltipsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salessummary_totaltipsLn.addView(salessummary_totaltipsRightTv);

                printingLn.addView(salessummary_totaltipsLn);
                // --------------------------------------------------------------------------------------------------------------------

                // To Go Fee Total ----------------------------------------------------------------------------------------------------
                LinearLayout salessummary_pickupfeeLn = new LinearLayout(MainActivity.mContext);
                salessummary_pickupfeeLn.setLayoutParams(matchParentParams);
                salessummary_pickupfeeLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salessummary_pickupfeeLeftTv = new TextView(MainActivity.mContext);
                salessummary_pickupfeeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salessummary_pickupfeeLeftTv.setText("To Go Fee Total");
                salessummary_pickupfeeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_pickupfeeLeftTv);
                salessummary_pickupfeeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salessummary_pickupfeeLn.addView(salessummary_pickupfeeLeftTv);

                TextView salessummary_pickupfeeRightTv = new TextView(MainActivity.mContext);
                salessummary_pickupfeeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salessummary_pickupfeeRightTv.setText(salessummary_pickupfee);
                salessummary_pickupfeeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_pickupfeeRightTv);
                salessummary_pickupfeeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salessummary_pickupfeeLn.addView(salessummary_pickupfeeRightTv);

                printingLn.addView(salessummary_pickupfeeLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Delivery Fee Total ----------------------------------------------------------------------------------------------------
                LinearLayout salessummary_deliveryfeeLn = new LinearLayout(MainActivity.mContext);
                salessummary_deliveryfeeLn.setLayoutParams(matchParentParams);
                salessummary_deliveryfeeLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salessummary_deliveryfeeLeftTv = new TextView(MainActivity.mContext);
                salessummary_deliveryfeeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salessummary_deliveryfeeLeftTv.setText("Delivery Fee Total");
                salessummary_deliveryfeeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_deliveryfeeLeftTv);
                salessummary_deliveryfeeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salessummary_deliveryfeeLn.addView(salessummary_deliveryfeeLeftTv);

                TextView salessummary_deliveryfeeRightTv = new TextView(MainActivity.mContext);
                salessummary_deliveryfeeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salessummary_deliveryfeeRightTv.setText(salessummary_deliveryfee);
                salessummary_deliveryfeeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_deliveryfeeRightTv);
                salessummary_deliveryfeeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salessummary_deliveryfeeLn.addView(salessummary_deliveryfeeRightTv);

                printingLn.addView(salessummary_deliveryfeeLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Total ----------------------------------------------------------------------------------------------------
                LinearLayout salessummary_totalLn = new LinearLayout(MainActivity.mContext);
                salessummary_totalLn.setLayoutParams(matchParentParams);
                salessummary_totalLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salessummary_totalLeftTv = new TextView(MainActivity.mContext);
                salessummary_totalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salessummary_totalLeftTv.setText("Total");
                salessummary_totalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_totalLeftTv);
                salessummary_totalLeftTv.setPaintFlags(salessummary_totalLeftTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                salessummary_totalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salessummary_totalLn.addView(salessummary_totalLeftTv);

                TextView salessummary_totalRightTv = new TextView(MainActivity.mContext);
                salessummary_totalRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salessummary_totalRightTv.setText(salessummary_total);
                salessummary_totalRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salessummary_totalRightTv);
                salessummary_totalRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salessummary_totalLn.addView(salessummary_totalRightTv);

                printingLn.addView(salessummary_totalLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Over Short Cash ----------------------------------------------------------------------------------------------------
                    // cash in/out 일 경우에만 over, short cash 표시할 경우 아래 조건문 안에 넣을 것
//                if (endofdayyn == "N" || endofdayyn.equals("N")) {
//                }
                double temp_overShortCash = GlobalMemberValues.getDoubleAtString(salessummary_overshortcash);
                if (temp_overShortCash != 0) {
                    String temp_overShortTxt = "Over";
                    if (temp_overShortCash < 0) {
                        temp_overShortTxt = "Short";
                    }

                    LinearLayout salessummary_overshortcashLn = new LinearLayout(MainActivity.mContext);
                    salessummary_overshortcashLn.setLayoutParams(matchParentParams);
                    salessummary_overshortcashLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salessummary_overshortcashLeftTv = new TextView(MainActivity.mContext);
                    salessummary_overshortcashLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salessummary_overshortcashLeftTv.setText(temp_overShortTxt + " Cash");
                    salessummary_overshortcashLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salessummary_overshortcashLeftTv);
                    salessummary_overshortcashLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salessummary_overshortcashLn.addView(salessummary_overshortcashLeftTv);

                    TextView salessummary_overshortcashRightTv = new TextView(MainActivity.mContext);
                    salessummary_overshortcashRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salessummary_overshortcashRightTv.setText(salessummary_overshortcash);
                    salessummary_overshortcashRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salessummary_overshortcashRightTv);
                    salessummary_overshortcashRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    salessummary_overshortcashLn.addView(salessummary_overshortcashRightTv);

                    printingLn.addView(salessummary_overshortcashLn);
                }
                // --------------------------------------------------------------------------------------------------------------------

                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                /** Sales Summary  끝 ************************************************************************************************************************/


                /** Sales by Tender Types 시작 ****************************************************************************************************************/

                // SALES SUMMARY 타이틀 -----------------------------------------------------------------------------------------------------
                TextView salesbytendertypesTv = new TextView(MainActivity.mContext);
                salesbytendertypesTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                salesbytendertypesTv.setGravity(Gravity.CENTER);
                salesbytendertypesTv.setText("Sales by Tender Types");
                salesbytendertypesTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypesTv);
                printingLn.addView(salesbytendertypesTv);
                // --------------------------------------------------------------------------------------------------------------------

                // CASH 시작 ----------------------------------------------------------------------------------------------------------------------
                // Cash 타이틀 ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypescashTitleLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypescashTitleLn.setLayoutParams(matchParentParams);
                salesbytendertypescashTitleLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypescashTitleLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypescashTitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypescashTitleLeftTv.setText("Cash");
                salesbytendertypescashTitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypescashTitleLeftTv);
                salesbytendertypescashTitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypescashTitleLn.addView(salesbytendertypescashTitleLeftTv);

                TextView salesbytendertypescashTitleRightTv = new TextView(MainActivity.mContext);
                salesbytendertypescashTitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypescashTitleRightTv.setText("");
                salesbytendertypescashTitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypescashTitleRightTv);
                salesbytendertypescashTitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salesbytendertypescashTitleLn.addView(salesbytendertypescashTitleRightTv);

                printingLn.addView(salesbytendertypescashTitleLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Transactions ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypes_cashtransactionsLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypes_cashtransactionsLn.setLayoutParams(matchParentParams);
                salesbytendertypes_cashtransactionsLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypes_cashtransactionsLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypes_cashtransactionsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_cashtransactionsLeftTv.setText("");
                salesbytendertypes_cashtransactionsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_cashtransactionsLeftTv);
                salesbytendertypes_cashtransactionsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                salesbytendertypes_cashtransactionsLn.addView(salesbytendertypes_cashtransactionsLeftTv);

                TextView salesbytendertypes_cashtransactionsMiddleTv = new TextView(MainActivity.mContext);
                salesbytendertypes_cashtransactionsMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_cashtransactionsMiddleTv.setText("Transactions");
                salesbytendertypes_cashtransactionsMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_cashtransactionsMiddleTv);
                salesbytendertypes_cashtransactionsMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypes_cashtransactionsLn.addView(salesbytendertypes_cashtransactionsMiddleTv);

                TextView salesbytendertypes_cashtransactionsRightTv = new TextView(MainActivity.mContext);
                salesbytendertypes_cashtransactionsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypes_cashtransactionsRightTv.setText(salesbytendertypes_cashtransactions);
                salesbytendertypes_cashtransactionsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_cashtransactionsRightTv);
                salesbytendertypes_cashtransactionsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                salesbytendertypes_cashtransactionsLn.addView(salesbytendertypes_cashtransactionsRightTv);

                printingLn.addView(salesbytendertypes_cashtransactionsLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Total Amount ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypes_cashtotalamountLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypes_cashtotalamountLn.setLayoutParams(matchParentParams);
                salesbytendertypes_cashtotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypes_cashtotalamountLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypes_cashtotalamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_cashtotalamountLeftTv.setText("");
                salesbytendertypes_cashtotalamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_cashtotalamountLeftTv);
                salesbytendertypes_cashtotalamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                salesbytendertypes_cashtotalamountLn.addView(salesbytendertypes_cashtotalamountLeftTv);

                TextView salesbytendertypes_cashtotalamountMiddleTv = new TextView(MainActivity.mContext);
                salesbytendertypes_cashtotalamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_cashtotalamountMiddleTv.setText("Total Amount");
                salesbytendertypes_cashtotalamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_cashtotalamountMiddleTv);
                salesbytendertypes_cashtotalamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypes_cashtotalamountLn.addView(salesbytendertypes_cashtotalamountMiddleTv);

                TextView salesbytendertypes_cashtotalamountRightTv = new TextView(MainActivity.mContext);
                salesbytendertypes_cashtotalamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypes_cashtotalamountRightTv.setText(salesbytendertypes_cashtotalamount);
                salesbytendertypes_cashtotalamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_cashtotalamountRightTv);
                salesbytendertypes_cashtotalamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                salesbytendertypes_cashtotalamountLn.addView(salesbytendertypes_cashtotalamountRightTv);

                printingLn.addView(salesbytendertypes_cashtotalamountLn);
                // --------------------------------------------------------------------------------------------------------------------
                // CASH 끝 ----------------------------------------------------------------------------------------------------------------------



                // Credit Card 시작 -------------------------------------------------------------------------------------------------------------
                // Credit Card 타이틀 ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypescardTitleLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypescardTitleLn.setLayoutParams(matchParentParams);
                salesbytendertypescardTitleLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypescardTitleLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypescardTitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypescardTitleLeftTv.setText("Credit Card");
                salesbytendertypescardTitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypescardTitleLeftTv);
                salesbytendertypescardTitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypescardTitleLn.addView(salesbytendertypescardTitleLeftTv);

                TextView salesbytendertypescardTitleRightTv = new TextView(MainActivity.mContext);
                salesbytendertypescardTitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypescardTitleRightTv.setText("");
                salesbytendertypescardTitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypescardTitleRightTv);
                salesbytendertypescardTitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salesbytendertypescardTitleLn.addView(salesbytendertypescardTitleRightTv);

                printingLn.addView(salesbytendertypescardTitleLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Transactions ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypes_creditcardtransactionsLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypes_creditcardtransactionsLn.setLayoutParams(matchParentParams);
                salesbytendertypes_creditcardtransactionsLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypes_creditcardtransactionsLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypes_creditcardtransactionsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_creditcardtransactionsLeftTv.setText("");
                salesbytendertypes_creditcardtransactionsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_creditcardtransactionsLeftTv);
                salesbytendertypes_creditcardtransactionsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                salesbytendertypes_creditcardtransactionsLn.addView(salesbytendertypes_creditcardtransactionsLeftTv);

                TextView salesbytendertypes_creditcardtransactionsMiddleTv = new TextView(MainActivity.mContext);
                salesbytendertypes_creditcardtransactionsMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_creditcardtransactionsMiddleTv.setText("Transactions");
                salesbytendertypes_creditcardtransactionsMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_creditcardtransactionsMiddleTv);
                salesbytendertypes_creditcardtransactionsMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypes_creditcardtransactionsLn.addView(salesbytendertypes_creditcardtransactionsMiddleTv);

                TextView salesbytendertypes_creditcardtransactionsRightTv = new TextView(MainActivity.mContext);
                salesbytendertypes_creditcardtransactionsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypes_creditcardtransactionsRightTv.setText(salesbytendertypes_creditcardtransactions);
                salesbytendertypes_creditcardtransactionsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_creditcardtransactionsRightTv);
                salesbytendertypes_creditcardtransactionsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                salesbytendertypes_creditcardtransactionsLn.addView(salesbytendertypes_creditcardtransactionsRightTv);

                printingLn.addView(salesbytendertypes_creditcardtransactionsLn);
                // --------------------------------------------------------------------------------------------------------------------

                // salesbytendertypes_creditcardtotalamount ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypes_creditcardtotalamountLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypes_creditcardtotalamountLn.setLayoutParams(matchParentParams);
                salesbytendertypes_creditcardtotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypes_creditcardtotalamountLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypes_creditcardtotalamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_creditcardtotalamountLeftTv.setText("");
                salesbytendertypes_creditcardtotalamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_creditcardtotalamountLeftTv);
                salesbytendertypes_creditcardtotalamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                salesbytendertypes_creditcardtotalamountLn.addView(salesbytendertypes_creditcardtotalamountLeftTv);

                TextView salesbytendertypes_creditcardtotalamountMiddleTv = new TextView(MainActivity.mContext);
                salesbytendertypes_creditcardtotalamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_creditcardtotalamountMiddleTv.setText("Total Amount");
                salesbytendertypes_creditcardtotalamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_creditcardtotalamountMiddleTv);
                salesbytendertypes_creditcardtotalamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypes_creditcardtotalamountLn.addView(salesbytendertypes_creditcardtotalamountMiddleTv);

                TextView salesbytendertypes_creditcardtotalamountRightTv = new TextView(MainActivity.mContext);
                salesbytendertypes_creditcardtotalamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypes_creditcardtotalamountRightTv.setText(salesbytendertypes_creditcardtotalamount);
                salesbytendertypes_creditcardtotalamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_creditcardtotalamountRightTv);
                salesbytendertypes_creditcardtotalamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                salesbytendertypes_creditcardtotalamountLn.addView(salesbytendertypes_creditcardtotalamountRightTv);

                printingLn.addView(salesbytendertypes_creditcardtotalamountLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Credit Card 끝 ---------------------------------------------------------------------------------------------------------------



                // Gift Card 시작 ----------------------------------------------------------------------------------------------------------------------
                // Gift Card 타이틀 ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypesgiftcardTitleLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypesgiftcardTitleLn.setLayoutParams(matchParentParams);
                salesbytendertypesgiftcardTitleLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypesgiftcardTitleLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypesgiftcardTitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypesgiftcardTitleLeftTv.setText("Gift Card");
                salesbytendertypesgiftcardTitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypesgiftcardTitleLeftTv);
                salesbytendertypesgiftcardTitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypesgiftcardTitleLn.addView(salesbytendertypesgiftcardTitleLeftTv);

                TextView salesbytendertypesgiftcardTitleRightTv = new TextView(MainActivity.mContext);
                salesbytendertypesgiftcardTitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypesgiftcardTitleRightTv.setText("");
                salesbytendertypesgiftcardTitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypesgiftcardTitleRightTv);
                salesbytendertypesgiftcardTitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salesbytendertypesgiftcardTitleLn.addView(salesbytendertypesgiftcardTitleRightTv);

                printingLn.addView(salesbytendertypesgiftcardTitleLn);
                // --------------------------------------------------------------------------------------------------------------------

                // salesbytendertypes_giftcardtransactions ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypes_giftcardtransactionsLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypes_giftcardtransactionsLn.setLayoutParams(matchParentParams);
                salesbytendertypes_giftcardtransactionsLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypes_giftcardtransactionsLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypes_giftcardtransactionsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_giftcardtransactionsLeftTv.setText("");
                salesbytendertypes_giftcardtransactionsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_giftcardtransactionsLeftTv);
                salesbytendertypes_giftcardtransactionsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                salesbytendertypes_giftcardtransactionsLn.addView(salesbytendertypes_giftcardtransactionsLeftTv);

                TextView salesbytendertypes_giftcardtransactionsMiddleTv = new TextView(MainActivity.mContext);
                salesbytendertypes_giftcardtransactionsMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_giftcardtransactionsMiddleTv.setText("Transactions");
                salesbytendertypes_giftcardtransactionsMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_giftcardtransactionsMiddleTv);
                salesbytendertypes_giftcardtransactionsMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypes_giftcardtransactionsLn.addView(salesbytendertypes_giftcardtransactionsMiddleTv);

                TextView salesbytendertypes_giftcardtransactionsRightTv = new TextView(MainActivity.mContext);
                salesbytendertypes_giftcardtransactionsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypes_giftcardtransactionsRightTv.setText(salesbytendertypes_giftcardtransactions);
                salesbytendertypes_giftcardtransactionsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_giftcardtransactionsRightTv);
                salesbytendertypes_giftcardtransactionsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                salesbytendertypes_giftcardtransactionsLn.addView(salesbytendertypes_giftcardtransactionsRightTv);

                printingLn.addView(salesbytendertypes_giftcardtransactionsLn);
                // --------------------------------------------------------------------------------------------------------------------


                // salesbytendertypes_giftcardtotalamount ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypes_giftcardtotalamountLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypes_giftcardtotalamountLn.setLayoutParams(matchParentParams);
                salesbytendertypes_giftcardtotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypes_giftcardtotalamountLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypes_giftcardtotalamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_giftcardtotalamountLeftTv.setText("");
                salesbytendertypes_giftcardtotalamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_giftcardtotalamountLeftTv);
                salesbytendertypes_giftcardtotalamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                salesbytendertypes_giftcardtotalamountLn.addView(salesbytendertypes_giftcardtotalamountLeftTv);

                TextView salesbytendertypes_giftcardtotalamountMiddleTv = new TextView(MainActivity.mContext);
                salesbytendertypes_giftcardtotalamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_giftcardtotalamountMiddleTv.setText("Total Amount");
                salesbytendertypes_giftcardtotalamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_giftcardtotalamountMiddleTv);
                salesbytendertypes_giftcardtotalamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypes_giftcardtotalamountLn.addView(salesbytendertypes_giftcardtotalamountMiddleTv);

                TextView salesbytendertypes_giftcardtotalamountRightTv = new TextView(MainActivity.mContext);
                salesbytendertypes_giftcardtotalamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypes_giftcardtotalamountRightTv.setText(salesbytendertypes_giftcardtotalamount);
                salesbytendertypes_giftcardtotalamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_giftcardtotalamountRightTv);
                salesbytendertypes_giftcardtotalamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                salesbytendertypes_giftcardtotalamountLn.addView(salesbytendertypes_giftcardtotalamountRightTv);

                printingLn.addView(salesbytendertypes_giftcardtotalamountLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Gift Card 끝 ----------------------------------------------------------------------------------------------------------------------


                // 10112023
                int thirdparty_trans_total = 0;
                double thirdparty_totalamount = 0.0;



                if (GlobalMemberValues.isOnlineOrderUseYN()) {
                    // Kiosk 시작 ----------------------------------------------------------------------------------------------------------------------
                    // Kiosk 타이틀 ----------------------------------------------------------------------------------------------------
                    LinearLayout salesbytendertypesKioskTitleLn = new LinearLayout(MainActivity.mContext);
                    salesbytendertypesKioskTitleLn.setLayoutParams(matchParentParams);
                    salesbytendertypesKioskTitleLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salesbytendertypesKioskTitleLeftTv = new TextView(MainActivity.mContext);
                    salesbytendertypesKioskTitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypesKioskTitleLeftTv.setText("Kiosk");
                    salesbytendertypesKioskTitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypesKioskTitleLeftTv);
                    salesbytendertypesKioskTitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesbytendertypesKioskTitleLn.addView(salesbytendertypesKioskTitleLeftTv);

                    TextView salesbytendertypesKioskTitleRightTv = new TextView(MainActivity.mContext);
                    salesbytendertypesKioskTitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salesbytendertypesKioskTitleRightTv.setText("");
                    salesbytendertypesKioskTitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypesKioskTitleRightTv);
                    salesbytendertypesKioskTitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    salesbytendertypesKioskTitleLn.addView(salesbytendertypesKioskTitleRightTv);

                    printingLn.addView(salesbytendertypesKioskTitleLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // salesbytendertypes_Kiosktransactions ----------------------------------------------------------------------------------------------------
                    LinearLayout salesbytendertypes_KiosktransactionsLn = new LinearLayout(MainActivity.mContext);
                    salesbytendertypes_KiosktransactionsLn.setLayoutParams(matchParentParams);
                    salesbytendertypes_KiosktransactionsLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salesbytendertypes_KiosktransactionsLeftTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KiosktransactionsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_KiosktransactionsLeftTv.setText("");
                    salesbytendertypes_KiosktransactionsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KiosktransactionsLeftTv);
                    salesbytendertypes_KiosktransactionsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    salesbytendertypes_KiosktransactionsLn.addView(salesbytendertypes_KiosktransactionsLeftTv);

                    TextView salesbytendertypes_KiosktransactionsMiddleTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KiosktransactionsMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_KiosktransactionsMiddleTv.setText("Transactions");
                    salesbytendertypes_KiosktransactionsMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KiosktransactionsMiddleTv);
                    salesbytendertypes_KiosktransactionsMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesbytendertypes_KiosktransactionsLn.addView(salesbytendertypes_KiosktransactionsMiddleTv);

                    TextView salesbytendertypes_KiosktransactionsRightTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KiosktransactionsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salesbytendertypes_KiosktransactionsRightTv.setText(kioskdata_transactions);
                    salesbytendertypes_KiosktransactionsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KiosktransactionsRightTv);
                    salesbytendertypes_KiosktransactionsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    salesbytendertypes_KiosktransactionsLn.addView(salesbytendertypes_KiosktransactionsRightTv);

                    printingLn.addView(salesbytendertypes_KiosktransactionsLn);
                    // --------------------------------------------------------------------------------------------------------------------
                    // salesbytendertypes_KioskSalesTotal ----------------------------------------------------------------------------------------------------
                    LinearLayout salesbytendertypes_KioskSalesTotalLn = new LinearLayout(MainActivity.mContext);
                    salesbytendertypes_KioskSalesTotalLn.setLayoutParams(matchParentParams);
                    salesbytendertypes_KioskSalesTotalLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salesbytendertypes_KioskSalesTotalLeftTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KioskSalesTotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_KioskSalesTotalLeftTv.setText("");
                    salesbytendertypes_KioskSalesTotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KioskSalesTotalLeftTv);
                    salesbytendertypes_KioskSalesTotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    salesbytendertypes_KioskSalesTotalLn.addView(salesbytendertypes_KioskSalesTotalLeftTv);

                    TextView salesbytendertypes_KioskSalesTotalMiddleTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KioskSalesTotalMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_KioskSalesTotalMiddleTv.setText("Sales Total");
                    salesbytendertypes_KioskSalesTotalMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KioskSalesTotalMiddleTv);
                    salesbytendertypes_KioskSalesTotalMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesbytendertypes_KioskSalesTotalLn.addView(salesbytendertypes_KioskSalesTotalMiddleTv);

                    TextView salesbytendertypes_KioskSalesTotalRightTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KioskSalesTotalRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salesbytendertypes_KioskSalesTotalRightTv.setText(kioskdata_salestotal);
                    salesbytendertypes_KioskSalesTotalRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KioskSalesTotalRightTv);
                    salesbytendertypes_KioskSalesTotalRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    salesbytendertypes_KioskSalesTotalLn.addView(salesbytendertypes_KioskSalesTotalRightTv);

                    printingLn.addView(salesbytendertypes_KioskSalesTotalLn);
                    // --------------------------------------------------------------------------------------------------------------------
                    // salesbytendertypes_Kioskrefund ----------------------------------------------------------------------------------------------------
                    LinearLayout salesbytendertypes_KioskrefundLn = new LinearLayout(MainActivity.mContext);
                    salesbytendertypes_KioskrefundLn.setLayoutParams(matchParentParams);
                    salesbytendertypes_KioskrefundLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salesbytendertypes_KioskrefundLeftTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KioskrefundLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_KioskrefundLeftTv.setText("");
                    salesbytendertypes_KioskrefundLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KioskrefundLeftTv);
                    salesbytendertypes_KioskrefundLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    salesbytendertypes_KioskrefundLn.addView(salesbytendertypes_KioskrefundLeftTv);

                    TextView salesbytendertypes_KioskrefundMiddleTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KioskrefundMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_KioskrefundMiddleTv.setText("Refund");
                    salesbytendertypes_KioskrefundMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KioskrefundMiddleTv);
                    salesbytendertypes_KioskrefundMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesbytendertypes_KioskrefundLn.addView(salesbytendertypes_KioskrefundMiddleTv);

                    TextView salesbytendertypes_KioskrefundRightTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KioskrefundRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salesbytendertypes_KioskrefundRightTv.setText(kioskdata_refund);
                    salesbytendertypes_KioskrefundRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KioskrefundRightTv);
                    salesbytendertypes_KioskrefundRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    salesbytendertypes_KioskrefundLn.addView(salesbytendertypes_KioskrefundRightTv);

                    printingLn.addView(salesbytendertypes_KioskrefundLn);
                    // --------------------------------------------------------------------------------------------------------------------
                    // salesbytendertypes_Kiosktipamount ----------------------------------------------------------------------------------------------------
                    LinearLayout salesbytendertypes_KiosktipamountLn = new LinearLayout(MainActivity.mContext);
                    salesbytendertypes_KiosktipamountLn.setLayoutParams(matchParentParams);
                    salesbytendertypes_KiosktipamountLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salesbytendertypes_KiosktipamountLeftTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KiosktipamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_KiosktipamountLeftTv.setText("");
                    salesbytendertypes_KiosktipamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KiosktipamountLeftTv);
                    salesbytendertypes_KiosktipamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    salesbytendertypes_KiosktipamountLn.addView(salesbytendertypes_KiosktipamountLeftTv);

                    TextView salesbytendertypes_KiosktipamountMiddleTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KiosktipamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_KiosktipamountMiddleTv.setText("Tip Amount");
                    salesbytendertypes_KiosktipamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KiosktipamountMiddleTv);
                    salesbytendertypes_KiosktipamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesbytendertypes_KiosktipamountLn.addView(salesbytendertypes_KiosktipamountMiddleTv);

                    TextView salesbytendertypes_KiosktipamountRightTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KiosktipamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salesbytendertypes_KiosktipamountRightTv.setText(kioskdata_tipamount);
                    salesbytendertypes_KiosktipamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KiosktipamountRightTv);
                    salesbytendertypes_KiosktipamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    salesbytendertypes_KiosktipamountLn.addView(salesbytendertypes_KiosktipamountRightTv);

                    printingLn.addView(salesbytendertypes_KiosktipamountLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // salesbytendertypes_Kiosktotalamount ----------------------------------------------------------------------------------------------------
                    LinearLayout salesbytendertypes_KiosktotalamountLn = new LinearLayout(MainActivity.mContext);
                    salesbytendertypes_KiosktotalamountLn.setLayoutParams(matchParentParams);
                    salesbytendertypes_KiosktotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salesbytendertypes_KiosktotalamountLeftTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KiosktotalamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_KiosktotalamountLeftTv.setText("");
                    salesbytendertypes_KiosktotalamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KiosktotalamountLeftTv);
                    salesbytendertypes_KiosktotalamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    salesbytendertypes_KiosktotalamountLn.addView(salesbytendertypes_KiosktotalamountLeftTv);

                    TextView salesbytendertypes_KiosktotalamountMiddleTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KiosktotalamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_KiosktotalamountMiddleTv.setText("Total Amount");
                    salesbytendertypes_KiosktotalamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KiosktotalamountMiddleTv);
                    salesbytendertypes_KiosktotalamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesbytendertypes_KiosktotalamountLn.addView(salesbytendertypes_KiosktotalamountMiddleTv);

                    TextView salesbytendertypes_KiosktotalamountRightTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_KiosktotalamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salesbytendertypes_KiosktotalamountRightTv.setText(kioskdata_totalamount);
                    salesbytendertypes_KiosktotalamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_KiosktotalamountRightTv);
                    salesbytendertypes_KiosktotalamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    salesbytendertypes_KiosktotalamountLn.addView(salesbytendertypes_KiosktotalamountRightTv);

                    printingLn.addView(salesbytendertypes_KiosktotalamountLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // online 시작 ----------------------------------------------------------------------------------------------------------------------
                    // online 타이틀 ----------------------------------------------------------------------------------------------------
                    LinearLayout salesbytendertypesonlineTitleLn = new LinearLayout(MainActivity.mContext);
                    salesbytendertypesonlineTitleLn.setLayoutParams(matchParentParams);
                    salesbytendertypesonlineTitleLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salesbytendertypesonlineTitleLeftTv = new TextView(MainActivity.mContext);
                    salesbytendertypesonlineTitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypesonlineTitleLeftTv.setText("Online");
                    salesbytendertypesonlineTitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypesonlineTitleLeftTv);
                    salesbytendertypesonlineTitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesbytendertypesonlineTitleLn.addView(salesbytendertypesonlineTitleLeftTv);

                    TextView salesbytendertypesonlineTitleRightTv = new TextView(MainActivity.mContext);
                    salesbytendertypesonlineTitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salesbytendertypesonlineTitleRightTv.setText("");
                    salesbytendertypesonlineTitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypesonlineTitleRightTv);
                    salesbytendertypesonlineTitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    salesbytendertypesonlineTitleLn.addView(salesbytendertypesonlineTitleRightTv);

                    printingLn.addView(salesbytendertypesonlineTitleLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // salesbytendertypes_onlinetransactions ----------------------------------------------------------------------------------------------------
                    LinearLayout salesbytendertypes_onlinetransactionsLn = new LinearLayout(MainActivity.mContext);
                    salesbytendertypes_onlinetransactionsLn.setLayoutParams(matchParentParams);
                    salesbytendertypes_onlinetransactionsLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salesbytendertypes_onlinetransactionsLeftTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlinetransactionsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_onlinetransactionsLeftTv.setText("");
                    salesbytendertypes_onlinetransactionsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlinetransactionsLeftTv);
                    salesbytendertypes_onlinetransactionsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    salesbytendertypes_onlinetransactionsLn.addView(salesbytendertypes_onlinetransactionsLeftTv);

                    TextView salesbytendertypes_onlinetransactionsMiddleTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlinetransactionsMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_onlinetransactionsMiddleTv.setText("Transactions");
                    salesbytendertypes_onlinetransactionsMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlinetransactionsMiddleTv);
                    salesbytendertypes_onlinetransactionsMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesbytendertypes_onlinetransactionsLn.addView(salesbytendertypes_onlinetransactionsMiddleTv);

                    TextView salesbytendertypes_onlinetransactionsRightTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlinetransactionsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salesbytendertypes_onlinetransactionsRightTv.setText(onlinedata_transactions);
                    salesbytendertypes_onlinetransactionsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlinetransactionsRightTv);
                    salesbytendertypes_onlinetransactionsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    salesbytendertypes_onlinetransactionsLn.addView(salesbytendertypes_onlinetransactionsRightTv);

                    printingLn.addView(salesbytendertypes_onlinetransactionsLn);
                    // --------------------------------------------------------------------------------------------------------------------
                    // salesbytendertypes_onlineSalesTotal ----------------------------------------------------------------------------------------------------
                    LinearLayout salesbytendertypes_onlineSalesTotalLn = new LinearLayout(MainActivity.mContext);
                    salesbytendertypes_onlineSalesTotalLn.setLayoutParams(matchParentParams);
                    salesbytendertypes_onlineSalesTotalLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salesbytendertypes_onlineSalesTotalLeftTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlineSalesTotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_onlineSalesTotalLeftTv.setText("");
                    salesbytendertypes_onlineSalesTotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlineSalesTotalLeftTv);
                    salesbytendertypes_onlineSalesTotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    salesbytendertypes_onlineSalesTotalLn.addView(salesbytendertypes_onlineSalesTotalLeftTv);

                    TextView salesbytendertypes_onlineSalesTotalMiddleTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlineSalesTotalMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_onlineSalesTotalMiddleTv.setText("Sales Total");
                    salesbytendertypes_onlineSalesTotalMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlineSalesTotalMiddleTv);
                    salesbytendertypes_onlineSalesTotalMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesbytendertypes_onlineSalesTotalLn.addView(salesbytendertypes_onlineSalesTotalMiddleTv);

                    TextView salesbytendertypes_onlineSalesTotalRightTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlineSalesTotalRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salesbytendertypes_onlineSalesTotalRightTv.setText(onlinedata_salestotal);
                    salesbytendertypes_onlineSalesTotalRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlineSalesTotalRightTv);
                    salesbytendertypes_onlineSalesTotalRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    salesbytendertypes_onlineSalesTotalLn.addView(salesbytendertypes_onlineSalesTotalRightTv);

                    printingLn.addView(salesbytendertypes_onlineSalesTotalLn);
                    // --------------------------------------------------------------------------------------------------------------------
                    // salesbytendertypes_onlinerefund ----------------------------------------------------------------------------------------------------
                    LinearLayout salesbytendertypes_onlinerefundLn = new LinearLayout(MainActivity.mContext);
                    salesbytendertypes_onlinerefundLn.setLayoutParams(matchParentParams);
                    salesbytendertypes_onlinerefundLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salesbytendertypes_onlinerefundLeftTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlinerefundLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_onlinerefundLeftTv.setText("");
                    salesbytendertypes_onlinerefundLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlinerefundLeftTv);
                    salesbytendertypes_onlinerefundLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    salesbytendertypes_onlinerefundLn.addView(salesbytendertypes_onlinerefundLeftTv);

                    TextView salesbytendertypes_onlinerefundMiddleTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlinerefundMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_onlinerefundMiddleTv.setText("Refund");
                    salesbytendertypes_onlinerefundMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlinerefundMiddleTv);
                    salesbytendertypes_onlinerefundMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesbytendertypes_onlinerefundLn.addView(salesbytendertypes_onlinerefundMiddleTv);

                    TextView salesbytendertypes_onlinerefundRightTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlinerefundRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salesbytendertypes_onlinerefundRightTv.setText(onlinedata_refund);
                    salesbytendertypes_onlinerefundRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlinerefundRightTv);
                    salesbytendertypes_onlinerefundRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    salesbytendertypes_onlinerefundLn.addView(salesbytendertypes_onlinerefundRightTv);

                    printingLn.addView(salesbytendertypes_onlinerefundLn);
                    // --------------------------------------------------------------------------------------------------------------------
                    // salesbytendertypes_onlinetipamount ----------------------------------------------------------------------------------------------------
                    LinearLayout salesbytendertypes_onlinetipamountLn = new LinearLayout(MainActivity.mContext);
                    salesbytendertypes_onlinetipamountLn.setLayoutParams(matchParentParams);
                    salesbytendertypes_onlinetipamountLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salesbytendertypes_onlinetipamountLeftTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlinetipamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_onlinetipamountLeftTv.setText("");
                    salesbytendertypes_onlinetipamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlinetipamountLeftTv);
                    salesbytendertypes_onlinetipamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    salesbytendertypes_onlinetipamountLn.addView(salesbytendertypes_onlinetipamountLeftTv);

                    TextView salesbytendertypes_onlinetipamountMiddleTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlinetipamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_onlinetipamountMiddleTv.setText("Tip Amount");
                    salesbytendertypes_onlinetipamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlinetipamountMiddleTv);
                    salesbytendertypes_onlinetipamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesbytendertypes_onlinetipamountLn.addView(salesbytendertypes_onlinetipamountMiddleTv);

                    TextView salesbytendertypes_onlinetipamountRightTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlinetipamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salesbytendertypes_onlinetipamountRightTv.setText(onlinedata_tipamount);
                    salesbytendertypes_onlinetipamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlinetipamountRightTv);
                    salesbytendertypes_onlinetipamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    salesbytendertypes_onlinetipamountLn.addView(salesbytendertypes_onlinetipamountRightTv);

                    printingLn.addView(salesbytendertypes_onlinetipamountLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // salesbytendertypes_onlinetotalamount ----------------------------------------------------------------------------------------------------
                    LinearLayout salesbytendertypes_onlinetotalamountLn = new LinearLayout(MainActivity.mContext);
                    salesbytendertypes_onlinetotalamountLn.setLayoutParams(matchParentParams);
                    salesbytendertypes_onlinetotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView salesbytendertypes_onlinetotalamountLeftTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlinetotalamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_onlinetotalamountLeftTv.setText("");
                    salesbytendertypes_onlinetotalamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlinetotalamountLeftTv);
                    salesbytendertypes_onlinetotalamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    salesbytendertypes_onlinetotalamountLn.addView(salesbytendertypes_onlinetotalamountLeftTv);

                    TextView salesbytendertypes_onlinetotalamountMiddleTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlinetotalamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    salesbytendertypes_onlinetotalamountMiddleTv.setText("Total Amount");
                    salesbytendertypes_onlinetotalamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlinetotalamountMiddleTv);
                    salesbytendertypes_onlinetotalamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesbytendertypes_onlinetotalamountLn.addView(salesbytendertypes_onlinetotalamountMiddleTv);

                    TextView salesbytendertypes_onlinetotalamountRightTv = new TextView(MainActivity.mContext);
                    salesbytendertypes_onlinetotalamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    salesbytendertypes_onlinetotalamountRightTv.setText(onlinedata_totalamount);
                    salesbytendertypes_onlinetotalamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_onlinetotalamountRightTv);
                    salesbytendertypes_onlinetotalamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    salesbytendertypes_onlinetotalamountLn.addView(salesbytendertypes_onlinetotalamountRightTv);

                    printingLn.addView(salesbytendertypes_onlinetotalamountLn);
                    // --------------------------------------------------------------------------------------------------------------------

                }







                // 10112023 ------------------------------------------------------------------------------------------------------------
                GlobalMemberValues.logWrite("tpdatalogjjj", "thirdparty_data : " + thirdparty_data + "\n");
                if (!GlobalMemberValues.isStrEmpty(thirdparty_data)) {
                    JSONObject thirdparty_json = null;
                    try {
                        thirdparty_json = new JSONObject(thirdparty_data);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

                    String tp_name = "";
                    String tp_transactions = "";
                    String tp_salestotal = "";
                    String tp_refund = "";
                    String tp_tipamount = "";
                    String tp_totalamount = "";

                    String tp_datas = "";

                    String thirdpartydatas = GlobalMemberValues.getDataInJsonData(thirdparty_json, "thirdpartynames");

                    GlobalMemberValues.logWrite("tpdatalogjjj", "thirdpartydatas : " + thirdpartydatas + "\n");

                    String[] tpname_spt = thirdpartydatas.split("-tpjjj");
                    for (int i = 0; i < tpname_spt.length; i++) {
                        String tpname = tpname_spt[i];

                        GlobalMemberValues.logWrite("tpdatalogjjj", "tpname : " + tpname + "\n");

                        tp_datas = GlobalMemberValues.getDataInJsonData(thirdparty_json, tpname);

                        GlobalMemberValues.logWrite("tpdatalogjjj", "tp_datas : " + tp_datas + "\n");


                        if (!GlobalMemberValues.isStrEmpty(tp_datas)) {
                            String[] tp_datas_spt = tp_datas.split("-J3-");

                            tp_transactions = tp_datas_spt[0];
                            tp_salestotal = tp_datas_spt[1];
                            tp_refund = tp_datas_spt[2];
                            tp_tipamount = tp_datas_spt[3];
                            tp_totalamount = tp_datas_spt[4];

                            // online 타이틀 ----------------------------------------------------------------------------------------------------
                            LinearLayout thirdpartyTitleLn = new LinearLayout(MainActivity.mContext);
                            thirdpartyTitleLn.setLayoutParams(matchParentParams);
                            thirdpartyTitleLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView thirdpartyTitleLeftTv = new TextView(MainActivity.mContext);
                            thirdpartyTitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            thirdpartyTitleLeftTv.setText(tpname.toUpperCase());
                            thirdpartyTitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(thirdpartyTitleLeftTv);
                            thirdpartyTitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            thirdpartyTitleLn.addView(thirdpartyTitleLeftTv);

                            TextView thirdpartyTitleRightTv = new TextView(MainActivity.mContext);
                            thirdpartyTitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            thirdpartyTitleRightTv.setText("");
                            thirdpartyTitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(thirdpartyTitleRightTv);
                            thirdpartyTitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            thirdpartyTitleLn.addView(thirdpartyTitleRightTv);

                            printingLn.addView(thirdpartyTitleLn);
                            // --------------------------------------------------------------------------------------------------------------------

                            // salesbytendertypes_onlinetransactions ----------------------------------------------------------------------------------------------------
                            LinearLayout thirdpartytransactionsLn = new LinearLayout(MainActivity.mContext);
                            thirdpartytransactionsLn.setLayoutParams(matchParentParams);
                            thirdpartytransactionsLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView thirdpartytransactionsLeftTv = new TextView(MainActivity.mContext);
                            thirdpartytransactionsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            thirdpartytransactionsLeftTv.setText("");
                            thirdpartytransactionsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(thirdpartytransactionsLeftTv);
                            thirdpartytransactionsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                            thirdpartytransactionsLn.addView(thirdpartytransactionsLeftTv);

                            TextView thirdpartytransactionsMiddleTv = new TextView(MainActivity.mContext);
                            thirdpartytransactionsMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            thirdpartytransactionsMiddleTv.setText("Transactions");
                            thirdpartytransactionsMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(thirdpartytransactionsMiddleTv);
                            thirdpartytransactionsMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            thirdpartytransactionsLn.addView(thirdpartytransactionsMiddleTv);

                            TextView thirdpartytransactionsRightTv = new TextView(MainActivity.mContext);
                            thirdpartytransactionsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            thirdpartytransactionsRightTv.setText(tp_transactions);
                            thirdpartytransactionsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(thirdpartytransactionsRightTv);
                            thirdpartytransactionsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                            thirdpartytransactionsLn.addView(thirdpartytransactionsRightTv);

                            printingLn.addView(thirdpartytransactionsLn);
                            // --------------------------------------------------------------------------------------------------------------------

//                                // thirdpartySalesTotal ----------------------------------------------------------------------------------------------------
//                                LinearLayout thirdpartySalesTotalLn = new LinearLayout(MainActivity.mContext);
//                                thirdpartySalesTotalLn.setLayoutParams(matchParentParams);
//                                thirdpartySalesTotalLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                                TextView thirdpartySalesTotalLeftTv = new TextView(MainActivity.mContext);
//                                thirdpartySalesTotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                                thirdpartySalesTotalLeftTv.setText("");
//                                thirdpartySalesTotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                                GlobalMemberValues.setTextStyleOnClover(thirdpartySalesTotalLeftTv);
//                                thirdpartySalesTotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
//                                thirdpartySalesTotalLn.addView(thirdpartySalesTotalLeftTv);
//
//                                TextView thirdpartySalesTotalMiddleTv = new TextView(MainActivity.mContext);
//                                thirdpartySalesTotalMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                                thirdpartySalesTotalMiddleTv.setText("Sales Total");
//                                thirdpartySalesTotalMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                                GlobalMemberValues.setTextStyleOnClover(thirdpartySalesTotalMiddleTv);
//                                thirdpartySalesTotalMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                                thirdpartySalesTotalLn.addView(thirdpartySalesTotalMiddleTv);
//
//                                TextView thirdpartySalesTotalRightTv = new TextView(MainActivity.mContext);
//                                thirdpartySalesTotalRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
//                                thirdpartySalesTotalRightTv.setText(tp_salestotal);
//                                thirdpartySalesTotalRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                                GlobalMemberValues.setTextStyleOnClover(thirdpartySalesTotalRightTv);
//                                thirdpartySalesTotalRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
//                                thirdpartySalesTotalLn.addView(thirdpartySalesTotalRightTv);
//
//                                printingLn.addView(thirdpartySalesTotalLn);
//                                // --------------------------------------------------------------------------------------------------------------------
//                                // thirdpartyrefund ----------------------------------------------------------------------------------------------------
//                                LinearLayout thirdpartyrefundLn = new LinearLayout(MainActivity.mContext);
//                                thirdpartyrefundLn.setLayoutParams(matchParentParams);
//                                thirdpartyrefundLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                                TextView thirdpartyrefundLeftTv = new TextView(MainActivity.mContext);
//                                thirdpartyrefundLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                                thirdpartyrefundLeftTv.setText("");
//                                thirdpartyrefundLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                                GlobalMemberValues.setTextStyleOnClover(thirdpartyrefundLeftTv);
//                                thirdpartyrefundLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
//                                thirdpartyrefundLn.addView(thirdpartyrefundLeftTv);
//
//                                TextView thirdpartyrefundMiddleTv = new TextView(MainActivity.mContext);
//                                thirdpartyrefundMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                                thirdpartyrefundMiddleTv.setText("Refund");
//                                thirdpartyrefundMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                                GlobalMemberValues.setTextStyleOnClover(thirdpartyrefundMiddleTv);
//                                thirdpartyrefundMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                                thirdpartyrefundLn.addView(thirdpartyrefundMiddleTv);
//
//                                TextView thirdpartyrefundRightTv = new TextView(MainActivity.mContext);
//                                thirdpartyrefundRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
//                                thirdpartyrefundRightTv.setText(tp_refund);
//                                thirdpartyrefundRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                                GlobalMemberValues.setTextStyleOnClover(thirdpartyrefundRightTv);
//                                thirdpartyrefundRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
//                                thirdpartyrefundLn.addView(thirdpartyrefundRightTv);
//
//                                printingLn.addView(thirdpartyrefundLn);
//                                // --------------------------------------------------------------------------------------------------------------------
//                                // thirdpartytipamount ----------------------------------------------------------------------------------------------------
//                                LinearLayout thirdpartytipamountLn = new LinearLayout(MainActivity.mContext);
//                                thirdpartytipamountLn.setLayoutParams(matchParentParams);
//                                thirdpartytipamountLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                                TextView thirdpartytipamountLeftTv = new TextView(MainActivity.mContext);
//                                thirdpartytipamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                                thirdpartytipamountLeftTv.setText("");
//                                thirdpartytipamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                                GlobalMemberValues.setTextStyleOnClover(thirdpartytipamountLeftTv);
//                                thirdpartytipamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
//                                thirdpartytipamountLn.addView(thirdpartytipamountLeftTv);
//
//                                TextView thirdpartytipamountMiddleTv = new TextView(MainActivity.mContext);
//                                thirdpartytipamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                                thirdpartytipamountMiddleTv.setText("Tip Amount");
//                                thirdpartytipamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                                GlobalMemberValues.setTextStyleOnClover(thirdpartytipamountMiddleTv);
//                                thirdpartytipamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                                thirdpartytipamountLn.addView(thirdpartytipamountMiddleTv);
//
//                                TextView thirdpartytipamountRightTv = new TextView(MainActivity.mContext);
//                                thirdpartytipamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
//                                thirdpartytipamountRightTv.setText(tp_tipamount);
//                                thirdpartytipamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                                GlobalMemberValues.setTextStyleOnClover(thirdpartytipamountRightTv);
//                                thirdpartytipamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
//                                thirdpartytipamountLn.addView(thirdpartytipamountRightTv);
//
//                                printingLn.addView(thirdpartytipamountLn);
//                                // --------------------------------------------------------------------------------------------------------------------

                            // thirdpartytotalamount ----------------------------------------------------------------------------------------------------
                            LinearLayout thirdpartytotalamountLn = new LinearLayout(MainActivity.mContext);
                            thirdpartytotalamountLn.setLayoutParams(matchParentParams);
                            thirdpartytotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView thirdpartytotalamountLeftTv = new TextView(MainActivity.mContext);
                            thirdpartytotalamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            thirdpartytotalamountLeftTv.setText("");
                            thirdpartytotalamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(thirdpartytotalamountLeftTv);
                            thirdpartytotalamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                            thirdpartytotalamountLn.addView(thirdpartytotalamountLeftTv);

                            TextView thirdpartytotalamountMiddleTv = new TextView(MainActivity.mContext);
                            thirdpartytotalamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            thirdpartytotalamountMiddleTv.setText("Total Amount");
                            thirdpartytotalamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(thirdpartytotalamountMiddleTv);
                            thirdpartytotalamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            thirdpartytotalamountLn.addView(thirdpartytotalamountMiddleTv);

                            TextView thirdpartytotalamountRightTv = new TextView(MainActivity.mContext);
                            thirdpartytotalamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            thirdpartytotalamountRightTv.setText(tp_totalamount);
                            thirdpartytotalamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(thirdpartytotalamountRightTv);
                            thirdpartytotalamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                            thirdpartytotalamountLn.addView(thirdpartytotalamountRightTv);

                            printingLn.addView(thirdpartytotalamountLn);
                            // --------------------------------------------------------------------------------------------------------------------

                            thirdparty_trans_total += GlobalMemberValues.getIntAtString(tp_transactions);
                            thirdparty_totalamount += GlobalMemberValues.getDoubleAtString(tp_totalamount);
                        }
                    }
                }
                // 10112023 ------------------------------------------------------------------------------------------------------------









                // Points 시작 ----------------------------------------------------------------------------------------------------------------------
                // Points 타이틀 ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypespointsTitleLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypespointsTitleLn.setLayoutParams(matchParentParams);
                salesbytendertypespointsTitleLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypespointsTitleLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypespointsTitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypespointsTitleLeftTv.setText("Points");
                salesbytendertypespointsTitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypespointsTitleLeftTv);
                salesbytendertypespointsTitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypespointsTitleLn.addView(salesbytendertypespointsTitleLeftTv);

                TextView salesbytendertypespointsTitleRightTv = new TextView(MainActivity.mContext);
                salesbytendertypespointsTitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypespointsTitleRightTv.setText("");
                salesbytendertypespointsTitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypespointsTitleRightTv);
                salesbytendertypespointsTitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salesbytendertypespointsTitleLn.addView(salesbytendertypespointsTitleRightTv);

                printingLn.addView(salesbytendertypespointsTitleLn);
                // --------------------------------------------------------------------------------------------------------------------

                // salesbytendertypes_pointstransactions ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypes_pointstransactionsLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypes_pointstransactionsLn.setLayoutParams(matchParentParams);
                salesbytendertypes_pointstransactionsLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypes_pointstransactionsLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypes_pointstransactionsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_pointstransactionsLeftTv.setText("");
                salesbytendertypes_pointstransactionsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_pointstransactionsLeftTv);
                salesbytendertypes_pointstransactionsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                salesbytendertypes_pointstransactionsLn.addView(salesbytendertypes_pointstransactionsLeftTv);

                TextView salesbytendertypes_pointstransactionsMiddleTv = new TextView(MainActivity.mContext);
                salesbytendertypes_pointstransactionsMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_pointstransactionsMiddleTv.setText("Transactions");
                salesbytendertypes_pointstransactionsMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_pointstransactionsMiddleTv);
                salesbytendertypes_pointstransactionsMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypes_pointstransactionsLn.addView(salesbytendertypes_pointstransactionsMiddleTv);

                TextView salesbytendertypes_pointstransactionsRightTv = new TextView(MainActivity.mContext);
                salesbytendertypes_pointstransactionsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypes_pointstransactionsRightTv.setText(salesbytendertypes_pointstransactions);
                salesbytendertypes_pointstransactionsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_pointstransactionsRightTv);
                salesbytendertypes_pointstransactionsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                salesbytendertypes_pointstransactionsLn.addView(salesbytendertypes_pointstransactionsRightTv);

                printingLn.addView(salesbytendertypes_pointstransactionsLn);
                // --------------------------------------------------------------------------------------------------------------------


                // salesbytendertypes_pointstotalamount ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypes_pointstotalamountLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypes_pointstotalamountLn.setLayoutParams(matchParentParams);
                salesbytendertypes_pointstotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypes_pointstotalamountLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypes_pointstotalamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_pointstotalamountLeftTv.setText("");
                salesbytendertypes_pointstotalamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_pointstotalamountLeftTv);
                salesbytendertypes_pointstotalamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                salesbytendertypes_pointstotalamountLn.addView(salesbytendertypes_pointstotalamountLeftTv);

                TextView salesbytendertypes_pointstotalamountMiddleTv = new TextView(MainActivity.mContext);
                salesbytendertypes_pointstotalamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_pointstotalamountMiddleTv.setText("Total Amount");
                salesbytendertypes_pointstotalamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_pointstotalamountMiddleTv);
                salesbytendertypes_pointstotalamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypes_pointstotalamountLn.addView(salesbytendertypes_pointstotalamountMiddleTv);

                TextView salesbytendertypes_pointstotalamountRightTv = new TextView(MainActivity.mContext);
                salesbytendertypes_pointstotalamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypes_pointstotalamountRightTv.setText(salesbytendertypes_pointstotalamount);
                salesbytendertypes_pointstotalamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_pointstotalamountRightTv);
                salesbytendertypes_pointstotalamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                salesbytendertypes_pointstotalamountLn.addView(salesbytendertypes_pointstotalamountRightTv);

                printingLn.addView(salesbytendertypes_pointstotalamountLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Points 끝 ----------------------------------------------------------------------------------------------------------------------



                // Others 시작 ----------------------------------------------------------------------------------------------------------------------
                // Others 타이틀 ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypesothersTitleLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypesothersTitleLn.setLayoutParams(matchParentParams);
                salesbytendertypesothersTitleLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypesothersTitleLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypesothersTitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypesothersTitleLeftTv.setText("Others");
                salesbytendertypesothersTitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypesothersTitleLeftTv);
                salesbytendertypesothersTitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypesothersTitleLn.addView(salesbytendertypesothersTitleLeftTv);

                TextView salesbytendertypesothersTitleRightTv = new TextView(MainActivity.mContext);
                salesbytendertypesothersTitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypesothersTitleRightTv.setText("");
                salesbytendertypesothersTitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypesothersTitleRightTv);
                salesbytendertypesothersTitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salesbytendertypesothersTitleLn.addView(salesbytendertypesothersTitleRightTv);

                printingLn.addView(salesbytendertypesothersTitleLn);
                // --------------------------------------------------------------------------------------------------------------------

                // salesbytendertypes_otherstransactions ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypes_otherstransactionsLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypes_otherstransactionsLn.setLayoutParams(matchParentParams);
                salesbytendertypes_otherstransactionsLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypes_otherstransactionsLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypes_otherstransactionsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_otherstransactionsLeftTv.setText("");
                salesbytendertypes_otherstransactionsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_otherstransactionsLeftTv);
                salesbytendertypes_otherstransactionsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                salesbytendertypes_otherstransactionsLn.addView(salesbytendertypes_otherstransactionsLeftTv);

                TextView salesbytendertypes_otherstransactionsMiddleTv = new TextView(MainActivity.mContext);
                salesbytendertypes_otherstransactionsMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_otherstransactionsMiddleTv.setText("Transactions");
                salesbytendertypes_otherstransactionsMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_otherstransactionsMiddleTv);
                salesbytendertypes_otherstransactionsMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypes_otherstransactionsLn.addView(salesbytendertypes_otherstransactionsMiddleTv);

                TextView salesbytendertypes_otherstransactionsRightTv = new TextView(MainActivity.mContext);
                salesbytendertypes_otherstransactionsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypes_otherstransactionsRightTv.setText(salesbytendertypes_otherstransactions);
                salesbytendertypes_otherstransactionsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_otherstransactionsRightTv);
                salesbytendertypes_otherstransactionsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                salesbytendertypes_otherstransactionsLn.addView(salesbytendertypes_otherstransactionsRightTv);

                printingLn.addView(salesbytendertypes_otherstransactionsLn);
                // --------------------------------------------------------------------------------------------------------------------


                // salesbytendertypes_otherstotalamount ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypes_otherstotalamountLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypes_otherstotalamountLn.setLayoutParams(matchParentParams);
                salesbytendertypes_otherstotalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypes_otherstotalamountLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypes_otherstotalamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_otherstotalamountLeftTv.setText("");
                salesbytendertypes_otherstotalamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_otherstotalamountLeftTv);
                salesbytendertypes_otherstotalamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                salesbytendertypes_otherstotalamountLn.addView(salesbytendertypes_otherstotalamountLeftTv);

                TextView salesbytendertypes_otherstotalamountMiddleTv = new TextView(MainActivity.mContext);
                salesbytendertypes_otherstotalamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_otherstotalamountMiddleTv.setText("Total Amount");
                salesbytendertypes_otherstotalamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_otherstotalamountMiddleTv);
                salesbytendertypes_otherstotalamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypes_otherstotalamountLn.addView(salesbytendertypes_otherstotalamountMiddleTv);

                TextView salesbytendertypes_otherstotalamountRightTv = new TextView(MainActivity.mContext);
                salesbytendertypes_otherstotalamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypes_otherstotalamountRightTv.setText(salesbytendertypes_otherstotalamount);
                salesbytendertypes_otherstotalamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_otherstotalamountRightTv);
                salesbytendertypes_otherstotalamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                salesbytendertypes_otherstotalamountLn.addView(salesbytendertypes_otherstotalamountRightTv);

                printingLn.addView(salesbytendertypes_otherstotalamountLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Others 끝 ----------------------------------------------------------------------------------------------------------------------


                // 10112023
                int temp_totaltrans = GlobalMemberValues.getIntAtString(salesbytendertypes_totaltransaction) + thirdparty_trans_total;
                double temp_totalamount = GlobalMemberValues.getDoubleAtString(salesbytendertypes_totalamount) + thirdparty_totalamount;
                salesbytendertypes_totaltransaction = GlobalMemberValues.getCommaStringForInteger(temp_totaltrans + "");
                salesbytendertypes_totalamount = GlobalMemberValues.getCommaStringForDouble(temp_totalamount + "");



                // Total 시작 ----------------------------------------------------------------------------------------------------------------------
                // Total 타이틀 ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypestotalTitleLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypestotalTitleLn.setLayoutParams(matchParentParams);
                salesbytendertypestotalTitleLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypestotalTitleLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypestotalTitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypestotalTitleLeftTv.setText("Total");
                salesbytendertypestotalTitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypestotalTitleLeftTv);
                salesbytendertypestotalTitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypestotalTitleLn.addView(salesbytendertypestotalTitleLeftTv);

                TextView salesbytendertypestotalTitleRightTv = new TextView(MainActivity.mContext);
                salesbytendertypestotalTitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypestotalTitleRightTv.setText("");
                salesbytendertypestotalTitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypestotalTitleRightTv);
                salesbytendertypestotalTitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                salesbytendertypestotalTitleLn.addView(salesbytendertypestotalTitleRightTv);

                printingLn.addView(salesbytendertypestotalTitleLn);
                // --------------------------------------------------------------------------------------------------------------------

                // salesbytendertypes_totaltransaction ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypes_totaltransactionLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypes_totaltransactionLn.setLayoutParams(matchParentParams);
                salesbytendertypes_totaltransactionLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypes_totaltransactionLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypes_totaltransactionLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_totaltransactionLeftTv.setText("");
                salesbytendertypes_totaltransactionLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_totaltransactionLeftTv);
                salesbytendertypes_totaltransactionLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                salesbytendertypes_totaltransactionLn.addView(salesbytendertypes_totaltransactionLeftTv);

                TextView salesbytendertypes_totaltransactionMiddleTv = new TextView(MainActivity.mContext);
                salesbytendertypes_totaltransactionMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_totaltransactionMiddleTv.setText("Transactions");
                salesbytendertypes_totaltransactionMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_totaltransactionMiddleTv);
                salesbytendertypes_totaltransactionMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypes_totaltransactionLn.addView(salesbytendertypes_totaltransactionMiddleTv);

                TextView salesbytendertypes_totaltransactionRightTv = new TextView(MainActivity.mContext);
                salesbytendertypes_totaltransactionRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypes_totaltransactionRightTv.setText(salesbytendertypes_totaltransaction);
                salesbytendertypes_totaltransactionRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_totaltransactionRightTv);
                salesbytendertypes_totaltransactionRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                salesbytendertypes_totaltransactionLn.addView(salesbytendertypes_totaltransactionRightTv);

                printingLn.addView(salesbytendertypes_totaltransactionLn);
                // --------------------------------------------------------------------------------------------------------------------


                // salesbytendertypes_totalamount ----------------------------------------------------------------------------------------------------
                LinearLayout salesbytendertypes_totalamountLn = new LinearLayout(MainActivity.mContext);
                salesbytendertypes_totalamountLn.setLayoutParams(matchParentParams);
                salesbytendertypes_totalamountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView salesbytendertypes_totalamountLeftTv = new TextView(MainActivity.mContext);
                salesbytendertypes_totalamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_totalamountLeftTv.setText("");
                salesbytendertypes_totalamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_totalamountLeftTv);
                salesbytendertypes_totalamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                salesbytendertypes_totalamountLn.addView(salesbytendertypes_totalamountLeftTv);

                TextView salesbytendertypes_totalamountMiddleTv = new TextView(MainActivity.mContext);
                salesbytendertypes_totalamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                salesbytendertypes_totalamountMiddleTv.setText("Total Amount");
                salesbytendertypes_totalamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_totalamountMiddleTv);
                salesbytendertypes_totalamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                salesbytendertypes_totalamountLn.addView(salesbytendertypes_totalamountMiddleTv);

                TextView salesbytendertypes_totalamountRightTv = new TextView(MainActivity.mContext);
                salesbytendertypes_totalamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                salesbytendertypes_totalamountRightTv.setText(salesbytendertypes_totalamount);
                salesbytendertypes_totalamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(salesbytendertypes_totalamountRightTv);
                salesbytendertypes_totalamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                salesbytendertypes_totalamountLn.addView(salesbytendertypes_totalamountRightTv);

                printingLn.addView(salesbytendertypes_totalamountLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Total 끝 ----------------------------------------------------------------------------------------------------------------------

                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                /** Sales by Tender Types 끝 ******************************************************************************************************************/



                if (GlobalMemberValues.isCashoutreportPrintingByItemsNum("<1>")){
                    /** Cash Summary Details 시작 ******************************************************************************************************************/
                    // Cash Summary Details 타이틀 -----------------------------------------------------------------------------------------------------
                    TextView cashsummarydetailsTv = new TextView(MainActivity.mContext);
                    cashsummarydetailsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                    cashsummarydetailsTv.setGravity(Gravity.CENTER);
                    cashsummarydetailsTv.setText("Cash Summary Details");
                    cashsummarydetailsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    GlobalMemberValues.setTextStyleOnClover(cashsummarydetailsTv);
                    printingLn.addView(cashsummarydetailsTv);
                    // --------------------------------------------------------------------------------------------------------------------

                    // Cash Transactions ----------------------------------------------------------------------------------------------------
                    LinearLayout cashsummarydetails_cashtransactionsLn = new LinearLayout(MainActivity.mContext);
                    cashsummarydetails_cashtransactionsLn.setLayoutParams(matchParentParams);
                    cashsummarydetails_cashtransactionsLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cashsummarydetails_cashtransactionsLeftTv = new TextView(MainActivity.mContext);
                    cashsummarydetails_cashtransactionsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cashsummarydetails_cashtransactionsLeftTv.setText("Cash Transactions");
                    cashsummarydetails_cashtransactionsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashsummarydetails_cashtransactionsLeftTv);
                    cashsummarydetails_cashtransactionsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cashsummarydetails_cashtransactionsLn.addView(cashsummarydetails_cashtransactionsLeftTv);

                    TextView cashsummarydetails_cashtransactionsRightTv = new TextView(MainActivity.mContext);
                    cashsummarydetails_cashtransactionsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cashsummarydetails_cashtransactionsRightTv.setText(cashsummarydetails_cashtransactions);
                    cashsummarydetails_cashtransactionsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashsummarydetails_cashtransactionsRightTv);
                    cashsummarydetails_cashtransactionsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    cashsummarydetails_cashtransactionsLn.addView(cashsummarydetails_cashtransactionsRightTv);

                    printingLn.addView(cashsummarydetails_cashtransactionsLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // Cash Sales ----------------------------------------------------------------------------------------------------
                    LinearLayout cashsummarydetails_cashsalesLn = new LinearLayout(MainActivity.mContext);
                    cashsummarydetails_cashsalesLn.setLayoutParams(matchParentParams);
                    cashsummarydetails_cashsalesLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cashsummarydetails_cashsalesLeftTv = new TextView(MainActivity.mContext);
                    cashsummarydetails_cashsalesLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cashsummarydetails_cashsalesLeftTv.setText("Cash Sales");
                    cashsummarydetails_cashsalesLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashsummarydetails_cashsalesLeftTv);
                    cashsummarydetails_cashsalesLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cashsummarydetails_cashsalesLn.addView(cashsummarydetails_cashsalesLeftTv);

                    TextView cashsummarydetails_cashsalesRightTv = new TextView(MainActivity.mContext);
                    cashsummarydetails_cashsalesRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cashsummarydetails_cashsalesRightTv.setText(cashsummarydetails_cashsales);
                    cashsummarydetails_cashsalesRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashsummarydetails_cashsalesRightTv);
                    cashsummarydetails_cashsalesRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    cashsummarydetails_cashsalesLn.addView(cashsummarydetails_cashsalesRightTv);

                    printingLn.addView(cashsummarydetails_cashsalesLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // Cash Refund ----------------------------------------------------------------------------------------------------
                    LinearLayout cashsummarydetails_cashrefundLn = new LinearLayout(MainActivity.mContext);
                    cashsummarydetails_cashrefundLn.setLayoutParams(matchParentParams);
                    cashsummarydetails_cashrefundLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cashsummarydetails_cashrefundLeftTv = new TextView(MainActivity.mContext);
                    cashsummarydetails_cashrefundLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cashsummarydetails_cashrefundLeftTv.setText("Cash Refund");
                    cashsummarydetails_cashrefundLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashsummarydetails_cashrefundLeftTv);
                    cashsummarydetails_cashrefundLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cashsummarydetails_cashrefundLn.addView(cashsummarydetails_cashrefundLeftTv);

                    TextView cashsummarydetails_cashrefundRightTv = new TextView(MainActivity.mContext);
                    cashsummarydetails_cashrefundRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cashsummarydetails_cashrefundRightTv.setText(cashsummarydetails_cashrefund);
                    cashsummarydetails_cashrefundRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashsummarydetails_cashrefundRightTv);
                    cashsummarydetails_cashrefundRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    cashsummarydetails_cashrefundLn.addView(cashsummarydetails_cashrefundRightTv);

                    printingLn.addView(cashsummarydetails_cashrefundLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // Others (Tip + Tax+ Fees) -------------------------------------------------------------------------------------------
                    LinearLayout cashsummarydetails_othersLn = new LinearLayout(MainActivity.mContext);
                    cashsummarydetails_othersLn.setLayoutParams(matchParentParams);
                    cashsummarydetails_othersLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cashsummarydetails_othersLeftTv = new TextView(MainActivity.mContext);
                    cashsummarydetails_othersLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cashsummarydetails_othersLeftTv.setText("Others (Tip + Tax+ Fees)");
                    cashsummarydetails_othersLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashsummarydetails_othersLeftTv);
                    cashsummarydetails_othersLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    cashsummarydetails_othersLn.addView(cashsummarydetails_othersLeftTv);

                    TextView cashsummarydetails_othersRightTv = new TextView(MainActivity.mContext);
                    cashsummarydetails_othersRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cashsummarydetails_othersRightTv.setText(cashsummarydetails_others);
                    cashsummarydetails_othersRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashsummarydetails_othersRightTv);
                    cashsummarydetails_othersRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cashsummarydetails_othersLn.addView(cashsummarydetails_othersRightTv);

                    printingLn.addView(cashsummarydetails_othersLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // Cash Total --------------------------------------------------------------------------------------------------------
                    LinearLayout cashsummarydetails_cashtotalLn = new LinearLayout(MainActivity.mContext);
                    cashsummarydetails_cashtotalLn.setLayoutParams(matchParentParams);
                    cashsummarydetails_cashtotalLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cashsummarydetails_cashtotalLeftTv = new TextView(MainActivity.mContext);
                    cashsummarydetails_cashtotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cashsummarydetails_cashtotalLeftTv.setText("Cash Total");
                    cashsummarydetails_cashtotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashsummarydetails_cashtotalLeftTv);
                    cashsummarydetails_cashtotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cashsummarydetails_cashtotalLn.addView(cashsummarydetails_cashtotalLeftTv);

                    TextView cashsummarydetails_cashtotalRightTv = new TextView(MainActivity.mContext);
                    cashsummarydetails_cashtotalRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cashsummarydetails_cashtotalRightTv.setText(cashsummarydetails_cashtotal);
                    cashsummarydetails_cashtotalRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashsummarydetails_cashtotalRightTv);
                    cashsummarydetails_cashtotalRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    cashsummarydetails_cashtotalLn.addView(cashsummarydetails_cashtotalRightTv);

                    printingLn.addView(cashsummarydetails_cashtotalLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    /** Cash Summary Details 끝 ********************************************************************************************************************/

                }

                if (GlobalMemberValues.isCashoutreportPrintingByItemsNum("<2>")){
                    /** Credit Card Merchant Settlement Details 시작 ***********************************************************************************************/
                    // Mastercard 타이틀 -----------------------------------------------------------------------------------------------------
                    TextView settlementdetailtitleTv = new TextView(MainActivity.mContext);
                    settlementdetailtitleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                    settlementdetailtitleTv.setGravity(Gravity.CENTER);
                    settlementdetailtitleTv.setText("Credit Card Settlement Details");
                    settlementdetailtitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    GlobalMemberValues.setTextStyleOnClover(settlementdetailtitleTv);
                    printingLn.addView(settlementdetailtitleTv);
                    // --------------------------------------------------------------------------------------------------------------------


                    // Mastercard 시작 ----------------------------------------------------------------------------------------------------------------------
                    // Mastercard 타이틀 ----------------------------------------------------------------------------------------------------
                    LinearLayout mastercardtitleLn = new LinearLayout(MainActivity.mContext);
                    mastercardtitleLn.setLayoutParams(matchParentParams);
                    mastercardtitleLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView mastercardtitleLeftTv = new TextView(MainActivity.mContext);
                    mastercardtitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    mastercardtitleLeftTv.setText("Mastercard");
                    mastercardtitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(mastercardtitleLeftTv);
                    mastercardtitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    mastercardtitleLn.addView(mastercardtitleLeftTv);

                    TextView mastercardtitleRightTv = new TextView(MainActivity.mContext);
                    mastercardtitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    mastercardtitleRightTv.setText("");
                    mastercardtitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(mastercardtitleRightTv);
                    mastercardtitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    mastercardtitleLn.addView(mastercardtitleRightTv);

                    printingLn.addView(mastercardtitleLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtransmaster ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtransmasterLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtransmasterLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtransmasterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtransmasterLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransmasterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtransmasterLeftTv.setText("");
                    cardsettlementdetail_cardtransmasterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransmasterLeftTv);
                    cardsettlementdetail_cardtransmasterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtransmasterLn.addView(cardsettlementdetail_cardtransmasterLeftTv);

                    TextView cardsettlementdetail_cardtransmasterMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransmasterMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtransmasterMiddleTv.setText("Transactions");
                    cardsettlementdetail_cardtransmasterMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransmasterMiddleTv);
                    cardsettlementdetail_cardtransmasterMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtransmasterLn.addView(cardsettlementdetail_cardtransmasterMiddleTv);

                    TextView cardsettlementdetail_cardtransmasterRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransmasterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtransmasterRightTv.setText(cardsettlementdetail_cardtransmaster);
                    cardsettlementdetail_cardtransmasterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransmasterRightTv);
                    cardsettlementdetail_cardtransmasterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtransmasterLn.addView(cardsettlementdetail_cardtransmasterRightTv);

                    printingLn.addView(cardsettlementdetail_cardtransmasterLn);
                    // --------------------------------------------------------------------------------------------------------------------


                    // cardsettlementdetail_cardsalesmaster ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardsalesmasterLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardsalesmasterLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardsalesmasterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardsalesmasterLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesmasterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardsalesmasterLeftTv.setText("");
                    cardsettlementdetail_cardsalesmasterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesmasterLeftTv);
                    cardsettlementdetail_cardsalesmasterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardsalesmasterLn.addView(cardsettlementdetail_cardsalesmasterLeftTv);

                    TextView cardsettlementdetail_cardsalesmasterMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesmasterMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardsalesmasterMiddleTv.setText("Sales Total");
                    cardsettlementdetail_cardsalesmasterMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesmasterMiddleTv);
                    cardsettlementdetail_cardsalesmasterMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardsalesmasterLn.addView(cardsettlementdetail_cardsalesmasterMiddleTv);

                    TextView cardsettlementdetail_cardsalesmasterRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesmasterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardsalesmasterRightTv.setText(cardsettlementdetail_cardsalesmaster);
                    cardsettlementdetail_cardsalesmasterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesmasterRightTv);
                    cardsettlementdetail_cardsalesmasterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardsalesmasterLn.addView(cardsettlementdetail_cardsalesmasterRightTv);

                    printingLn.addView(cardsettlementdetail_cardsalesmasterLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardrefundmaster ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardrefundmasterLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardrefundmasterLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardrefundmasterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardrefundmasterLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundmasterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardrefundmasterLeftTv.setText("");
                    cardsettlementdetail_cardrefundmasterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundmasterLeftTv);
                    cardsettlementdetail_cardrefundmasterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardrefundmasterLn.addView(cardsettlementdetail_cardrefundmasterLeftTv);

                    TextView cardsettlementdetail_cardrefundmasterMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundmasterMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardrefundmasterMiddleTv.setText("Refunds");
                    cardsettlementdetail_cardrefundmasterMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundmasterMiddleTv);
                    cardsettlementdetail_cardrefundmasterMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardrefundmasterLn.addView(cardsettlementdetail_cardrefundmasterMiddleTv);

                    TextView cardsettlementdetail_cardrefundmasterRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundmasterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardrefundmasterRightTv.setText(cardsettlementdetail_cardrefundmaster);
                    cardsettlementdetail_cardrefundmasterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundmasterRightTv);
                    cardsettlementdetail_cardrefundmasterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardrefundmasterLn.addView(cardsettlementdetail_cardrefundmasterRightTv);

                    printingLn.addView(cardsettlementdetail_cardrefundmasterLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtipmaster ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtipmasterLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtipmasterLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtipmasterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtipmasterLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipmasterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtipmasterLeftTv.setText("");
                    cardsettlementdetail_cardtipmasterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipmasterLeftTv);
                    cardsettlementdetail_cardtipmasterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtipmasterLn.addView(cardsettlementdetail_cardtipmasterLeftTv);

                    TextView cardsettlementdetail_cardtipmasterMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipmasterMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtipmasterMiddleTv.setText("Tip Amount");
                    cardsettlementdetail_cardtipmasterMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipmasterMiddleTv);
                    cardsettlementdetail_cardtipmasterMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtipmasterLn.addView(cardsettlementdetail_cardtipmasterMiddleTv);

                    TextView cardsettlementdetail_cardtipmasterRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipmasterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtipmasterRightTv.setText(cardsettlementdetail_cardtipmaster);
                    cardsettlementdetail_cardtipmasterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipmasterRightTv);
                    cardsettlementdetail_cardtipmasterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtipmasterLn.addView(cardsettlementdetail_cardtipmasterRightTv);

                    printingLn.addView(cardsettlementdetail_cardtipmasterLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtotalmaster ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtotalmasterLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtotalmasterLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtotalmasterLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtotalmasterLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalmasterLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotalmasterLeftTv.setText("");
                    cardsettlementdetail_cardtotalmasterLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalmasterLeftTv);
                    cardsettlementdetail_cardtotalmasterLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtotalmasterLn.addView(cardsettlementdetail_cardtotalmasterLeftTv);

                    TextView cardsettlementdetail_cardtotalmasterMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalmasterMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotalmasterMiddleTv.setText("Total");
                    cardsettlementdetail_cardtotalmasterMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalmasterMiddleTv);
                    cardsettlementdetail_cardtotalmasterMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtotalmasterLn.addView(cardsettlementdetail_cardtotalmasterMiddleTv);

                    TextView cardsettlementdetail_cardtotalmasterRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalmasterRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtotalmasterRightTv.setText(cardsettlementdetail_cardtotalmaster);
                    cardsettlementdetail_cardtotalmasterRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalmasterRightTv);
                    cardsettlementdetail_cardtotalmasterRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtotalmasterLn.addView(cardsettlementdetail_cardtotalmasterRightTv);

                    printingLn.addView(cardsettlementdetail_cardtotalmasterLn);
                    // --------------------------------------------------------------------------------------------------------------------
                    // Mastercard 끝 ----------------------------------------------------------------------------------------------------------------------

                    // Visa 시작 ----------------------------------------------------------------------------------------------------------------------
                    // Visa 타이틀 ----------------------------------------------------------------------------------------------------
                    LinearLayout visatitleLn = new LinearLayout(MainActivity.mContext);
                    visatitleLn.setLayoutParams(matchParentParams);
                    visatitleLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView visatitleLeftTv = new TextView(MainActivity.mContext);
                    visatitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    visatitleLeftTv.setText("Visa");
                    visatitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(visatitleLeftTv);
                    visatitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    visatitleLn.addView(visatitleLeftTv);

                    TextView visatitleRightTv = new TextView(MainActivity.mContext);
                    visatitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    visatitleRightTv.setText("");
                    visatitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(visatitleRightTv);
                    visatitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    visatitleLn.addView(visatitleRightTv);

                    printingLn.addView(visatitleLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtransvisa ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtransvisaLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtransvisaLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtransvisaLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtransvisaLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransvisaLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtransvisaLeftTv.setText("");
                    cardsettlementdetail_cardtransvisaLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransvisaLeftTv);
                    cardsettlementdetail_cardtransvisaLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtransvisaLn.addView(cardsettlementdetail_cardtransvisaLeftTv);

                    TextView cardsettlementdetail_cardtransvisaMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransvisaMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtransvisaMiddleTv.setText("Transactions");
                    cardsettlementdetail_cardtransvisaMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransvisaMiddleTv);
                    cardsettlementdetail_cardtransvisaMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtransvisaLn.addView(cardsettlementdetail_cardtransvisaMiddleTv);

                    TextView cardsettlementdetail_cardtransvisaRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransvisaRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtransvisaRightTv.setText(cardsettlementdetail_cardtransvisa);
                    cardsettlementdetail_cardtransvisaRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransvisaRightTv);
                    cardsettlementdetail_cardtransvisaRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtransvisaLn.addView(cardsettlementdetail_cardtransvisaRightTv);

                    printingLn.addView(cardsettlementdetail_cardtransvisaLn);
                    // --------------------------------------------------------------------------------------------------------------------


                    // cardsettlementdetail_cardsalesvisa ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardsalesvisaLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardsalesvisaLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardsalesvisaLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardsalesvisaLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesvisaLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardsalesvisaLeftTv.setText("");
                    cardsettlementdetail_cardsalesvisaLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesvisaLeftTv);
                    cardsettlementdetail_cardsalesvisaLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardsalesvisaLn.addView(cardsettlementdetail_cardsalesvisaLeftTv);

                    TextView cardsettlementdetail_cardsalesvisaMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesvisaMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardsalesvisaMiddleTv.setText("Sales Total");
                    cardsettlementdetail_cardsalesvisaMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesvisaMiddleTv);
                    cardsettlementdetail_cardsalesvisaMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardsalesvisaLn.addView(cardsettlementdetail_cardsalesvisaMiddleTv);

                    TextView cardsettlementdetail_cardsalesvisaRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesvisaRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardsalesvisaRightTv.setText(cardsettlementdetail_cardsalesvisa);
                    cardsettlementdetail_cardsalesvisaRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesvisaRightTv);
                    cardsettlementdetail_cardsalesvisaRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardsalesvisaLn.addView(cardsettlementdetail_cardsalesvisaRightTv);

                    printingLn.addView(cardsettlementdetail_cardsalesvisaLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardrefundvisa ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardrefundvisaLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardrefundvisaLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardrefundvisaLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardrefundvisaLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundvisaLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardrefundvisaLeftTv.setText("");
                    cardsettlementdetail_cardrefundvisaLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundvisaLeftTv);
                    cardsettlementdetail_cardrefundvisaLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardrefundvisaLn.addView(cardsettlementdetail_cardrefundvisaLeftTv);

                    TextView cardsettlementdetail_cardrefundvisaMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundvisaMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardrefundvisaMiddleTv.setText("Refunds");
                    cardsettlementdetail_cardrefundvisaMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundvisaMiddleTv);
                    cardsettlementdetail_cardrefundvisaMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardrefundvisaLn.addView(cardsettlementdetail_cardrefundvisaMiddleTv);

                    TextView cardsettlementdetail_cardrefundvisaRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundvisaRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardrefundvisaRightTv.setText(cardsettlementdetail_cardrefundvisa);
                    cardsettlementdetail_cardrefundvisaRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundvisaRightTv);
                    cardsettlementdetail_cardrefundvisaRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardrefundvisaLn.addView(cardsettlementdetail_cardrefundvisaRightTv);

                    printingLn.addView(cardsettlementdetail_cardrefundvisaLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtipvisa ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtipvisaLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtipvisaLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtipvisaLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtipvisaLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipvisaLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtipvisaLeftTv.setText("");
                    cardsettlementdetail_cardtipvisaLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipvisaLeftTv);
                    cardsettlementdetail_cardtipvisaLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtipvisaLn.addView(cardsettlementdetail_cardtipvisaLeftTv);

                    TextView cardsettlementdetail_cardtipvisaMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipvisaMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtipvisaMiddleTv.setText("Tip Amount");
                    cardsettlementdetail_cardtipvisaMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipvisaMiddleTv);
                    cardsettlementdetail_cardtipvisaMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtipvisaLn.addView(cardsettlementdetail_cardtipvisaMiddleTv);

                    TextView cardsettlementdetail_cardtipvisaRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipvisaRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtipvisaRightTv.setText(cardsettlementdetail_cardtipvisa);
                    cardsettlementdetail_cardtipvisaRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipvisaRightTv);
                    cardsettlementdetail_cardtipvisaRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtipvisaLn.addView(cardsettlementdetail_cardtipvisaRightTv);

                    printingLn.addView(cardsettlementdetail_cardtipvisaLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtotalvisa ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtotalvisaLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtotalvisaLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtotalvisaLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtotalvisaLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalvisaLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotalvisaLeftTv.setText("");
                    cardsettlementdetail_cardtotalvisaLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalvisaLeftTv);
                    cardsettlementdetail_cardtotalvisaLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtotalvisaLn.addView(cardsettlementdetail_cardtotalvisaLeftTv);

                    TextView cardsettlementdetail_cardtotalvisaMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalvisaMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotalvisaMiddleTv.setText("Total");
                    cardsettlementdetail_cardtotalvisaMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalvisaMiddleTv);
                    cardsettlementdetail_cardtotalvisaMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtotalvisaLn.addView(cardsettlementdetail_cardtotalvisaMiddleTv);

                    TextView cardsettlementdetail_cardtotalvisaRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalvisaRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtotalvisaRightTv.setText(cardsettlementdetail_cardtotalvisa);
                    cardsettlementdetail_cardtotalvisaRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalvisaRightTv);
                    cardsettlementdetail_cardtotalvisaRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtotalvisaLn.addView(cardsettlementdetail_cardtotalvisaRightTv);

                    printingLn.addView(cardsettlementdetail_cardtotalvisaLn);
                    // --------------------------------------------------------------------------------------------------------------------
                    // Visa 끝 ----------------------------------------------------------------------------------------------------------------------


                    // American Express 시작 ----------------------------------------------------------------------------------------------------------------------
                    // American Express 타이틀 ----------------------------------------------------------------------------------------------------
                    LinearLayout amextitleLn = new LinearLayout(MainActivity.mContext);
                    amextitleLn.setLayoutParams(matchParentParams);
                    amextitleLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView amextitleLeftTv = new TextView(MainActivity.mContext);
                    amextitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    amextitleLeftTv.setText("American Express");
                    amextitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(amextitleLeftTv);
                    amextitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    amextitleLn.addView(amextitleLeftTv);

                    TextView amextitleRightTv = new TextView(MainActivity.mContext);
                    amextitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    amextitleRightTv.setText("");
                    amextitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(amextitleRightTv);
                    amextitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    amextitleLn.addView(amextitleRightTv);

                    printingLn.addView(amextitleLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtransamex ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtransamexLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtransamexLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtransamexLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtransamexLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransamexLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtransamexLeftTv.setText("");
                    cardsettlementdetail_cardtransamexLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransamexLeftTv);
                    cardsettlementdetail_cardtransamexLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtransamexLn.addView(cardsettlementdetail_cardtransamexLeftTv);

                    TextView cardsettlementdetail_cardtransamexMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransamexMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtransamexMiddleTv.setText("Transactions");
                    cardsettlementdetail_cardtransamexMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransamexMiddleTv);
                    cardsettlementdetail_cardtransamexMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtransamexLn.addView(cardsettlementdetail_cardtransamexMiddleTv);

                    TextView cardsettlementdetail_cardtransamexRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransamexRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtransamexRightTv.setText(cardsettlementdetail_cardtransamex);
                    cardsettlementdetail_cardtransamexRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransamexRightTv);
                    cardsettlementdetail_cardtransamexRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtransamexLn.addView(cardsettlementdetail_cardtransamexRightTv);

                    printingLn.addView(cardsettlementdetail_cardtransamexLn);
                    // --------------------------------------------------------------------------------------------------------------------


                    // cardsettlementdetail_cardsalesamex ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardsalesamexLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardsalesamexLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardsalesamexLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardsalesamexLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesamexLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardsalesamexLeftTv.setText("");
                    cardsettlementdetail_cardsalesamexLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesamexLeftTv);
                    cardsettlementdetail_cardsalesamexLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardsalesamexLn.addView(cardsettlementdetail_cardsalesamexLeftTv);

                    TextView cardsettlementdetail_cardsalesamexMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesamexMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardsalesamexMiddleTv.setText("Sales Total");
                    cardsettlementdetail_cardsalesamexMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesamexMiddleTv);
                    cardsettlementdetail_cardsalesamexMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardsalesamexLn.addView(cardsettlementdetail_cardsalesamexMiddleTv);

                    TextView cardsettlementdetail_cardsalesamexRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesamexRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardsalesamexRightTv.setText(cardsettlementdetail_cardsalesamex);
                    cardsettlementdetail_cardsalesamexRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesamexRightTv);
                    cardsettlementdetail_cardsalesamexRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardsalesamexLn.addView(cardsettlementdetail_cardsalesamexRightTv);

                    printingLn.addView(cardsettlementdetail_cardsalesamexLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardrefundamex ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardrefundamexLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardrefundamexLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardrefundamexLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardrefundamexLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundamexLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardrefundamexLeftTv.setText("");
                    cardsettlementdetail_cardrefundamexLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundamexLeftTv);
                    cardsettlementdetail_cardrefundamexLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardrefundamexLn.addView(cardsettlementdetail_cardrefundamexLeftTv);

                    TextView cardsettlementdetail_cardrefundamexMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundamexMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardrefundamexMiddleTv.setText("Refunds");
                    cardsettlementdetail_cardrefundamexMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundamexMiddleTv);
                    cardsettlementdetail_cardrefundamexMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardrefundamexLn.addView(cardsettlementdetail_cardrefundamexMiddleTv);

                    TextView cardsettlementdetail_cardrefundamexRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundamexRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardrefundamexRightTv.setText(cardsettlementdetail_cardrefundamex);
                    cardsettlementdetail_cardrefundamexRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundamexRightTv);
                    cardsettlementdetail_cardrefundamexRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardrefundamexLn.addView(cardsettlementdetail_cardrefundamexRightTv);

                    printingLn.addView(cardsettlementdetail_cardrefundamexLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtipamex ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtipamexLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtipamexLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtipamexLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtipamexLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipamexLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtipamexLeftTv.setText("");
                    cardsettlementdetail_cardtipamexLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipamexLeftTv);
                    cardsettlementdetail_cardtipamexLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtipamexLn.addView(cardsettlementdetail_cardtipamexLeftTv);

                    TextView cardsettlementdetail_cardtipamexMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipamexMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtipamexMiddleTv.setText("Tip Amount");
                    cardsettlementdetail_cardtipamexMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipamexMiddleTv);
                    cardsettlementdetail_cardtipamexMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtipamexLn.addView(cardsettlementdetail_cardtipamexMiddleTv);

                    TextView cardsettlementdetail_cardtipamexRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipamexRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtipamexRightTv.setText(cardsettlementdetail_cardtipamex);
                    cardsettlementdetail_cardtipamexRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipamexRightTv);
                    cardsettlementdetail_cardtipamexRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtipamexLn.addView(cardsettlementdetail_cardtipamexRightTv);

                    printingLn.addView(cardsettlementdetail_cardtipamexLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtotalamex ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtotalamexLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtotalamexLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtotalamexLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtotalamexLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalamexLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotalamexLeftTv.setText("");
                    cardsettlementdetail_cardtotalamexLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalamexLeftTv);
                    cardsettlementdetail_cardtotalamexLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtotalamexLn.addView(cardsettlementdetail_cardtotalamexLeftTv);

                    TextView cardsettlementdetail_cardtotalamexMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalamexMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotalamexMiddleTv.setText("Total");
                    cardsettlementdetail_cardtotalamexMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalamexMiddleTv);
                    cardsettlementdetail_cardtotalamexMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtotalamexLn.addView(cardsettlementdetail_cardtotalamexMiddleTv);

                    TextView cardsettlementdetail_cardtotalamexRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalamexRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtotalamexRightTv.setText(cardsettlementdetail_cardtotalamex);
                    cardsettlementdetail_cardtotalamexRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalamexRightTv);
                    cardsettlementdetail_cardtotalamexRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtotalamexLn.addView(cardsettlementdetail_cardtotalamexRightTv);

                    printingLn.addView(cardsettlementdetail_cardtotalamexLn);
                    // --------------------------------------------------------------------------------------------------------------------
                    // American Express 끝 ----------------------------------------------------------------------------------------------------------------------


                    // Discover 시작 ----------------------------------------------------------------------------------------------------------------------
                    // Discover 타이틀 ----------------------------------------------------------------------------------------------------
                    LinearLayout discovertitleLn = new LinearLayout(MainActivity.mContext);
                    discovertitleLn.setLayoutParams(matchParentParams);
                    discovertitleLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView discovertitleLeftTv = new TextView(MainActivity.mContext);
                    discovertitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    discovertitleLeftTv.setText("Discover");
                    discovertitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(discovertitleLeftTv);
                    discovertitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    discovertitleLn.addView(discovertitleLeftTv);

                    TextView discovertitleRightTv = new TextView(MainActivity.mContext);
                    discovertitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    discovertitleRightTv.setText("");
                    discovertitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(discovertitleRightTv);
                    discovertitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    discovertitleLn.addView(discovertitleRightTv);

                    printingLn.addView(discovertitleLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtransdiscover ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtransdiscoverLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtransdiscoverLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtransdiscoverLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtransdiscoverLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransdiscoverLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtransdiscoverLeftTv.setText("");
                    cardsettlementdetail_cardtransdiscoverLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransdiscoverLeftTv);
                    cardsettlementdetail_cardtransdiscoverLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtransdiscoverLn.addView(cardsettlementdetail_cardtransdiscoverLeftTv);

                    TextView cardsettlementdetail_cardtransdiscoverMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransdiscoverMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtransdiscoverMiddleTv.setText("Transactions");
                    cardsettlementdetail_cardtransdiscoverMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransdiscoverMiddleTv);
                    cardsettlementdetail_cardtransdiscoverMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtransdiscoverLn.addView(cardsettlementdetail_cardtransdiscoverMiddleTv);

                    TextView cardsettlementdetail_cardtransdiscoverRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransdiscoverRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtransdiscoverRightTv.setText(cardsettlementdetail_cardtransdiscover);
                    cardsettlementdetail_cardtransdiscoverRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransdiscoverRightTv);
                    cardsettlementdetail_cardtransdiscoverRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtransdiscoverLn.addView(cardsettlementdetail_cardtransdiscoverRightTv);

                    printingLn.addView(cardsettlementdetail_cardtransdiscoverLn);
                    // --------------------------------------------------------------------------------------------------------------------


                    // cardsettlementdetail_cardsalesdiscover ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardsalesdiscoverLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardsalesdiscoverLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardsalesdiscoverLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardsalesdiscoverLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesdiscoverLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardsalesdiscoverLeftTv.setText("");
                    cardsettlementdetail_cardsalesdiscoverLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesdiscoverLeftTv);
                    cardsettlementdetail_cardsalesdiscoverLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardsalesdiscoverLn.addView(cardsettlementdetail_cardsalesdiscoverLeftTv);

                    TextView cardsettlementdetail_cardsalesdiscoverMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesdiscoverMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardsalesdiscoverMiddleTv.setText("Sales Total");
                    cardsettlementdetail_cardsalesdiscoverMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesdiscoverMiddleTv);
                    cardsettlementdetail_cardsalesdiscoverMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardsalesdiscoverLn.addView(cardsettlementdetail_cardsalesdiscoverMiddleTv);

                    TextView cardsettlementdetail_cardsalesdiscoverRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesdiscoverRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardsalesdiscoverRightTv.setText(cardsettlementdetail_cardsalesdiscover);
                    cardsettlementdetail_cardsalesdiscoverRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesdiscoverRightTv);
                    cardsettlementdetail_cardsalesdiscoverRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardsalesdiscoverLn.addView(cardsettlementdetail_cardsalesdiscoverRightTv);

                    printingLn.addView(cardsettlementdetail_cardsalesdiscoverLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardrefunddiscover ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardrefunddiscoverLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardrefunddiscoverLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardrefunddiscoverLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardrefunddiscoverLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefunddiscoverLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardrefunddiscoverLeftTv.setText("");
                    cardsettlementdetail_cardrefunddiscoverLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefunddiscoverLeftTv);
                    cardsettlementdetail_cardrefunddiscoverLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardrefunddiscoverLn.addView(cardsettlementdetail_cardrefunddiscoverLeftTv);

                    TextView cardsettlementdetail_cardrefunddiscoverMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefunddiscoverMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardrefunddiscoverMiddleTv.setText("Refunds");
                    cardsettlementdetail_cardrefunddiscoverMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefunddiscoverMiddleTv);
                    cardsettlementdetail_cardrefunddiscoverMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardrefunddiscoverLn.addView(cardsettlementdetail_cardrefunddiscoverMiddleTv);

                    TextView cardsettlementdetail_cardrefunddiscoverRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefunddiscoverRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardrefunddiscoverRightTv.setText(cardsettlementdetail_cardrefunddiscover);
                    cardsettlementdetail_cardrefunddiscoverRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefunddiscoverRightTv);
                    cardsettlementdetail_cardrefunddiscoverRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardrefunddiscoverLn.addView(cardsettlementdetail_cardrefunddiscoverRightTv);

                    printingLn.addView(cardsettlementdetail_cardrefunddiscoverLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtipdiscvoer ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtipdiscvoerLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtipdiscvoerLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtipdiscvoerLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtipdiscvoerLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipdiscvoerLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtipdiscvoerLeftTv.setText("");
                    cardsettlementdetail_cardtipdiscvoerLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipdiscvoerLeftTv);
                    cardsettlementdetail_cardtipdiscvoerLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtipdiscvoerLn.addView(cardsettlementdetail_cardtipdiscvoerLeftTv);

                    TextView cardsettlementdetail_cardtipdiscvoerMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipdiscvoerMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtipdiscvoerMiddleTv.setText("Tip Amount");
                    cardsettlementdetail_cardtipdiscvoerMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipdiscvoerMiddleTv);
                    cardsettlementdetail_cardtipdiscvoerMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtipdiscvoerLn.addView(cardsettlementdetail_cardtipdiscvoerMiddleTv);

                    TextView cardsettlementdetail_cardtipdiscvoerRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipdiscvoerRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtipdiscvoerRightTv.setText(cardsettlementdetail_cardtipdiscvoer);
                    cardsettlementdetail_cardtipdiscvoerRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipdiscvoerRightTv);
                    cardsettlementdetail_cardtipdiscvoerRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtipdiscvoerLn.addView(cardsettlementdetail_cardtipdiscvoerRightTv);

                    printingLn.addView(cardsettlementdetail_cardtipdiscvoerLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtotaldiscover ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtotaldiscoverLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtotaldiscoverLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtotaldiscoverLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtotaldiscoverLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotaldiscoverLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotaldiscoverLeftTv.setText("");
                    cardsettlementdetail_cardtotaldiscoverLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotaldiscoverLeftTv);
                    cardsettlementdetail_cardtotaldiscoverLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtotaldiscoverLn.addView(cardsettlementdetail_cardtotaldiscoverLeftTv);

                    TextView cardsettlementdetail_cardtotaldiscoverMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotaldiscoverMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotaldiscoverMiddleTv.setText("Total");
                    cardsettlementdetail_cardtotaldiscoverMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotaldiscoverMiddleTv);
                    cardsettlementdetail_cardtotaldiscoverMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtotaldiscoverLn.addView(cardsettlementdetail_cardtotaldiscoverMiddleTv);

                    TextView cardsettlementdetail_cardtotaldiscoverRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotaldiscoverRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtotaldiscoverRightTv.setText(cardsettlementdetail_cardtotaldiscover);
                    cardsettlementdetail_cardtotaldiscoverRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotaldiscoverRightTv);
                    cardsettlementdetail_cardtotaldiscoverRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtotaldiscoverLn.addView(cardsettlementdetail_cardtotaldiscoverRightTv);

                    printingLn.addView(cardsettlementdetail_cardtotaldiscoverLn);
                    // --------------------------------------------------------------------------------------------------------------------
                    // Discover 끝 ----------------------------------------------------------------------------------------------------------------------


                    // Other 시작 ----------------------------------------------------------------------------------------------------------------------
                    // Other 타이틀 ----------------------------------------------------------------------------------------------------
                    LinearLayout othertitleLn = new LinearLayout(MainActivity.mContext);
                    othertitleLn.setLayoutParams(matchParentParams);
                    othertitleLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView othertitleLeftTv = new TextView(MainActivity.mContext);
                    othertitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    othertitleLeftTv.setText("Other");
                    othertitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(othertitleLeftTv);
                    othertitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    othertitleLn.addView(othertitleLeftTv);

                    TextView othertitleRightTv = new TextView(MainActivity.mContext);
                    othertitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    othertitleRightTv.setText("");
                    othertitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(othertitleRightTv);
                    othertitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    othertitleLn.addView(othertitleRightTv);

                    printingLn.addView(othertitleLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtransother ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtransotherLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtransotherLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtransotherLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtransotherLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransotherLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtransotherLeftTv.setText("");
                    cardsettlementdetail_cardtransotherLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransotherLeftTv);
                    cardsettlementdetail_cardtransotherLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtransotherLn.addView(cardsettlementdetail_cardtransotherLeftTv);

                    TextView cardsettlementdetail_cardtransotherMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransotherMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtransotherMiddleTv.setText("Transactions");
                    cardsettlementdetail_cardtransotherMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransotherMiddleTv);
                    cardsettlementdetail_cardtransotherMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtransotherLn.addView(cardsettlementdetail_cardtransotherMiddleTv);

                    TextView cardsettlementdetail_cardtransotherRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtransotherRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtransotherRightTv.setText(cardsettlementdetail_cardtransother);
                    cardsettlementdetail_cardtransotherRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtransotherRightTv);
                    cardsettlementdetail_cardtransotherRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtransotherLn.addView(cardsettlementdetail_cardtransotherRightTv);

                    printingLn.addView(cardsettlementdetail_cardtransotherLn);
                    // --------------------------------------------------------------------------------------------------------------------


                    // cardsettlementdetail_cardsalesother ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardsalesotherLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardsalesotherLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardsalesotherLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardsalesotherLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesotherLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardsalesotherLeftTv.setText("");
                    cardsettlementdetail_cardsalesotherLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesotherLeftTv);
                    cardsettlementdetail_cardsalesotherLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardsalesotherLn.addView(cardsettlementdetail_cardsalesotherLeftTv);

                    TextView cardsettlementdetail_cardsalesotherMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesotherMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardsalesotherMiddleTv.setText("Sales Total");
                    cardsettlementdetail_cardsalesotherMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesotherMiddleTv);
                    cardsettlementdetail_cardsalesotherMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardsalesotherLn.addView(cardsettlementdetail_cardsalesotherMiddleTv);

                    TextView cardsettlementdetail_cardsalesotherRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalesotherRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardsalesotherRightTv.setText(cardsettlementdetail_cardsalesother);
                    cardsettlementdetail_cardsalesotherRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalesotherRightTv);
                    cardsettlementdetail_cardsalesotherRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardsalesotherLn.addView(cardsettlementdetail_cardsalesotherRightTv);

                    printingLn.addView(cardsettlementdetail_cardsalesotherLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardrefundother ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardrefundotherLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardrefundotherLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardrefundotherLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardrefundotherLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundotherLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardrefundotherLeftTv.setText("");
                    cardsettlementdetail_cardrefundotherLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundotherLeftTv);
                    cardsettlementdetail_cardrefundotherLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardrefundotherLn.addView(cardsettlementdetail_cardrefundotherLeftTv);

                    TextView cardsettlementdetail_cardrefundotherMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundotherMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardrefundotherMiddleTv.setText("Refunds");
                    cardsettlementdetail_cardrefundotherMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundotherMiddleTv);
                    cardsettlementdetail_cardrefundotherMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardrefundotherLn.addView(cardsettlementdetail_cardrefundotherMiddleTv);

                    TextView cardsettlementdetail_cardrefundotherRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundotherRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardrefundotherRightTv.setText(cardsettlementdetail_cardrefundother);
                    cardsettlementdetail_cardrefundotherRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundotherRightTv);
                    cardsettlementdetail_cardrefundotherRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardrefundotherLn.addView(cardsettlementdetail_cardrefundotherRightTv);

                    printingLn.addView(cardsettlementdetail_cardrefundotherLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtipother ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtipotherLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtipotherLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtipotherLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtipotherLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipotherLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtipotherLeftTv.setText("");
                    cardsettlementdetail_cardtipotherLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipotherLeftTv);
                    cardsettlementdetail_cardtipotherLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtipotherLn.addView(cardsettlementdetail_cardtipotherLeftTv);

                    TextView cardsettlementdetail_cardtipotherMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipotherMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtipotherMiddleTv.setText("Tip Amount");
                    cardsettlementdetail_cardtipotherMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipotherMiddleTv);
                    cardsettlementdetail_cardtipotherMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtipotherLn.addView(cardsettlementdetail_cardtipotherMiddleTv);

                    TextView cardsettlementdetail_cardtipotherRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtipotherRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtipotherRightTv.setText(cardsettlementdetail_cardtipother);
                    cardsettlementdetail_cardtipotherRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtipotherRightTv);
                    cardsettlementdetail_cardtipotherRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtipotherLn.addView(cardsettlementdetail_cardtipotherRightTv);

                    printingLn.addView(cardsettlementdetail_cardtipotherLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtotalother ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtotalotherLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtotalotherLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtotalotherLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtotalotherLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalotherLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotalotherLeftTv.setText("");
                    cardsettlementdetail_cardtotalotherLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalotherLeftTv);
                    cardsettlementdetail_cardtotalotherLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtotalotherLn.addView(cardsettlementdetail_cardtotalotherLeftTv);

                    TextView cardsettlementdetail_cardtotalotherMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalotherMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotalotherMiddleTv.setText("Total");
                    cardsettlementdetail_cardtotalotherMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalotherMiddleTv);
                    cardsettlementdetail_cardtotalotherMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtotalotherLn.addView(cardsettlementdetail_cardtotalotherMiddleTv);

                    TextView cardsettlementdetail_cardtotalotherRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalotherRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtotalotherRightTv.setText(cardsettlementdetail_cardtotalother);
                    cardsettlementdetail_cardtotalotherRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalotherRightTv);
                    cardsettlementdetail_cardtotalotherRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtotalotherLn.addView(cardsettlementdetail_cardtotalotherRightTv);

                    printingLn.addView(cardsettlementdetail_cardtotalotherLn);
                    // --------------------------------------------------------------------------------------------------------------------
                    // Other 끝 ----------------------------------------------------------------------------------------------------------------------



                    // Total 시작 ----------------------------------------------------------------------------------------------------------------------
                    // Total 타이틀 ----------------------------------------------------------------------------------------------------
                    LinearLayout settlementtotaltitleLn = new LinearLayout(MainActivity.mContext);
                    settlementtotaltitleLn.setLayoutParams(matchParentParams);
                    settlementtotaltitleLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView settlementtotaltitleLeftTv = new TextView(MainActivity.mContext);
                    settlementtotaltitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    settlementtotaltitleLeftTv.setText("Total");
                    settlementtotaltitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(settlementtotaltitleLeftTv);
                    settlementtotaltitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    settlementtotaltitleLn.addView(settlementtotaltitleLeftTv);

                    TextView settlementtotaltitleRightTv = new TextView(MainActivity.mContext);
                    settlementtotaltitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    settlementtotaltitleRightTv.setText("");
                    settlementtotaltitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(settlementtotaltitleRightTv);
                    settlementtotaltitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    settlementtotaltitleLn.addView(settlementtotaltitleRightTv);

                    printingLn.addView(settlementtotaltitleLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardtranstotal ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtranstotalLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtranstotalLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtranstotalLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtranstotalLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtranstotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtranstotalLeftTv.setText("");
                    cardsettlementdetail_cardtranstotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtranstotalLeftTv);
                    cardsettlementdetail_cardtranstotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtranstotalLn.addView(cardsettlementdetail_cardtranstotalLeftTv);

                    TextView cardsettlementdetail_cardtranstotalMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtranstotalMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtranstotalMiddleTv.setText("Transactions");
                    cardsettlementdetail_cardtranstotalMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtranstotalMiddleTv);
                    cardsettlementdetail_cardtranstotalMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtranstotalLn.addView(cardsettlementdetail_cardtranstotalMiddleTv);

                    TextView cardsettlementdetail_cardtranstotalRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtranstotalRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtranstotalRightTv.setText(cardsettlementdetail_cardtranstotal);
                    cardsettlementdetail_cardtranstotalRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtranstotalRightTv);
                    cardsettlementdetail_cardtranstotalRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtranstotalLn.addView(cardsettlementdetail_cardtranstotalRightTv);

                    printingLn.addView(cardsettlementdetail_cardtranstotalLn);
                    // --------------------------------------------------------------------------------------------------------------------


                    // cardsettlementdetail_cardsalestotal ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardsalestotalLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardsalestotalLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardsalestotalLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardsalestotalLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalestotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardsalestotalLeftTv.setText("");
                    cardsettlementdetail_cardsalestotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalestotalLeftTv);
                    cardsettlementdetail_cardsalestotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardsalestotalLn.addView(cardsettlementdetail_cardsalestotalLeftTv);

                    TextView cardsettlementdetail_cardsalestotalMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalestotalMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardsalestotalMiddleTv.setText("Sales Total");
                    cardsettlementdetail_cardsalestotalMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalestotalMiddleTv);
                    cardsettlementdetail_cardsalestotalMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardsalestotalLn.addView(cardsettlementdetail_cardsalestotalMiddleTv);

                    TextView cardsettlementdetail_cardsalestotalRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardsalestotalRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardsalestotalRightTv.setText(cardsettlementdetail_cardsalestotal);
                    cardsettlementdetail_cardsalestotalRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardsalestotalRightTv);
                    cardsettlementdetail_cardsalestotalRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardsalestotalLn.addView(cardsettlementdetail_cardsalestotalRightTv);

                    printingLn.addView(cardsettlementdetail_cardsalestotalLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // cardsettlementdetail_cardrefundtotal ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardrefundtotalLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardrefundtotalLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardrefundtotalLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardrefundtotalLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundtotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardrefundtotalLeftTv.setText("");
                    cardsettlementdetail_cardrefundtotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundtotalLeftTv);
                    cardsettlementdetail_cardrefundtotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardrefundtotalLn.addView(cardsettlementdetail_cardrefundtotalLeftTv);

                    TextView cardsettlementdetail_cardrefundtotalMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundtotalMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardrefundtotalMiddleTv.setText("Refunds");
                    cardsettlementdetail_cardrefundtotalMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundtotalMiddleTv);
                    cardsettlementdetail_cardrefundtotalMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardrefundtotalLn.addView(cardsettlementdetail_cardrefundtotalMiddleTv);

                    TextView cardsettlementdetail_cardrefundtotalRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardrefundtotalRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardrefundtotalRightTv.setText(cardsettlementdetail_cardrefundtotal);
                    cardsettlementdetail_cardrefundtotalRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardrefundtotalRightTv);
                    cardsettlementdetail_cardrefundtotalRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardrefundtotalLn.addView(cardsettlementdetail_cardrefundtotalRightTv);

                    printingLn.addView(cardsettlementdetail_cardrefundtotalLn);
                    // --------------------------------------------------------------------------------------------------------------------


                    // cardsettlementdetail_cardtotalothers ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtotalothersLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtotalothersLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtotalothersLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtotalothersLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalothersLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotalothersLeftTv.setText("");
                    cardsettlementdetail_cardtotalothersLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalothersLeftTv);
                    cardsettlementdetail_cardtotalothersLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtotalothersLn.addView(cardsettlementdetail_cardtotalothersLeftTv);

                    TextView cardsettlementdetail_cardtotalothersMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalothersMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotalothersMiddleTv.setText("Tip Total + Others");
                    cardsettlementdetail_cardtotalothersMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalothersMiddleTv);
                    cardsettlementdetail_cardtotalothersMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtotalothersLn.addView(cardsettlementdetail_cardtotalothersMiddleTv);

                    TextView cardsettlementdetail_cardtotalothersRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotalothersRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtotalothersRightTv.setText(cardsettlementdetail_cardtotalothers);
                    cardsettlementdetail_cardtotalothersRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotalothersRightTv);
                    cardsettlementdetail_cardtotalothersRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtotalothersLn.addView(cardsettlementdetail_cardtotalothersRightTv);

                    printingLn.addView(cardsettlementdetail_cardtotalothersLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    /**
                     // cardsettlementdetail_cardtiptotal ----------------------------------------------------------------------------------------------------
                     LinearLayout cardsettlementdetail_cardtiptotalLn = new LinearLayout(MainActivity.mContext);
                     cardsettlementdetail_cardtiptotalLn.setLayoutParams(matchParentParams);
                     cardsettlementdetail_cardtiptotalLn.setOrientation(LinearLayout.HORIZONTAL);

                     TextView cardsettlementdetail_cardtiptotalLeftTv = new TextView(MainActivity.mContext);
                     cardsettlementdetail_cardtiptotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                     cardsettlementdetail_cardtiptotalLeftTv.setText("");
                     cardsettlementdetail_cardtiptotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                     GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtiptotalLeftTv);
                     cardsettlementdetail_cardtiptotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                     cardsettlementdetail_cardtiptotalLn.addView(cardsettlementdetail_cardtiptotalLeftTv);

                     TextView cardsettlementdetail_cardtiptotalMiddleTv = new TextView(MainActivity.mContext);
                     cardsettlementdetail_cardtiptotalMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                     cardsettlementdetail_cardtiptotalMiddleTv.setText("Tip Amount");
                     cardsettlementdetail_cardtiptotalMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                     GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtiptotalMiddleTv);
                     cardsettlementdetail_cardtiptotalMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                     cardsettlementdetail_cardtiptotalLn.addView(cardsettlementdetail_cardtiptotalMiddleTv);

                     TextView cardsettlementdetail_cardtiptotalRightTv = new TextView(MainActivity.mContext);
                     cardsettlementdetail_cardtiptotalRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                     cardsettlementdetail_cardtiptotalRightTv.setText(cardsettlementdetail_cardtiptotal);
                     cardsettlementdetail_cardtiptotalRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                     GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtiptotalRightTv);
                     cardsettlementdetail_cardtiptotalRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                     cardsettlementdetail_cardtiptotalLn.addView(cardsettlementdetail_cardtiptotalRightTv);

                     printingLn.addView(cardsettlementdetail_cardtiptotalLn);
                     // --------------------------------------------------------------------------------------------------------------------
                     **/

                    // cardsettlementdetail_cardtotaltotal ----------------------------------------------------------------------------------------------------
                    LinearLayout cardsettlementdetail_cardtotaltotalLn = new LinearLayout(MainActivity.mContext);
                    cardsettlementdetail_cardtotaltotalLn.setLayoutParams(matchParentParams);
                    cardsettlementdetail_cardtotaltotalLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cardsettlementdetail_cardtotaltotalLeftTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotaltotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotaltotalLeftTv.setText("");
                    cardsettlementdetail_cardtotaltotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotaltotalLeftTv);
                    cardsettlementdetail_cardtotaltotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                    cardsettlementdetail_cardtotaltotalLn.addView(cardsettlementdetail_cardtotaltotalLeftTv);

                    TextView cardsettlementdetail_cardtotaltotalMiddleTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotaltotalMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cardsettlementdetail_cardtotaltotalMiddleTv.setText("Total");
                    cardsettlementdetail_cardtotaltotalMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotaltotalMiddleTv);
                    cardsettlementdetail_cardtotaltotalMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cardsettlementdetail_cardtotaltotalLn.addView(cardsettlementdetail_cardtotaltotalMiddleTv);

                    TextView cardsettlementdetail_cardtotaltotalRightTv = new TextView(MainActivity.mContext);
                    cardsettlementdetail_cardtotaltotalRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cardsettlementdetail_cardtotaltotalRightTv.setText(cardsettlementdetail_cardtotaltotal);
                    cardsettlementdetail_cardtotaltotalRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cardsettlementdetail_cardtotaltotalRightTv);
                    cardsettlementdetail_cardtotaltotalRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                    cardsettlementdetail_cardtotaltotalLn.addView(cardsettlementdetail_cardtotaltotalRightTv);

                    printingLn.addView(cardsettlementdetail_cardtotaltotalLn);
                    // --------------------------------------------------------------------------------------------------------------------
                    // Total 끝 ----------------------------------------------------------------------------------------------------------------------


                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    /** Credit Card Merchant Settlement Details 끝 ***********************************************************************************************/
                }



                // 12292022
                /** Cash Card DC EXTRA 시작 *******************************************************************************************************************/
                String str_addpayname = GlobalMemberValues.getDataInJsonData(data, "cashcard_dcextra_addpayname");
                String str_cashcarddcextraamount = GlobalMemberValues.getDataInJsonData(data, "cashcard_dcextra_sales");

                if (!GlobalMemberValues.isStrEmpty(str_cashcarddcextraamount)) {
                    LinearLayout cashcarddcextraLn = new LinearLayout(MainActivity.mContext);
                    cashcarddcextraLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                    cashcarddcextraLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView cashcarddcextraTv = new TextView(MainActivity.mContext);
                    cashcarddcextraTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    cashcarddcextraTv.setText(str_addpayname);
                    cashcarddcextraTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashcarddcextraTv);
                    cashcarddcextraTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    cashcarddcextraLn.addView(cashcarddcextraTv);

                    TextView cashcarddcextraTv2 = new TextView(MainActivity.mContext);
                    cashcarddcextraTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    cashcarddcextraTv2.setText(str_cashcarddcextraamount);
                    cashcarddcextraTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(cashcarddcextraTv2);
                    cashcarddcextraTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    cashcarddcextraLn.addView(cashcarddcextraTv2);

                    printingLn.addView(cashcarddcextraLn);

                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }
                /** Cash Card DC EXTRA 끝 *******************************************************************************************************************/








                // 01062023
                /** Tip Summary Details 시작 ******************************************************************************************************************/
                // Cash Summary Details 타이틀 -----------------------------------------------------------------------------------------------------
                TextView tipsummarydetailsTv = new TextView(MainActivity.mContext);
                tipsummarydetailsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                tipsummarydetailsTv.setGravity(Gravity.CENTER);
                tipsummarydetailsTv.setText("Tip Summary Details");
                tipsummarydetailsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                GlobalMemberValues.setTextStyleOnClover(tipsummarydetailsTv);
                printingLn.addView(tipsummarydetailsTv);
                // --------------------------------------------------------------------------------------------------------------------

                // Cash Tip ----------------------------------------------------------------------------------------------------
                LinearLayout tipsummarydetails_cashtransactionsLn = new LinearLayout(MainActivity.mContext);
                tipsummarydetails_cashtransactionsLn.setLayoutParams(matchParentParams);
                tipsummarydetails_cashtransactionsLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView tipsummarydetails_cashtransactionsLeftTv = new TextView(MainActivity.mContext);
                tipsummarydetails_cashtransactionsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                tipsummarydetails_cashtransactionsLeftTv.setText("Cash Tip");
                tipsummarydetails_cashtransactionsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(tipsummarydetails_cashtransactionsLeftTv);
                tipsummarydetails_cashtransactionsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                tipsummarydetails_cashtransactionsLn.addView(tipsummarydetails_cashtransactionsLeftTv);

                TextView tipsummarydetails_cashtransactionsRightTv = new TextView(MainActivity.mContext);
                tipsummarydetails_cashtransactionsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                tipsummarydetails_cashtransactionsRightTv.setText(salessummary_totaltips_cash);
                tipsummarydetails_cashtransactionsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(tipsummarydetails_cashtransactionsRightTv);
                tipsummarydetails_cashtransactionsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                tipsummarydetails_cashtransactionsLn.addView(tipsummarydetails_cashtransactionsRightTv);

                printingLn.addView(tipsummarydetails_cashtransactionsLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Card Tip ----------------------------------------------------------------------------------------------------
                LinearLayout tipsummarydetails_cashsalesLn = new LinearLayout(MainActivity.mContext);
                tipsummarydetails_cashsalesLn.setLayoutParams(matchParentParams);
                tipsummarydetails_cashsalesLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView tipsummarydetails_cashsalesLeftTv = new TextView(MainActivity.mContext);
                tipsummarydetails_cashsalesLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                tipsummarydetails_cashsalesLeftTv.setText("Card Tip");
                tipsummarydetails_cashsalesLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(tipsummarydetails_cashsalesLeftTv);
                tipsummarydetails_cashsalesLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                tipsummarydetails_cashsalesLn.addView(tipsummarydetails_cashsalesLeftTv);

                TextView tipsummarydetails_cashsalesRightTv = new TextView(MainActivity.mContext);
                tipsummarydetails_cashsalesRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                tipsummarydetails_cashsalesRightTv.setText(salessummary_totaltips_card);
                tipsummarydetails_cashsalesRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(tipsummarydetails_cashsalesRightTv);
                tipsummarydetails_cashsalesRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                tipsummarydetails_cashsalesLn.addView(tipsummarydetails_cashsalesRightTv);

                printingLn.addView(tipsummarydetails_cashsalesLn);
                // --------------------------------------------------------------------------------------------------------------------

                // 04242023
                // Gratuity ----------------------------------------------------------------------------------------------------
                LinearLayout tipsummarydetails_gratuityLn = new LinearLayout(MainActivity.mContext);
                tipsummarydetails_gratuityLn.setLayoutParams(matchParentParams);
                tipsummarydetails_gratuityLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView tipsummarydetails_gratuityLeftTv = new TextView(MainActivity.mContext);
                tipsummarydetails_gratuityLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                tipsummarydetails_gratuityLeftTv.setText("Gratuity");
                tipsummarydetails_gratuityLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(tipsummarydetails_gratuityLeftTv);
                tipsummarydetails_gratuityLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                tipsummarydetails_gratuityLn.addView(tipsummarydetails_gratuityLeftTv);

                TextView tipsummarydetails_gratuityRightTv = new TextView(MainActivity.mContext);
                tipsummarydetails_gratuityRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                tipsummarydetails_gratuityRightTv.setText(salessummary_gratuity);
                tipsummarydetails_gratuityRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(tipsummarydetails_gratuityRightTv);
                tipsummarydetails_gratuityRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                tipsummarydetails_gratuityLn.addView(tipsummarydetails_gratuityRightTv);

                printingLn.addView(tipsummarydetails_gratuityLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Tip Total ----------------------------------------------------------------------------------------------------
                // 04242023
                double salessummary_totaltips_dbl = GlobalMemberValues.getDoubleAtString(salessummary_totaltips)
                        + GlobalMemberValues.getDoubleAtString(salessummary_gratuity);
                salessummary_totaltips = GlobalMemberValues.getCommaStringForDouble(salessummary_totaltips_dbl + "");

                LinearLayout tipsummarydetails_cashrefundLn = new LinearLayout(MainActivity.mContext);
                tipsummarydetails_cashrefundLn.setLayoutParams(matchParentParams);
                tipsummarydetails_cashrefundLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView tipsummarydetails_cashrefundLeftTv = new TextView(MainActivity.mContext);
                tipsummarydetails_cashrefundLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                tipsummarydetails_cashrefundLeftTv.setText("Tip Total (+Gratuity)");
                tipsummarydetails_cashrefundLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(tipsummarydetails_cashrefundLeftTv);
                tipsummarydetails_cashrefundLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                tipsummarydetails_cashrefundLn.addView(tipsummarydetails_cashrefundLeftTv);

                TextView tipsummarydetails_cashrefundRightTv = new TextView(MainActivity.mContext);
                tipsummarydetails_cashrefundRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                tipsummarydetails_cashrefundRightTv.setText(salessummary_totaltips);
                tipsummarydetails_cashrefundRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(tipsummarydetails_cashrefundRightTv);
                tipsummarydetails_cashrefundRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                tipsummarydetails_cashrefundLn.addView(tipsummarydetails_cashrefundRightTv);

                printingLn.addView(tipsummarydetails_cashrefundLn);
                // --------------------------------------------------------------------------------------------------------------------

                // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------
                /** Tip Summary Details 끝 ********************************************************************************************************************/






                if (GlobalMemberValues.isCashoutreportPrintingByItemsNum("<3>")){
                    /** Cashiers 시작 ****************************************************************************************************************************/

                    // cashinout 타이틀 --------------------------------------------------------------------------------------------------
                    TextView cashierstitleTv = new TextView(MainActivity.mContext);
                    cashierstitleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                    cashierstitleTv.setGravity(Gravity.CENTER);
                    cashierstitleTv.setText("Cashiers");
                    cashierstitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    GlobalMemberValues.setTextStyleOnClover(cashierstitleTv);
                    printingLn.addView(cashierstitleTv);
                    // --------------------------------------------------------------------------------------------------------------------

                    JSONArray arr_cashierslist = new JSONArray();
                    try {
                        arr_cashierslist = data.getJSONArray("cashiersdata");
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

                    String cashier_empname = "";
                    String cashier_cashoutdate = "";
                    String cashier_totalcash = "";
                    String cashier_creditcard = "";
                    String cashier_giftcard = "";
                    String cashier_points = "";
                    String cashier_others = "";
                    String cashier_totalamountonhand = "";
                    String cashier_registerstartamount = "";
                    String cashier_netamountonhand = "";

                    if (arr_cashierslist.length() != 0) {
                        // employeelist not null!
                        int cnt = arr_cashierslist.length();
                        for (int i = 0; i < cnt; i++) {
                            cashier_empname = "";
                            cashier_cashoutdate = "";
                            cashier_totalcash = "";
                            cashier_creditcard = "";
                            cashier_giftcard = "";
                            cashier_points = "";
                            cashier_others = "";
                            cashier_totalamountonhand = "";
                            cashier_registerstartamount = "";
                            cashier_netamountonhand = "";

                            try {
                                JSONObject dic_jobc = arr_cashierslist.getJSONObject(i);

                                cashier_empname = dic_jobc.getString("cashier_empname");
                                cashier_cashoutdate = dic_jobc.getString("cashier_cashoutdate");
                                cashier_totalcash = dic_jobc.getString("cashier_totalcash");
                                cashier_creditcard = dic_jobc.getString("cashier_creditcard");
                                cashier_giftcard = dic_jobc.getString("cashier_giftcard");
                                cashier_points = dic_jobc.getString("cashier_points");
                                cashier_others = dic_jobc.getString("cashier_others");
                                cashier_totalamountonhand = dic_jobc.getString("cashier_totalamountonhand");
                                cashier_registerstartamount = dic_jobc.getString("cashier_registerstartamount");
                                cashier_netamountonhand = dic_jobc.getString("cashier_netamountonhand");

                            } catch (JSONException e) {
                                e.printStackTrace();
                            }

                            if (!GlobalMemberValues.isStrEmpty(cashier_empname)) {
                                // 직원별 내용 시작 ----------------------------------------------------------------------------------------------------------------------
                                // 직원별 내용 타이틀 ----------------------------------------------------------------------------------------------------
                                LinearLayout jjjjjtitleLn = new LinearLayout(MainActivity.mContext);
                                jjjjjtitleLn.setLayoutParams(matchParentParams);
                                jjjjjtitleLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView jjjjjtitleLeftTv = new TextView(MainActivity.mContext);
                                jjjjjtitleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                jjjjjtitleLeftTv.setText(cashier_empname);
                                jjjjjtitleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(jjjjjtitleLeftTv);
                                jjjjjtitleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                jjjjjtitleLn.addView(jjjjjtitleLeftTv);

                                TextView jjjjjtitleRightTv = new TextView(MainActivity.mContext);
                                jjjjjtitleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                jjjjjtitleRightTv.setText(cashier_cashoutdate);
                                jjjjjtitleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(jjjjjtitleRightTv);
                                jjjjjtitleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                jjjjjtitleLn.addView(jjjjjtitleRightTv);

                                printingLn.addView(jjjjjtitleLn);
                                // --------------------------------------------------------------------------------------------------------------------

                                // cashier_totalcash ----------------------------------------------------------------------------------------------------
                                LinearLayout cashier_totalcashLn = new LinearLayout(MainActivity.mContext);
                                cashier_totalcashLn.setLayoutParams(matchParentParams);
                                cashier_totalcashLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView cashier_totalcashLeftTv = new TextView(MainActivity.mContext);
                                cashier_totalcashLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_totalcashLeftTv.setText("");
                                cashier_totalcashLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_totalcashLeftTv);
                                cashier_totalcashLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                                cashier_totalcashLn.addView(cashier_totalcashLeftTv);

                                TextView cashier_totalcashMiddleTv = new TextView(MainActivity.mContext);
                                cashier_totalcashMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_totalcashMiddleTv.setText("Total Cash");
                                cashier_totalcashMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_totalcashMiddleTv);
                                cashier_totalcashMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                cashier_totalcashLn.addView(cashier_totalcashMiddleTv);

                                TextView cashier_totalcashRightTv = new TextView(MainActivity.mContext);
                                cashier_totalcashRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                cashier_totalcashRightTv.setText(cashier_totalcash);
                                cashier_totalcashRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_totalcashRightTv);
                                cashier_totalcashRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                                cashier_totalcashLn.addView(cashier_totalcashRightTv);

                                printingLn.addView(cashier_totalcashLn);
                                // --------------------------------------------------------------------------------------------------------------------


                                // cashier_creditcard ----------------------------------------------------------------------------------------------------
                                LinearLayout cashier_creditcardLn = new LinearLayout(MainActivity.mContext);
                                cashier_creditcardLn.setLayoutParams(matchParentParams);
                                cashier_creditcardLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView cashier_creditcardLeftTv = new TextView(MainActivity.mContext);
                                cashier_creditcardLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_creditcardLeftTv.setText("");
                                cashier_creditcardLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_creditcardLeftTv);
                                cashier_creditcardLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                                cashier_creditcardLn.addView(cashier_creditcardLeftTv);

                                TextView cashier_creditcardMiddleTv = new TextView(MainActivity.mContext);
                                cashier_creditcardMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_creditcardMiddleTv.setText("Total Credit Card");
                                cashier_creditcardMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_creditcardMiddleTv);
                                cashier_creditcardMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                cashier_creditcardLn.addView(cashier_creditcardMiddleTv);

                                TextView cashier_creditcardRightTv = new TextView(MainActivity.mContext);
                                cashier_creditcardRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                cashier_creditcardRightTv.setText(cashier_creditcard);
                                cashier_creditcardRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_creditcardRightTv);
                                cashier_creditcardRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                                cashier_creditcardLn.addView(cashier_creditcardRightTv);

                                printingLn.addView(cashier_creditcardLn);
                                // --------------------------------------------------------------------------------------------------------------------

                                // cashier_giftcard ----------------------------------------------------------------------------------------------------
                                LinearLayout cashier_giftcardLn = new LinearLayout(MainActivity.mContext);
                                cashier_giftcardLn.setLayoutParams(matchParentParams);
                                cashier_giftcardLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView cashier_giftcardLeftTv = new TextView(MainActivity.mContext);
                                cashier_giftcardLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_giftcardLeftTv.setText("");
                                cashier_giftcardLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_giftcardLeftTv);
                                cashier_giftcardLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                                cashier_giftcardLn.addView(cashier_giftcardLeftTv);

                                TextView cashier_giftcardMiddleTv = new TextView(MainActivity.mContext);
                                cashier_giftcardMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_giftcardMiddleTv.setText("Total Gift Card");
                                cashier_giftcardMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_giftcardMiddleTv);
                                cashier_giftcardMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                cashier_giftcardLn.addView(cashier_giftcardMiddleTv);

                                TextView cashier_giftcardRightTv = new TextView(MainActivity.mContext);
                                cashier_giftcardRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                cashier_giftcardRightTv.setText(cashier_giftcard);
                                cashier_giftcardRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_giftcardRightTv);
                                cashier_giftcardRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                                cashier_giftcardLn.addView(cashier_giftcardRightTv);

                                printingLn.addView(cashier_giftcardLn);
                                // --------------------------------------------------------------------------------------------------------------------


                                // cashier_points ----------------------------------------------------------------------------------------------------
                                LinearLayout cashier_pointsLn = new LinearLayout(MainActivity.mContext);
                                cashier_pointsLn.setLayoutParams(matchParentParams);
                                cashier_pointsLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView cashier_pointsLeftTv = new TextView(MainActivity.mContext);
                                cashier_pointsLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_pointsLeftTv.setText("");
                                cashier_pointsLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_pointsLeftTv);
                                cashier_pointsLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                                cashier_pointsLn.addView(cashier_pointsLeftTv);

                                TextView cashier_pointsMiddleTv = new TextView(MainActivity.mContext);
                                cashier_pointsMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_pointsMiddleTv.setText("Total Points");
                                cashier_pointsMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_pointsMiddleTv);
                                cashier_pointsMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                cashier_pointsLn.addView(cashier_pointsMiddleTv);

                                TextView cashier_pointsRightTv = new TextView(MainActivity.mContext);
                                cashier_pointsRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                cashier_pointsRightTv.setText(cashier_points);
                                cashier_pointsRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_pointsRightTv);
                                cashier_pointsRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                                cashier_pointsLn.addView(cashier_pointsRightTv);

                                printingLn.addView(cashier_pointsLn);
                                // -------------------------------------------------------------------------------------------------------


                                // cashier_others ----------------------------------------------------------------------------------------------------
                                LinearLayout cashier_othersLn = new LinearLayout(MainActivity.mContext);
                                cashier_othersLn.setLayoutParams(matchParentParams);
                                cashier_othersLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView cashier_othersLeftTv = new TextView(MainActivity.mContext);
                                cashier_othersLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_othersLeftTv.setText("");
                                cashier_othersLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_othersLeftTv);
                                cashier_othersLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                                cashier_othersLn.addView(cashier_othersLeftTv);

                                TextView cashier_othersMiddleTv = new TextView(MainActivity.mContext);
                                cashier_othersMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_othersMiddleTv.setText("Total Others");
                                cashier_othersMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_othersMiddleTv);
                                cashier_othersMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                cashier_othersLn.addView(cashier_othersMiddleTv);

                                TextView cashier_othersRightTv = new TextView(MainActivity.mContext);
                                cashier_othersRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                cashier_othersRightTv.setText(cashier_others);
                                cashier_othersRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_othersRightTv);
                                cashier_othersRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                                cashier_othersLn.addView(cashier_othersRightTv);

                                printingLn.addView(cashier_othersLn);
                                // -------------------------------------------------------------------------------------------------------

                                // 작은 한줄 점선 ------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getDotLineViewForCloverSmall(MainActivity.mContext));
                                // ---------------------------------------------------------------------------------------------------------------------------------

                                // cashier_totalamountonhand ----------------------------------------------------------------------------------------------------
                                LinearLayout cashier_totalamountonhandLn = new LinearLayout(MainActivity.mContext);
                                cashier_totalamountonhandLn.setLayoutParams(matchParentParams);
                                cashier_totalamountonhandLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView cashier_totalamountonhandLeftTv = new TextView(MainActivity.mContext);
                                cashier_totalamountonhandLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_totalamountonhandLeftTv.setText("");
                                cashier_totalamountonhandLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_totalamountonhandLeftTv);
                                cashier_totalamountonhandLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                                cashier_totalamountonhandLn.addView(cashier_totalamountonhandLeftTv);

                                TextView cashier_totalamountonhandMiddleTv = new TextView(MainActivity.mContext);
                                cashier_totalamountonhandMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_totalamountonhandMiddleTv.setText("Total Amount on Hand");
                                cashier_totalamountonhandMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_totalamountonhandMiddleTv);
                                cashier_totalamountonhandMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                cashier_totalamountonhandLn.addView(cashier_totalamountonhandMiddleTv);

                                TextView cashier_totalamountonhandRightTv = new TextView(MainActivity.mContext);
                                cashier_totalamountonhandRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                cashier_totalamountonhandRightTv.setText(cashier_totalamountonhand);
                                cashier_totalamountonhandRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_totalamountonhandRightTv);
                                cashier_totalamountonhandRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                                cashier_totalamountonhandLn.addView(cashier_totalamountonhandRightTv);

                                printingLn.addView(cashier_totalamountonhandLn);
                                // -------------------------------------------------------------------------------------------------------

                                // cashier_registerstartamount ----------------------------------------------------------------------------------------------------
                                LinearLayout cashier_registerstartamountLn = new LinearLayout(MainActivity.mContext);
                                cashier_registerstartamountLn.setLayoutParams(matchParentParams);
                                cashier_registerstartamountLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView cashier_registerstartamountLeftTv = new TextView(MainActivity.mContext);
                                cashier_registerstartamountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_registerstartamountLeftTv.setText("");
                                cashier_registerstartamountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_registerstartamountLeftTv);
                                cashier_registerstartamountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                                cashier_registerstartamountLn.addView(cashier_registerstartamountLeftTv);

                                TextView cashier_registerstartamountMiddleTv = new TextView(MainActivity.mContext);
                                cashier_registerstartamountMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_registerstartamountMiddleTv.setText("Register Start Amount");
                                cashier_registerstartamountMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_registerstartamountMiddleTv);
                                cashier_registerstartamountMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                cashier_registerstartamountLn.addView(cashier_registerstartamountMiddleTv);

                                TextView cashier_registerstartamountRightTv = new TextView(MainActivity.mContext);
                                cashier_registerstartamountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                cashier_registerstartamountRightTv.setText(cashier_registerstartamount);
                                cashier_registerstartamountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_registerstartamountRightTv);
                                cashier_registerstartamountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                                cashier_registerstartamountLn.addView(cashier_registerstartamountRightTv);

                                printingLn.addView(cashier_registerstartamountLn);
                                // -------------------------------------------------------------------------------------------------------

                                // 작은 한줄 점선 ------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getDotLineViewForCloverSmall(MainActivity.mContext));
                                // ---------------------------------------------------------------------------------------------------------------------------------

                                // cashier_netamountonhand ----------------------------------------------------------------------------------------------------
                                LinearLayout cashier_netamountonhandLn = new LinearLayout(MainActivity.mContext);
                                cashier_netamountonhandLn.setLayoutParams(matchParentParams);
                                cashier_netamountonhandLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView cashier_netamountonhandLeftTv = new TextView(MainActivity.mContext);
                                cashier_netamountonhandLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_netamountonhandLeftTv.setText("");
                                cashier_netamountonhandLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_netamountonhandLeftTv);
                                cashier_netamountonhandLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.3f));
                                cashier_netamountonhandLn.addView(cashier_netamountonhandLeftTv);

                                TextView cashier_netamountonhandMiddleTv = new TextView(MainActivity.mContext);
                                cashier_netamountonhandMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                cashier_netamountonhandMiddleTv.setText("Net Amount on hand");
                                cashier_netamountonhandMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_netamountonhandMiddleTv);
                                cashier_netamountonhandMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                cashier_netamountonhandLn.addView(cashier_netamountonhandMiddleTv);

                                TextView cashier_netamountonhandRightTv = new TextView(MainActivity.mContext);
                                cashier_netamountonhandRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                                cashier_netamountonhandRightTv.setText(cashier_netamountonhand);
                                cashier_netamountonhandRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(cashier_netamountonhandRightTv);
                                cashier_netamountonhandRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.2f));
                                cashier_netamountonhandLn.addView(cashier_netamountonhandRightTv);

                                printingLn.addView(cashier_netamountonhandLn);
                                // -------------------------------------------------------------------------------------------------------

                                // 작은 한줄 점선 ------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getDotLineViewForCloverMedium(MainActivity.mContext));
                                // ---------------------------------------------------------------------------------------------------------------------------------

                                // 직원별 내용 끝 ----------------------------------------------------------------------------------------------------------------------
                            }
                        }
                    }

                    // 두줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    //printingLn.addView(GlobalMemberValues.getDoubleDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    /** Cashiers 끝 ****************************************************************************************************************************/
                }


                if (GlobalMemberValues.isCashoutreportPrintingByItemsNum("<4>")){
                    /** Gift Card Summary 시작 ******************************************************************************************************************/
                    // Gift Card Summary 타이틀 -----------------------------------------------------------------------------------------------------
                    TextView giftcardsummarytitleTv = new TextView(MainActivity.mContext);
                    giftcardsummarytitleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                    giftcardsummarytitleTv.setGravity(Gravity.CENTER);
                    giftcardsummarytitleTv.setText("Gift Card Summary");
                    giftcardsummarytitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    GlobalMemberValues.setTextStyleOnClover(giftcardsummarytitleTv);
                    printingLn.addView(giftcardsummarytitleTv);
                    // --------------------------------------------------------------------------------------------------------------------

                    // Gift Card Redeemed ----------------------------------------------------------------------------------------------------
                    LinearLayout giftcardsummary_redeemedLn = new LinearLayout(MainActivity.mContext);
                    giftcardsummary_redeemedLn.setLayoutParams(matchParentParams);
                    giftcardsummary_redeemedLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView giftcardsummary_redeemedLeftTv = new TextView(MainActivity.mContext);
                    giftcardsummary_redeemedLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    giftcardsummary_redeemedLeftTv.setText("Gift Card Redeemed\n");
                    giftcardsummary_redeemedLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(giftcardsummary_redeemedLeftTv);
                    giftcardsummary_redeemedLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    giftcardsummary_redeemedLn.addView(giftcardsummary_redeemedLeftTv);

                    TextView giftcardsummary_redeemedRightTv = new TextView(MainActivity.mContext);
                    giftcardsummary_redeemedRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    giftcardsummary_redeemedRightTv.setText(giftcardsummary_redeemed);
                    giftcardsummary_redeemedRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(giftcardsummary_redeemedRightTv);
                    giftcardsummary_redeemedRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    giftcardsummary_redeemedLn.addView(giftcardsummary_redeemedRightTv);

                    printingLn.addView(giftcardsummary_redeemedLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // New Gift Cert. Sales ------------------------------------------------------------------------------------------------
                    LinearLayout giftcardsummary_newcertsalesLn = new LinearLayout(MainActivity.mContext);
                    giftcardsummary_newcertsalesLn.setLayoutParams(matchParentParams);
                    giftcardsummary_newcertsalesLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView giftcardsummary_newcertsalesLeftTv = new TextView(MainActivity.mContext);
                    giftcardsummary_newcertsalesLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    giftcardsummary_newcertsalesLeftTv.setText("New Gift Cert. Sales");
                    giftcardsummary_newcertsalesLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(giftcardsummary_newcertsalesLeftTv);
                    giftcardsummary_newcertsalesLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    giftcardsummary_newcertsalesLn.addView(giftcardsummary_newcertsalesLeftTv);

                    TextView giftcardsummary_newcertsalesRightTv = new TextView(MainActivity.mContext);
                    giftcardsummary_newcertsalesRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    giftcardsummary_newcertsalesRightTv.setText(giftcardsummary_newcertsales);
                    giftcardsummary_newcertsalesRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(giftcardsummary_newcertsalesRightTv);
                    giftcardsummary_newcertsalesRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    giftcardsummary_newcertsalesLn.addView(giftcardsummary_newcertsalesRightTv);

                    printingLn.addView(giftcardsummary_newcertsalesLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------

                    /** Gift Card Summary 끝 ********************************************************************************************************************/
                }





                /** Sales by Third Party App 시작 ***********************************************************************************************************/
                JSONArray arr_salesbythirdpartyappList = new JSONArray();
                try {
                    arr_salesbythirdpartyappList = data.getJSONArray("salesbythirdpartyapp");
                } catch (JSONException e) {
                    e.printStackTrace();
                }

                if (arr_salesbythirdpartyappList.length() != 0) {
                    // Sales by Third Party App 타이틀 -----------------------------------------------------------------------------------------------------
                    TextView thirdpartyapptitleTv = new TextView(MainActivity.mContext);
                    thirdpartyapptitleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                    thirdpartyapptitleTv.setGravity(Gravity.CENTER);
                    thirdpartyapptitleTv.setText("Sales by Third Party App");
                    thirdpartyapptitleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    GlobalMemberValues.setTextStyleOnClover(thirdpartyapptitleTv);
                    printingLn.addView(thirdpartyapptitleTv);
                    // --------------------------------------------------------------------------------------------------------------------

                    // Sales by Third Party App 리스트 타이틀 -----------------------------------------------------------------------------
                    LinearLayout thirdpartyapp_titleLn = new LinearLayout(MainActivity.mContext);
                    thirdpartyapp_titleLn.setLayoutParams(matchParentParams);
                    thirdpartyapp_titleLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView thirdpartyapp_titleLeftTv = new TextView(MainActivity.mContext);
                    thirdpartyapp_titleLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    thirdpartyapp_titleLeftTv.setText("Sales");
                    thirdpartyapp_titleLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(thirdpartyapp_titleLeftTv);
                    thirdpartyapp_titleLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    thirdpartyapp_titleLn.addView(thirdpartyapp_titleLeftTv);

                    TextView thirdpartyapp_titleMiddleTv = new TextView(MainActivity.mContext);
                    thirdpartyapp_titleMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                    thirdpartyapp_titleMiddleTv.setText("Count");
                    thirdpartyapp_titleMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(thirdpartyapp_titleMiddleTv);
                    thirdpartyapp_titleMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.5f));
                    thirdpartyapp_titleLn.addView(thirdpartyapp_titleMiddleTv);

                    TextView thirdpartyapp_titleRightTv = new TextView(MainActivity.mContext);
                    thirdpartyapp_titleRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    thirdpartyapp_titleRightTv.setText("Amount");
                    thirdpartyapp_titleRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                    GlobalMemberValues.setTextStyleOnClover(thirdpartyapp_titleRightTv);
                    thirdpartyapp_titleRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    thirdpartyapp_titleLn.addView(thirdpartyapp_titleRightTv);

                    printingLn.addView(thirdpartyapp_titleLn);
                    // --------------------------------------------------------------------------------------------------------------------

                    String salesbythirdpartyapp_name = "";
                    String salesbythirdpartyapp_count = "";
                    String salesbythirdpartyapp_amount = "";

                    // employeelist not null!
                    int cnt = arr_salesbythirdpartyappList.length();
                    for (int i = 0; i < cnt; i++) {
                        salesbythirdpartyapp_name = "";
                        salesbythirdpartyapp_count = "";
                        salesbythirdpartyapp_amount = "";

                        try {
                            JSONObject dic_jobc = arr_salesbythirdpartyappList.getJSONObject(i);

                            salesbythirdpartyapp_name = dic_jobc.getString("salesbythirdpartyapp_name");
                            salesbythirdpartyapp_count = dic_jobc.getString("salesbythirdpartyapp_count");
                            salesbythirdpartyapp_amount = dic_jobc.getString("salesbythirdpartyapp_amount");

                        } catch (JSONException e) {
                            e.printStackTrace();
                        }

                        // Sales by Third Party App 리스트 타이틀 -----------------------------------------------------------------------------
                        LinearLayout thirdpartyapp_listLn = new LinearLayout(MainActivity.mContext);
                        thirdpartyapp_listLn.setLayoutParams(matchParentParams);
                        thirdpartyapp_listLn.setOrientation(LinearLayout.HORIZONTAL);

                        TextView thirdpartyapp_listLeftTv = new TextView(MainActivity.mContext);
                        thirdpartyapp_listLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                        thirdpartyapp_listLeftTv.setText(salesbythirdpartyapp_count);
                        thirdpartyapp_listLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(thirdpartyapp_listLeftTv);
                        thirdpartyapp_listLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        thirdpartyapp_listLn.addView(thirdpartyapp_listLeftTv);

                        TextView thirdpartyapp_listMiddleTv = new TextView(MainActivity.mContext);
                        thirdpartyapp_listMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                        thirdpartyapp_listMiddleTv.setText(salesbythirdpartyapp_amount);
                        thirdpartyapp_listMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(thirdpartyapp_listMiddleTv);
                        thirdpartyapp_listMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.5f));
                        thirdpartyapp_listLn.addView(thirdpartyapp_listMiddleTv);

                        TextView thirdpartyapp_listRightTv = new TextView(MainActivity.mContext);
                        thirdpartyapp_listRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                        thirdpartyapp_listRightTv.setText(salesbythirdpartyapp_name);
                        thirdpartyapp_listRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                        GlobalMemberValues.setTextStyleOnClover(thirdpartyapp_listRightTv);
                        thirdpartyapp_listRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                        thirdpartyapp_listLn.addView(thirdpartyapp_listRightTv);

                        printingLn.addView(thirdpartyapp_listLn);
                        // --------------------------------------------------------------------------------------------------------------------
                    }

                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }

                /** Sales by Third Party App 끝 *************************************************************************************************************/

                if (GlobalMemberValues.isCashoutreportPrintingByItemsNum("<5>")){
                    //////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    // category sales
                    JSONArray arr_category_sales = new JSONArray();
                    String str_category_sales = "";
                    try {
                        str_category_sales = data.getString("category_sales");
                        arr_category_sales = new JSONArray(str_category_sales.split("-WHY-"));
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

                    if (arr_category_sales.length() != 0) {
                        // Category Name 타이틀 -----------------------------------------------------------------------------------------------------
                        TextView category_name_title = new TextView(MainActivity.mContext);
                        category_name_title.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                        category_name_title.setGravity(Gravity.CENTER);
                        category_name_title.setText("CATEGORY SALES");
                        category_name_title.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                        GlobalMemberValues.setTextStyleOnClover(category_name_title);
                        printingLn.addView(category_name_title);
                        // --------------------------------------------------------------------------------------------------------------------

                        String category_name = "";
                        String category_price = "";
                        String category_qty = "";

                        String category_list = "";

                        int cnt = arr_category_sales.length();
                        for (int i = 0; i < cnt; i++) {
                            try {
                                category_list = arr_category_sales.getString(i);
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }
                            category_name = "";
                            category_price = "";
                            category_qty = "";

                            if (category_list != null) {
                                String tempCategoryInfoArr[] = category_list.split("-JJJ-");
                                category_name = tempCategoryInfoArr[0];
                                if (tempCategoryInfoArr.length > 1) {
                                    category_price = tempCategoryInfoArr[1];
                                }
                                if (tempCategoryInfoArr.length > 2) {
                                    category_qty = tempCategoryInfoArr[2];
                                }
                            }

//                            category_name = category_list.split("-JJJ-")[0];
//                            category_price = category_list.split("-JJJ-")[1];
//                            category_qty = category_list.split("-JJJ-")[2];

                            LinearLayout category_name_listLn = new LinearLayout(MainActivity.mContext);
                            category_name_listLn.setLayoutParams(matchParentParams);
                            category_name_listLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView category_name_listLeftTv = new TextView(MainActivity.mContext);
                            category_name_listLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            category_name_listLeftTv.setText(category_name);
                            category_name_listLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(category_name_listLeftTv);
                            category_name_listLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            category_name_listLn.addView(category_name_listLeftTv);

                            TextView category_name_listMiddleTv = new TextView(MainActivity.mContext);
                            category_name_listMiddleTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                            category_name_listMiddleTv.setText(category_qty);
                            category_name_listMiddleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(category_name_listMiddleTv);
                            category_name_listMiddleTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.5f));
                            category_name_listLn.addView(category_name_listMiddleTv);

                            TextView category_name_listRightTv = new TextView(MainActivity.mContext);
                            category_name_listRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            category_name_listRightTv.setText(category_price);
                            category_name_listRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(category_name_listRightTv);
                            category_name_listRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            category_name_listLn.addView(category_name_listRightTv);

                            printingLn.addView(category_name_listLn);
                            // --------------------------------------------------------------------------------------------------------------------
                        }

                        // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                        // ---------------------------------------------------------------------------------------------------------------------------------
                    }

                    // category sales
                    //////////////////////////////////////////////////////////////////////////////////////////////////////////////
                }

                if (!salessummary_total_formulti.isEmpty()){
                    JSONArray arr_salessummary_total_formulti = new JSONArray();
                    JSONArray arr_salessummary_total_formulti_detail = new JSONArray();
                    String str_salessummary_total_formulti = "";
                    try {
                        str_salessummary_total_formulti = data.getString("salessummary_total_formulti");

                        TextView salessummary_total_formulti_titleTv = new TextView(MainActivity.mContext);
                        salessummary_total_formulti_titleTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                        salessummary_total_formulti_titleTv.setGravity(Gravity.CENTER);
                        salessummary_total_formulti_titleTv.setText("Sales By Station");
                        salessummary_total_formulti_titleTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                        GlobalMemberValues.setTextStyleOnClover(salessummary_total_formulti_titleTv);
                        printingLn.addView(salessummary_total_formulti_titleTv);

                        arr_salessummary_total_formulti = new JSONArray(str_salessummary_total_formulti.split("-WANHAYE-"));
                        for(int i = 0 ; i < arr_salessummary_total_formulti.length(); i++){
                            String a = (String) arr_salessummary_total_formulti.getString(i);
                            arr_salessummary_total_formulti_detail = new JSONArray(a.split("-JJJ-"));

                            // salessummary_total_formulti ----------------------------------------------------------------------------------------------------
                            LinearLayout salessummary_total_formulti_Ln = new LinearLayout(MainActivity.mContext);
                            salessummary_total_formulti_Ln.setLayoutParams(matchParentParams);
                            salessummary_total_formulti_Ln.setOrientation(LinearLayout.HORIZONTAL);

                            TextView salessummary_total_formulti_LeftTv = new TextView(MainActivity.mContext);
                            salessummary_total_formulti_LeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            salessummary_total_formulti_LeftTv.setText(arr_salessummary_total_formulti_detail.getString(0));
                            salessummary_total_formulti_LeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(salessummary_total_formulti_LeftTv);
                            salessummary_total_formulti_LeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            salessummary_total_formulti_Ln.addView(salessummary_total_formulti_LeftTv);

                            TextView salessummary_total_formulti_RightTv = new TextView(MainActivity.mContext);
                            salessummary_total_formulti_RightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            salessummary_total_formulti_RightTv.setText(arr_salessummary_total_formulti_detail.getString(1));
                            salessummary_total_formulti_RightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(salessummary_total_formulti_RightTv);
                            salessummary_total_formulti_RightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            salessummary_total_formulti_Ln.addView(salessummary_total_formulti_RightTv);

                            printingLn.addView(salessummary_total_formulti_Ln);
                            // --------------------------------------------------------------------------------------------------------------------

                        }
                        printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

                }


                // Printed ------------------------------------------------------------------------------------------------------------
                LinearLayout printedLn = new LinearLayout(MainActivity.mContext);
                printedLn.setLayoutParams(matchParentParams);
                printedLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView printedLeftTv = new TextView(MainActivity.mContext);
                printedLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                printedLeftTv.setText("Printed");
                printedLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(printedLeftTv);
                printedLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                printedLn.addView(printedLeftTv);

                TextView printedRightTv = new TextView(MainActivity.mContext);
                printedRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                printedRightTv.setText(nowTime + "  " + nowDate);
                printedRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(printedRightTv);
                printedRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                printedLn.addView(printedRightTv);

                printingLn.addView(printedLn);
                // --------------------------------------------------------------------------------------------------------------------
            }

        };
        thread.start();

        try {
            thread.join();
        } catch(InterruptedException e) {}

        return printingLn;
    }

    public static ArrayList<LinearLayout> makingLinearLayout_menu(final JSONObject data) {
        if (data == null) {
            return  null;
        }

        GlobalMemberValues.logWrite("cloverprintinglog", "받은 데이터 : " + data.toString() + "\n");

        final LinearLayout.LayoutParams matchParentParams
                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32);
        matchParentParams.setMargins(0, 0, 0, 0);

        String str_reprintyn_temp = "";
        if (data.toString().contains("reprintyn")) {
            str_reprintyn_temp = GlobalMemberValues.getDataInJsonData(data, "reprintyn");
        } else {
            str_reprintyn_temp = "N";
        }
//        if (!str_reprintyn_temp.equals("N")){
//            return null;
//        }

        // 가격표시앞에 $ 표시여부
        String tempDollarStr = "";
        if (GlobalMemberValues.ISDISPLAYPRICEDOLLAR) {
            tempDollarStr = "$";
        }
        final String finalTempDollarStr = tempDollarStr;

        final double[] mTotalTipAmount = {0};
        final ArrayList<LinearLayout> arr_linearLayout_return = new ArrayList<>();
        final ArrayList<String> tempArrListStrFile = new ArrayList<String>();
        Thread thread2 = new Thread() {
            @SuppressLint("LongLogTag")
            @Override
            public void run(){
                String main_Text = "";

                String merchantcustomerText = "";

                String str_saledate = "";
                String str_receiptno = "";
                String str_change = "";
                String str_cashtendered = "";
                String str_employeename = "";
                JSONArray jsonArray_saleitemlist = new JSONArray();
                String str_itemCategoryName = "";

                //
                String str_itemCategoryName2 = "";
                //

                String str_itemqty = "";
                String str_itemname = "";
                String str_itemamount = "";
                String str_itemprice = "";
                String str_itemdcextrastr = "";
                String str_itemtaxexempt = "";
                String str_subtotal = "";
                JSONArray jsonArray_creditcardtransaction = new JSONArray();
                String str_cardsalonsalescardidx = "";
                String str_cardchangeamount = "";
                String str_cardtype = "";
                String str_cardaid = "";
                String str_cardtvr = "";
                String str_cardtsi = "";
                String str_creditcardnumber = "";
                String str_cardrefnumber = "";
                String str_cardauthnumber = "";
                String str_storeaddress2 = "";
                String str_storeaddress1 = "";
                String str_giftcardtendered = "";
                String str_tax = "";
                String str_creditcardtendered = "";
                String str_checktendered = "";
                String str_pointtendered = "";
                String str_storestate = "";
                String str_storename = "";
                String str_storecity = "";
                String str_storezip = "";
                String str_saletime = "";
                String str_storephone = "";
                String str_totalamount = "";

                String str_customername = "";
                String str_customerphonenum = "";
                String str_customeraddress = "";
                String str_customermemo = "";

                String str_alldiscountextrstr = "";
                String str_totalextradiscountprice="";

                String str_receiptprinttype = "";

                String str_cardsalesignatureimageyn = "N";

                String str_signatureTxt = "";

                String str_reprintyn = "N";

                String str_tipamount = "";

                String str_cardtipamount = "0";

                String str_optiontxt = "";
                String str_optionprice = "0.0";
                String str_additionaltxt1 = "";
                String str_additionalprice1 = "0.0";
                String str_additionaltxt2 = "";
                String str_additionalprice2 = "0.0";
                String str_kitchenmemo = "";
                String str_soldoutmemo = "";

                String str_deliverytakeaway = "";
                String str_deliverypickupfee = "";

                String str_receiptfooter = "";

                String str_customerOrderNumber = "";
                String str_customerPagerNumber = "";

                String str_returntipamount = "";
                String str_returnpickupdeliveryfee = "";

                String str_each_discount_extra_price = "";

                // Restaurant 관련
                String str_restaurant_tablename = "";
                String str_restaurant_tablepeoplecnt = "";

                double d_each_discount_total_price = 0;
                double d_each_extra_total_price = 0;

                // cardholder
                String str_cardholder = "";

                // tipcash
                String str_tipcash = "";
                // tipcard
                String str_tipcard = "";

                String str_service_fee = "";

                String temp_str_itemCategoryName = "";

                String str_billtype = "";
                String str_billcartidx = "";

                try {
                    str_saledate = GlobalMemberValues.getDataInJsonData(data, "saledate");
                    str_receiptno = GlobalMemberValues.getDataInJsonData(data, "receiptno");
                    str_cashtendered = GlobalMemberValues.getDataInJsonData(data, "cashtendered");
                    str_employeename = GlobalMemberValues.getDataInJsonData(data, "employeename");
                    str_subtotal = GlobalMemberValues.getDataInJsonData(data, "subtotal");
                    str_storeaddress2 = GlobalMemberValues.getDataInJsonData(data, "storeaddress2");
                    str_storeaddress1 = GlobalMemberValues.getDataInJsonData(data, "storeaddress1");
                    str_giftcardtendered = GlobalMemberValues.getDataInJsonData(data, "giftcardtendered");
                    str_tax = GlobalMemberValues.getDataInJsonData(data, "tax");
                    str_creditcardtendered = GlobalMemberValues.getDataInJsonData(data, "creditcardtendered");
                    str_checktendered = GlobalMemberValues.getDataInJsonData(data, "checktendered");
                    str_pointtendered = GlobalMemberValues.getDataInJsonData(data, "pointtendered");
                    str_storestate = GlobalMemberValues.getDataInJsonData(data, "storestate");
                    str_storename  = GlobalMemberValues.getDataInJsonData(data, "storename");
                    str_storecity = GlobalMemberValues.getDataInJsonData(data, "storecity");
                    str_storezip = GlobalMemberValues.getDataInJsonData(data, "storezip");
                    str_saletime = GlobalMemberValues.getDataInJsonData(data, "saletime");
                    str_storephone = GlobalMemberValues.getDataInJsonData(data, "storephone");
                    str_totalamount = GlobalMemberValues.getDataInJsonData(data, "totalamount");
                    str_customername = GlobalMemberValues.getDataInJsonData(data, "customername");

                    str_receiptprinttype = GlobalMemberValues.getDataInJsonData(data, "receiptprinttype");

                    str_change = GlobalMemberValues.getDataInJsonData(data, "change");
                    str_alldiscountextrstr = GlobalMemberValues.getDataInJsonData(data, "alldiscountextrstr");
                    str_totalextradiscountprice = GlobalMemberValues.getDataInJsonData(data, "totalextradiscountprice");

                    str_deliverypickupfee = GlobalMemberValues.getDataInJsonData(data, "deliverypickupfee");
                    str_receiptfooter = GlobalMemberValues.getDataInJsonData(data, "receiptfooter");
                    str_customerOrderNumber = GlobalMemberValues.getDataInJsonData(data, "customerordernumber");
                    str_customerPagerNumber = GlobalMemberValues.getDataInJsonData(data, "customerpagernumber");
                    str_tipamount = GlobalMemberValues.getDataInJsonData(data, "tipamount");
                    str_customerphonenum = GlobalMemberValues.getDataInJsonData(data, "customerphonenum");
                    str_customeraddress = GlobalMemberValues.getDataInJsonData(data, "customeraddress");

                    // jihun customer memo
                    str_customermemo = GlobalMemberValues.getDataInJsonData(data,"customermemo");

                    str_returntipamount = GlobalMemberValues.getDataInJsonData(data, "returntipamount");
                    str_returnpickupdeliveryfee = GlobalMemberValues.getDataInJsonData(data, "returnpickupdeliveryfee");

                    // Restaurant 관련
                    str_restaurant_tablename = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablename");
                    str_restaurant_tablepeoplecnt = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablepeoplecnt");

                    if (data.toString().contains("reprintyn")) {
                        str_reprintyn = GlobalMemberValues.getDataInJsonData(data, "reprintyn");
                    } else {
                        str_reprintyn = "N";
                    }

                    if (data.toString().contains("deliverytakeaway")) {
                        str_deliverytakeaway = GlobalMemberValues.getDataInJsonData(data, "deliverytakeaway");
                    } else {
                        str_deliverytakeaway = "T";
                    }

                    if (data.getJSONArray("saleitemlist") != null) {
                        jsonArray_saleitemlist = data.getJSONArray("saleitemlist");
                    }

                    if (data.toString().contains("creditcardtransaction")) {
                        jsonArray_creditcardtransaction = data.getJSONArray("creditcardtransaction");
                    }

                    // tip cash tip card
                    if (data.toString().contains("tipcash")){
                        str_tipcash = GlobalMemberValues.getDataInJsonData(data, "tipcash");
                    }

                    if (data.toString().contains("tipcard")){
                        str_tipcard = GlobalMemberValues.getDataInJsonData(data, "tipcard");
                    }

                    // service fee
                    if (data.toString().contains("servicefee")){
                        str_service_fee = GlobalMemberValues.getDataInJsonData(data, "servicefee");
                    }
                    str_billtype = data.optString("billtype","");
                    str_billcartidx = data.optString("billcartidx","");

                } catch (JSONException e){
                    Log.e("PaymentPrint get str err!!!", e.toString());
                    GlobalMemberValues.logWrite("clovermakinglnerrorlog", "에러내용 : " + e.toString() + "\n");
                }

                if (GlobalMemberValues.isStrEmpty(str_customerOrderNumber)) {
                    str_customerOrderNumber = MainActivity.mDbInit.dbExecuteReadReturnString(
                            " select customerordernumber from salon_sales where salesCode = '" + str_receiptno + "' ");
                }

                //////
//                LinearLayout arr_linearLayout[] = new LinearLayout[jsonArray_saleitemlist.length()];

                String[] temp_billcartidx_arr = null;
                if (!str_billcartidx.isEmpty()){
                    if (!str_billtype.isEmpty() && str_billtype.equals("0")){
                        temp_billcartidx_arr = str_billcartidx.split(",");

                        if (jsonArray_saleitemlist.length() != 0) {
                            ArrayList<JSONObject> tempArr = new ArrayList<JSONObject>();
                            for (int ii = 0; ii < jsonArray_saleitemlist.length() ; ii++){
                                try {
                                    for (int iii = 0; iii < temp_billcartidx_arr.length; iii++){

                                        if (temp_billcartidx_arr[iii].equals(jsonArray_saleitemlist.getJSONObject(ii).getString("billcartidx"))){
                                            // 같은 값이 있다?.. 그럼 출력 ㅇㅇ
                                            tempArr.add(jsonArray_saleitemlist.getJSONObject(ii));
                                        } else {
                                            // 같은 값이 없으면? 추가 안함.
                                        }

                                    }
                                } catch (JSONException e) {
                                    e.printStackTrace();
                                }
                            }
                            jsonArray_saleitemlist = new JSONArray(tempArr);
                        }
                    }
                }


                if (jsonArray_saleitemlist.length() != 0) {
                    int count = jsonArray_saleitemlist.length();

                    LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
                    printingLn.setLayoutParams(new LinearLayout.LayoutParams(GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, LinearLayout.LayoutParams.MATCH_PARENT));
                    printingLn.setOrientation(LinearLayout.VERTICAL);
                    printingLn.setBackgroundColor(Color.parseColor("#ffffff"));

                    for (int i = 0; i < count; i++) {
                        try {

                            JSONObject dic_item = jsonArray_saleitemlist.getJSONObject(i);
                            str_itemCategoryName = dic_item.optString("itemCategoryName","");
                            str_itemCategoryName2 = dic_item.optString("itemCategoryName2","");

                            if (temp_str_itemCategoryName.equals("")){

                            } else {
                                if (temp_str_itemCategoryName.equals(str_itemCategoryName)){

                                } else {
                                    arr_linearLayout_return.add(printingLn);
                                    printingLn = new LinearLayout(MainActivity.mContext);
                                    printingLn.setLayoutParams(new LinearLayout.LayoutParams(GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, LinearLayout.LayoutParams.MATCH_PARENT));
                                    printingLn.setOrientation(LinearLayout.VERTICAL);
                                    printingLn.setBackgroundColor(Color.parseColor("#ffffff"));
                                }

                            }

                            if (!temp_str_itemCategoryName.equals(str_itemCategoryName)){


                                if (GlobalMemberValues.isShowOrderNumberOnExchangeReceipt()){
                                    if (!str_restaurant_tablename.isEmpty()){
                                        int fsize = 20;
                                        if (GlobalMemberValues.isEloPro()) {
                                            fsize = 50;
                                        } else {
                                            if (GlobalMemberValues.isDevicePAXFromDB()) {
                                                fsize = 30;
                                            }
                                        }
                                        if (GlobalMemberValues.getValueOnReceiptSetting("tablenumber_yn","4").equals("Y")){
                                            TextView pagerNoTv = new TextView(MainActivity.mContext);
                                            pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                                            pagerNoTv.setGravity(Gravity.CENTER);
                                            pagerNoTv.setText(str_restaurant_tablename);
                                            pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, (GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + fsize) * 2);
                                            pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                                            GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                                            printingLn.addView(pagerNoTv);
                                        }

                                    }
                                }

                                if (GlobalMemberValues.isShowPagerNumberOnExchangeReceipt()){
                                    String tempTitleTxt = "";
                                    if (!str_customerPagerNumber.isEmpty()){
                                        int fsize = 20;
                                        if (GlobalMemberValues.isEloPro()) {
                                            fsize = 50;
                                        } else {
                                            if (GlobalMemberValues.isDevicePAXFromDB()) {
                                                fsize = 30;
                                            }
                                        }
                                        if (GlobalMemberValues.getValueOnReceiptSetting("pagernumber_yn","4").equals("Y")){
                                            if (GlobalMemberValues.getValueOnReceiptSetting2("pagernumberalignment","4").equals("T")){
                                                TextView pagerNoTv = new TextView(MainActivity.mContext);
                                                pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                                                pagerNoTv.setGravity(Gravity.CENTER);
                                                pagerNoTv.setText(tempTitleTxt + GlobalMemberValues.getPagerNumberHeaderTxt() + str_customerPagerNumber);
                                                pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, (GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + fsize) * 2);
                                                pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                                                GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                                                printingLn.addView(pagerNoTv);
                                            }

                                        }

                                    }
                                }

                                GlobalMemberValues globalMemberValues = new GlobalMemberValues();
                                GlobalMemberValues.logWrite("restaurantdatalog", "getpostype : " + globalMemberValues.getPOSType().toUpperCase() + "\n");
                                if ((globalMemberValues.getPOSType().toUpperCase() == "R" || globalMemberValues.getPOSType().toUpperCase().equals("R"))
                                        && GlobalMemberValues.now_saletypeisrestaurant) {
                                    //GlobalMemberValues.logWrite("restaurantdatalog", "여기..... jjj" + "\n");

                                    if (GlobalMemberValues.isShowOrderNumberOnExchangeReceipt()){

                                    }
                                    // Restaurant 관련
                                    if (!GlobalMemberValues.isStrEmpty(str_restaurant_tablename)) {
                                        int fsize = 20;
                                        if (GlobalMemberValues.isEloPro()) {
                                            fsize = 50;
                                        } else {
                                            if (GlobalMemberValues.isDevicePAXFromDB()) {
                                                fsize = 30;
                                            }
                                        }
                                        if (GlobalMemberValues.getValueOnReceiptSetting("tablenumber_yn","4").equals("Y")){
                                            TextView pagerNoTv = new TextView(MainActivity.mContext);
                                            pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                                            pagerNoTv.setGravity(Gravity.CENTER);
                                            pagerNoTv.setText(str_restaurant_tablename);
                                            pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + fsize);
                                            pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                                            GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                                            printingLn.addView(pagerNoTv);

                                            // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                            printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                                        }

                                    }

                                    // ------------------------------------------------------------------------------------------------------------------------------
                                } else {
                                    // Restaurant 관련
//                                    if (!GlobalMemberValues.isStrEmpty(str_restaurant_tablename)) {
//                                        int fsize = 20;
//                                        if (GlobalMemberValues.isEloPro()) {
//                                            fsize = 50;
//                                        } else {
//                                            if (GlobalMemberValues.isDevicePAXFromDB()) {
//                                                fsize = 30;
//                                            }
//                                        }
//
//                                        TextView pagerNoTv = new TextView(MainActivity.mContext);
//                                        pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
//                                        pagerNoTv.setGravity(Gravity.CENTER);
//                                        pagerNoTv.setText(str_restaurant_tablename);
//                                        pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + fsize);
//                                        pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
//                                        GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
//                                        printingLn.addView(pagerNoTv);
//
//                                        // 빈공간 -----------------------------------------------------------------------------------------------------------------------
//                                        printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
//                                    }


                                }

                                // 로고 프린팅
                                String logoprintingonreceiptyn = MainActivity.mDbInit.dbExecuteReadReturnString(
                                        " select logoprintingonreceiptyn from salon_storestationsettings_deviceprinter ");
                                if (GlobalMemberValues.isStrEmpty(logoprintingonreceiptyn)) {
                                    logoprintingonreceiptyn = "N";
                                }
                                if (logoprintingonreceiptyn == "Y" || logoprintingonreceiptyn.equals("Y")) {
                                    File path = GlobalMemberValues.ADFILELOCALPATH;
                                    File isFile = new File(path, "receiptlogoimg.png"); //파일명까지 포함함 경로의 File 객체 생성
                                    String adImage = isFile.getPath();
                                    if (new File(adImage).exists()) {
                                        ImageView logoimg = new ImageView(MainActivity.mContext);
                                        logoimg.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 200));
                                        logoimg.setImageBitmap(BitmapFactory.decodeFile(isFile.getAbsolutePath()));
                                        //logoimg.setScaleType(ImageView.ScaleType.FIT_CENTER);
                                        printingLn.addView(logoimg);

                                        // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                        printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                                        // ------------------------------------------------------------------------------------------------------------------------------
                                    }
                                }


                                String deliveryTakeawayStr = "";
                                if (str_deliverytakeaway.equals("D")) {
                                    deliveryTakeawayStr = "DELIVERY";
                                } else {
                                    if (str_deliverytakeaway.equals("T")) {
                                        deliveryTakeawayStr = "TO GO";
                                    } else {
                                        deliveryTakeawayStr = "HERE";
                                    }
                                }

                                TextView storenameTv = new TextView(MainActivity.mContext);
                                storenameTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                                storenameTv.setGravity(Gravity.CENTER);
                                storenameTv.setText("*** " + deliveryTakeawayStr + " ***");
                                storenameTv.setPaintFlags(storenameTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                                storenameTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                                GlobalMemberValues.setTextStyleOnClover(storenameTv);
                                printingLn.addView(storenameTv);


                                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                                // ---------------------------------------------------------------------------------------------------------------------------------



                                LinearLayout receivingLn = new LinearLayout(MainActivity.mContext);
                                receivingLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                                receivingLn.setOrientation(LinearLayout.HORIZONTAL);


                                TextView receivingRightTv = new TextView(MainActivity.mContext);
                                receivingRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                                receivingRightTv.setText(str_itemCategoryName);
                                //receivingRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10 + tempAddTextSize);
                                receivingRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 50);
                                GlobalMemberValues.setTextStyleOnClover(receivingRightTv);
                                receivingRightTv.setPaintFlags(receivingRightTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);

                                receivingRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                receivingLn.addView(receivingRightTv);

                                printingLn.addView(receivingLn);

                                if (!str_itemCategoryName2.isEmpty()){
                                    LinearLayout receivingLn2 = new LinearLayout(MainActivity.mContext);
                                    receivingLn2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 60));
                                    receivingLn2.setOrientation(LinearLayout.HORIZONTAL);

                                    TextView receivingRightTv2 = new TextView(MainActivity.mContext);
                                    receivingRightTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                                    receivingRightTv2.setText(str_itemCategoryName2);
                                    //receivingRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10 + tempAddTextSize);
                                    receivingRightTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 30);
                                    GlobalMemberValues.setTextStyleOnClover(receivingRightTv2);
                                    receivingRightTv2.setPaintFlags(receivingRightTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                                    receivingRightTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                    receivingLn2.addView(receivingRightTv2);
                                    printingLn.addView(receivingLn2);
                                }



                                printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));



                                if (GlobalMemberValues.isShowOrderNumberOnExchangeReceipt()){
                                    if (GlobalMemberValues.getValueOnReceiptSetting("ordernumber_yn","4").equals("Y")){
                                        // 주문번호 ------------------------------------------------------------------------------------------------------------------------
                                        TextView orderNumTv = new TextView(MainActivity.mContext);
                                        orderNumTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 40));
                                        orderNumTv.setGravity(Gravity.CENTER);
                                        orderNumTv.setText(str_customerOrderNumber);
//                                    orderNumTv.setPaintFlags(storenameTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                                        orderNumTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                                        GlobalMemberValues.setTextStyleOnClover(orderNumTv);
                                        printingLn.addView(orderNumTv);
                                        // --------------------------------------------------------------------------------------------------------------------------------
                                    }

                                }
                                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));


                                // Sale Date ----------------------------------------------------------------------------------------------------------------------
                                // LinearLayout
                                LinearLayout saledateLn = new LinearLayout(MainActivity.mContext);
                                saledateLn.setLayoutParams(matchParentParams);
                                saledateLn.setOrientation(LinearLayout.HORIZONTAL);


                                TextView saleDateLeftTv = new TextView(MainActivity.mContext);
                                saleDateLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                saleDateLeftTv.setText("Order ");
                                saleDateLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(saleDateLeftTv);
                                saleDateLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                saledateLn.addView(saleDateLeftTv);

                                TextView saleDateRightTv = new TextView(MainActivity.mContext);
                                saleDateRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                saleDateRightTv.setText(" : " + str_saledate + " " + str_saletime);
                                saleDateRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(saleDateRightTv);
                                saleDateRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                saledateLn.addView(saleDateRightTv);

                                printingLn.addView(saledateLn);
                                // --------------------------------------------------------------------------------------------------------------------------------

                                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                                // ---------------------------------------------------------------------------------------------------------------------------------


                            } else {

                            }


                            try {
//                                        JSONObject dic_item = jsonArray_saleitemlist.getJSONObject(i);
                                str_itemCategoryName = dic_item.optString("itemCategoryName","");
                                str_itemCategoryName2 = dic_item.optString("itemCategoryName2","");
                                str_itemqty = dic_item.getString("itemqty");
                                str_itemname = dic_item.getString("itemname");
                                str_itemamount = dic_item.getString("itemamount");
                                str_itemprice = dic_item.getString("itemprice");

//                            str_itemdcextrastr = dic_item.getString("itemdcextrastr");
                                if (dic_item.toString().contains("itemdcextrastr")) {
                                    str_itemdcextrastr = dic_item.getString("itemdcextrastr");
                                }

//                            str_itemtaxexempt = dic_item.getString("itemtaxexempt");
                                if (dic_item.toString().contains("itemtaxexempt")) {
                                    str_itemtaxexempt = dic_item.getString("itemtaxexempt");
                                }

                                if (dic_item.toString().contains("optiontxt")) {
                                    str_optiontxt = dic_item.getString("optiontxt");
                                }
                                if (dic_item.toString().contains("optionprice")) {
                                    str_optionprice = dic_item.getString("optionprice");
                                }
                                if (dic_item.toString().contains("additionaltxt1")) {
                                    str_additionaltxt1 = dic_item.getString("additionaltxt1");
                                }
                                if (dic_item.toString().contains("additionalprice1")) {
                                    str_additionalprice1 = dic_item.getString("additionalprice1");
                                }
                                if (dic_item.toString().contains("additionaltxt2")) {
                                    str_additionaltxt2 = dic_item.getString("additionaltxt2");
                                }
                                if (dic_item.toString().contains("additionalprice2")) {
                                    str_additionalprice2 = dic_item.getString("additionalprice2");
                                }
                                if (dic_item.toString().contains("kitchenmemo")) {
                                    str_kitchenmemo = dic_item.getString("kitchenmemo");
                                }
                                if (dic_item.toString().contains("soldoutmemo")) {
                                    str_soldoutmemo = dic_item.getString("soldoutmemo");
                                }
                                if (dic_item.toString().contains("itemdcextraprice")) {
                                    str_each_discount_extra_price = dic_item.getString("itemdcextraprice");
                                }

                            } catch (JSONException e) {
                                e.printStackTrace();
                            }

                            LinearLayout saleitemlistLn2 = new LinearLayout(MainActivity.mContext);
                            saleitemlistLn2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                            saleitemlistLn2.setOrientation(LinearLayout.HORIZONTAL);

                            int tempHeight = 34;
                            if (str_itemname.length() > 30 || GlobalMemberValues.getSizeToString(str_itemname) > 30) {
                                tempHeight = (tempHeight * 2) + 4;
                            }

                            // 새 순서대로... (qty           item name              amount)
                            TextView saleItemTvContents2 = new TextView(MainActivity.mContext);
                            saleItemTvContents2.setGravity(Gravity.TOP | Gravity.LEFT);
                            saleItemTvContents2.setText(str_itemqty);
                            saleItemTvContents2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(saleItemTvContents2);
                            saleItemTvContents2.setLayoutParams(new LinearLayout.LayoutParams(0, tempHeight, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                            saleitemlistLn2.addView(saleItemTvContents2);

                            TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
                            saleItemTvContents1.setGravity(Gravity.TOP | Gravity.LEFT);
                            //saleItemTvContents1.setText(Payment_stringBackSpace_Exch(30, str_itemname));
//                        saleItemTvContents1.setText(designTextForItem(str_itemname, 30));
                            saleItemTvContents1.setText(str_itemname);
                            saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
                            saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, tempHeight, (GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER + GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER - 0.1f)));
                            saleitemlistLn2.addView(saleItemTvContents1);

                            if (!GlobalMemberValues.isStrEmpty(str_optiontxt)) {
                                double tempItemAmount = GlobalMemberValues.getDoubleAtString(str_itemamount);
                                if (GlobalMemberValues.MODIFIER_PRICEVIEW) {
                                    double tempOptionPriceSum = GlobalMemberValues.getDoubleAtString(str_optionprice)
                                            + GlobalMemberValues.getDoubleAtString(str_additionalprice1) + GlobalMemberValues.getDoubleAtString(str_additionalprice2);
//                                tempItemAmount -= tempOptionPriceSum; 원문.
                                    // jihun 추가 start
                                    if (str_itemqty.equals("1")){
                                        tempItemAmount -= tempOptionPriceSum;
                                    } else {
                                        tempItemAmount -= tempOptionPriceSum * Integer.parseInt(str_itemqty);
                                    }
                                    // jihun 추가 end

                                    str_itemamount = tempItemAmount + "";
                                }
                            }



                            // --------------------------------------------------------------------------------------------------------------------------------

                            printingLn.addView(saleitemlistLn2);


                            // --------------------------------------------------------------------------------------------------------------------------------

                            // Kitchen Memo -------------------------------------------------------------------------------------------------------------------
                            if (!GlobalMemberValues.isStrEmpty(str_kitchenmemo) && !str_kitchenmemo.equals("nokitchenmemo")) {
                                if (GlobalMemberValues.getValueOnReceiptSetting("itemmemo_yn","4").equals("Y")){
                                    // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                    printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 8));
                                    // ---------------------------------------------------------------------------------------------------------------------------------

                                    str_optiontxt = GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
                                            "   [Kitchen Memo]\n" + GlobalMemberValues.getModifierTxt2(str_itemqty, str_kitchenmemo, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                    TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                    optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                    optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                    optionmodifierTv.setText(str_optiontxt);
                                    optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                    printingLn.addView(optionmodifierTv);
                                }
                            }
                            // --------------------------------------------------------------------------------------------------------------------------------
                            // Kitchen Memo -------------------------------------------------------------------------------------------------------------------
                            if (!GlobalMemberValues.isStrEmpty(str_soldoutmemo) && !str_soldoutmemo.equals("") && !str_soldoutmemo.equals("undefined")) {
                                // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                                printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 8));
                                // ---------------------------------------------------------------------------------------------------------------------------------

                                str_optiontxt = GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
                                        "   [If sold out]\n" + GlobalMemberValues.getModifierTxt2(str_itemqty, str_soldoutmemo, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                TextView tv_ifsoldout = new TextView(MainActivity.mContext);
                                tv_ifsoldout.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                tv_ifsoldout.setGravity(Gravity.LEFT|Gravity.TOP);
                                tv_ifsoldout.setText(str_optiontxt);
                                tv_ifsoldout.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(tv_ifsoldout);

                                printingLn.addView(tv_ifsoldout);
                            }
                            // --------------------------------------------------------------------------------------------------------------------------------


                            // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                            printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 10));


                            /**********************************************************************************************************************************/

                            if (!GlobalMemberValues.isStrEmpty(str_customermemo)) {
                                if (GlobalMemberValues.getValueOnReceiptSetting("ordermemo_yn","4").equals("Y")){
                                    // 한줄 점선 -----------------------------------------------------------------------------------------------------------------------
                                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                                    // ---------------------------------------------------------------------------------------------------------------------------------

                                    TextView noteTv = new TextView(MainActivity.mContext);
                                    noteTv.setLayoutParams(matchParentParams);
                                    noteTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                                    noteTv.setText("[Note]");
                                    noteTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(noteTv);
                                    printingLn.addView(noteTv);

                                    TextView memotextTv = new TextView(MainActivity.mContext);
                                    memotextTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                    memotextTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                                    memotextTv.setText(str_customermemo);
                                    memotextTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                    GlobalMemberValues.setTextStyleOnClover(memotextTv);
                                    printingLn.addView(memotextTv);
                                }


                            }

                            // 점선 ----------------------------------------------------------------------------------------------------------------------------
                            printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                            // ---------------------------------------------------------------------------------------------------------------------------------


                            if (GlobalMemberValues.isShowPagerNumberOnExchangeReceipt()){
                                String tempTitleTxt = "";
                                if (!str_customerPagerNumber.isEmpty()){
                                    int fsize = 20;
                                    if (GlobalMemberValues.isEloPro()) {
                                        fsize = 50;
                                    } else {
                                        if (GlobalMemberValues.isDevicePAXFromDB()) {
                                            fsize = 30;
                                        }
                                    }
                                    if (GlobalMemberValues.getValueOnReceiptSetting("pagernumber_yn","4").equals("Y")){
                                        if (GlobalMemberValues.getValueOnReceiptSetting2("pagernumberalignment","4").equals("B")){
                                            TextView pagerNoTv = new TextView(MainActivity.mContext);
                                            pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                                            pagerNoTv.setGravity(Gravity.CENTER);
                                            pagerNoTv.setText(tempTitleTxt + GlobalMemberValues.getPagerNumberHeaderTxt() + str_customerPagerNumber);
                                            pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, (GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + fsize) * 2);
                                            pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                                            GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                                            printingLn.addView(pagerNoTv);
                                        }

                                    }

                                }
                            }


                            // receipt footer 프린터 --------------------------------------------------------------------------
                            if (!GlobalMemberValues.isStrEmpty(str_receiptfooter)) {
                                TextView footerTv = new TextView(MainActivity.mContext);
                                footerTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                footerTv.setGravity(Gravity.CENTER);
                                footerTv.setText(str_receiptfooter);
                                footerTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                                GlobalMemberValues.setTextStyleOnClover(footerTv);
                                printingLn.addView(footerTv);
                            }

                            if (i == count -1){
                                arr_linearLayout_return.add(printingLn);
                            }

                            temp_str_itemCategoryName = str_itemCategoryName;


                        } catch (JSONException e) {
                            e.printStackTrace();
                        }

                    }


                }

                /////





                // ------------------------------------------------------------------------------------------------

            }
        };
        thread2.start();
        try {
            thread2.join();
        } catch(InterruptedException e) {}

        /**
         // 프린트 완료되면 저장된 전자서명이미지 삭제한다.
         if (tempArrListStrFile.size() > 0) {
         for (String tempStrFilePath : tempArrListStrFile) {
         if (!GlobalMemberValues.isStrEmpty(tempStrFilePath) && new File(tempStrFilePath).exists()) {
         new File(tempStrFilePath).delete();
         }
         }
         }
         **/


        return arr_linearLayout_return;
    }

    public static LinearLayout makingLinearLayoutForTableSaleView(final JSONObject data) {
        if (data == null) {
            return  null;
        }

        // array 체크용 boolean item array 가 null 이면 프린팅 하지 않도록.
        final boolean[] is_item_array_null = {false};

        GlobalMemberValues.logWrite("cloverprintinglog", "받은 데이터 : " + data.toString() + "\n");

        final LinearLayout.LayoutParams matchParentParams
                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32);
        matchParentParams.setMargins(0, 0, 0, 0);

        final LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
        printingLn.setLayoutParams(new LinearLayout.LayoutParams(GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, LinearLayout.LayoutParams.MATCH_PARENT));
        printingLn.setOrientation(LinearLayout.VERTICAL);
        printingLn.setBackgroundColor(Color.parseColor("#ffffff"));

        // 가격표시앞에 $ 표시여부
        String tempDollarStr = "";
        if (GlobalMemberValues.ISDISPLAYPRICEDOLLAR) {
            tempDollarStr = "$";
        }
        final String finalTempDollarStr = tempDollarStr;

        Thread thread = new Thread(){
            @SuppressLint("LongLogTag")
            @Override
            public void run(){
                String str_receiptno = "";
                String str_ordertype = "";

                String titleText1 = "";
                String titleText2 = "";
                String titleText3 = "";
                String main_Text = "";

                String memo_Text = "";

                String customerText = "";

                String str_saledate = "";
                String str_saletime = "";

                String str_saleitemlist = "";

                String str_customername = "";
                String str_customerphonenum = "";
                String str_customeraddress = "";

                String str_deliverytakeaway = "";
                String str_deliverydate = "";

                String str_customermemo = "";

                String str_kitchenreprintyn = "N";

                String str_receiptfooter = "";

                String str_customerOrderNumber = "";
                String str_customerPagerNumber = "";

                String str_phoneOrder = "";
                String str_phoneOrderNumber = "";
                String str_phoneorderholecode = "";

                String str_storestate = "";
                String str_storename = "";
                String str_storecity = "";
                String str_storezip = "";
                String str_storephone = "";
                String str_storeaddress2 = "";
                String str_storeaddress1 = "";

                // Restaurant 관련
                String str_restaurant_tableidx = "";
                String str_restaurant_tablename = "";
                String str_restaurant_tablepeoplecnt = "";
                String str_restaurant_tableholdcode = "";

                //discount / extra
                String str_discountextra_total = "";
                String str_discountYN = "";

                String str_commongratuity = "";

                String str_split_idx = "";


                str_storestate = GlobalMemberValues.getDataInJsonData(data, "storestate");
                str_storename  = GlobalMemberValues.getDataInJsonData(data, "storename");
                str_storecity = GlobalMemberValues.getDataInJsonData(data, "storecity");
                str_storezip = GlobalMemberValues.getDataInJsonData(data, "storezip");
                str_storeaddress2 = GlobalMemberValues.getDataInJsonData(data, "storeaddress2");
                str_storeaddress1 = GlobalMemberValues.getDataInJsonData(data, "storeaddress1");
                str_storephone = GlobalMemberValues.getDataInJsonData(data, "storephone");
                str_saledate = GlobalMemberValues.getDataInJsonData(data, "saledate");
                str_saletime = GlobalMemberValues.getDataInJsonData(data, "saletime");
                str_receiptno = GlobalMemberValues.getDataInJsonData(data, "receiptno");
                str_saleitemlist = GlobalMemberValues.getDataInJsonData(data, "saleitemlist");
                str_customername = GlobalMemberValues.getDataInJsonData(data, "customername");
                str_customerphonenum = GlobalMemberValues.getDataInJsonData(data, "customerphonenum");
                str_customeraddress = GlobalMemberValues.getDataInJsonData(data, "customeraddress");
                str_deliverytakeaway = GlobalMemberValues.getDataInJsonData(data, "deliverytakeaway");
                str_deliverydate = GlobalMemberValues.getDataInJsonData(data, "deliverydate");
                str_ordertype = GlobalMemberValues.getDataInJsonData(data, "ordertype");
                str_customermemo = GlobalMemberValues.getDataInJsonData(data, "customermemo");
                str_receiptfooter = GlobalMemberValues.getDataInJsonData(data, "receiptfooter");
                str_customerOrderNumber = GlobalMemberValues.getDataInJsonData(data, "customerordernumber");
                str_customerPagerNumber = GlobalMemberValues.getDataInJsonData(data, "customerpagernumber");
                str_phoneOrder = GlobalMemberValues.getDataInJsonData(data, "phoneorder");
                str_phoneOrderNumber = GlobalMemberValues.getDataInJsonData(data, "phoneordernumber");

                // Restaurant 관련
                str_restaurant_tableidx = GlobalMemberValues.getDataInJsonData(data, "restaurant_tableidx");
                str_restaurant_tablename = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablename");
                str_restaurant_tablepeoplecnt = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablepeoplecnt");
                str_restaurant_tableholdcode = GlobalMemberValues.getDataInJsonData(data, "restaurant_tableholdcode");

                GlobalMemberValues globalMemberValues = new GlobalMemberValues();

                str_split_idx = GlobalMemberValues.getDataInJsonData(data, "split_idx");
                String noneT_tableIDX = str_restaurant_tableidx.replace("T", "");
                String tempHoldCode = TableSaleMain.getHoldCodeByTableidx(noneT_tableIDX, TableSaleMain.mSubTableNum);
                int getBillCnt = GlobalMemberValues.getIntAtString(MssqlDatabase.getResultSetValueToString(
                        " select count(*) from bill_list where holdcode = '" + tempHoldCode + "' "
                ));


                // Restaurant 관련
                if (!GlobalMemberValues.isStrEmpty(str_restaurant_tablename)) {
                    TextView pagerNoTv = new TextView(MainActivity.mContext);
                    pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                    pagerNoTv.setGravity(Gravity.CENTER);
                    pagerNoTv.setText(str_restaurant_tablename);
                    pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER  + 60);
                    pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                    printingLn.addView(pagerNoTv);

                    // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                }

                if (!GlobalMemberValues.isStrEmpty(str_phoneOrder) && str_phoneOrder.equals("Y")) {
                    str_customerOrderNumber = str_phoneOrderNumber;
                }

                // 로고 프린팅
                String logoprintingonreceiptyn = MainActivity.mDbInit.dbExecuteReadReturnString(
                        " select logoprintingonreceiptyn from salon_storestationsettings_deviceprinter ");
                if (GlobalMemberValues.isStrEmpty(logoprintingonreceiptyn)) {
                    logoprintingonreceiptyn = "N";
                }
                if (logoprintingonreceiptyn == "Y" || logoprintingonreceiptyn.equals("Y")) {
                    File path = GlobalMemberValues.ADFILELOCALPATH;
                    File isFile = new File(path, "receiptlogoimg.png"); //파일명까지 포함함 경로의 File 객체 생성
                    String adImage = isFile.getPath();
                    if (new File(adImage).exists()) {
                        ImageView logoimg = new ImageView(MainActivity.mContext);
                        logoimg.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 200));
                        logoimg.setImageBitmap(BitmapFactory.decodeFile(isFile.getAbsolutePath()));
                        //logoimg.setScaleType(ImageView.ScaleType.FIT_CENTER);
                        printingLn.addView(logoimg);

                        // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                        // ------------------------------------------------------------------------------------------------------------------------------
                    }
                }

                // Store 이름
                TextView storenameTv = new TextView(MainActivity.mContext);
                storenameTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                storenameTv.setGravity(Gravity.CENTER);
                storenameTv.setText("*** " + str_storename + " ***");
                storenameTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER  + 10);
                storenameTv.setPaintFlags(storenameTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                GlobalMemberValues.setTextStyleOnClover(storenameTv);
                printingLn.addView(storenameTv);

                // Store 주소 1, 2
                TextView storeaddrTv = new TextView(MainActivity.mContext);
                storeaddrTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                storeaddrTv.setGravity(Gravity.CENTER);
                storeaddrTv.setText(str_storeaddress1 + " "+ str_storeaddress2);
                storeaddrTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(storeaddrTv);
                printingLn.addView(storeaddrTv);

                // Store 주소 나머지
                TextView storeaddretcTv = new TextView(MainActivity.mContext);
                storeaddretcTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                storeaddretcTv.setGravity(Gravity.CENTER);
                storeaddretcTv.setText(str_storecity + " " + str_storestate + " "+ str_storezip);
                storeaddretcTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(storeaddretcTv);
                printingLn.addView(storeaddretcTv);

                // Store 전화번호
                TextView storetelTv = new TextView(MainActivity.mContext);
                storetelTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                storetelTv.setGravity(Gravity.CENTER);
                storetelTv.setText("(TEL) "+ telNumberExch(str_storephone));
                storetelTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(storetelTv);
                printingLn.addView(storetelTv);

                GlobalMemberValues.logWrite("cloverdatacheckreturnlog", "스토어명 : " + str_storename + "\n");
                GlobalMemberValues.logWrite("cloverdatacheckreturnlog", "전화번호 : " + telNumberExch(str_storephone) + "\n");

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                // Restaurant 관련
                if (!GlobalMemberValues.isStrEmpty(str_restaurant_tablename)) {
                    LinearLayout tableinfoLn = new LinearLayout(MainActivity.mContext);
                    tableinfoLn.setLayoutParams(matchParentParams);
                    tableinfoLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView tableinfoTv1 = new TextView(MainActivity.mContext);
                    tableinfoTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    tableinfoTv1.setText("Table Info.");
                    tableinfoTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(tableinfoTv1);
                    tableinfoTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    tableinfoLn.addView(tableinfoTv1);

                    TextView tableinfoTv2 = new TextView(MainActivity.mContext);
                    tableinfoTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    tableinfoTv2.setText(" : " + str_restaurant_tablename);
                    tableinfoTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(tableinfoTv2);
                    tableinfoTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    tableinfoLn.addView(tableinfoTv2);

                    printingLn.addView(tableinfoLn);
                    // --------------------------------------------------------------------------------------------------------------------------------

                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }

                // Restaurant 관련
//                if ((globalMemberValues.getPOSType().toUpperCase() == "R" || globalMemberValues.getPOSType().toUpperCase().equals("R"))
//                        && GlobalMemberValues.now_saletypeisrestaurant) {
//                    LinearLayout tablepeoplecntLn = new LinearLayout(MainActivity.mContext);
//                    tablepeoplecntLn.setLayoutParams(matchParentParams);
//                    tablepeoplecntLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                    TextView tablepeoplecntTv1 = new TextView(MainActivity.mContext);
//                    tablepeoplecntTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                    tablepeoplecntTv1.setText("Customer Count");
//                    tablepeoplecntTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
//                    GlobalMemberValues.setTextStyleOnClover(tablepeoplecntTv1);
//                    tablepeoplecntTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                    tablepeoplecntLn.addView(tablepeoplecntTv1);
//
//                    TextView tablepeoplecntTv2 = new TextView(MainActivity.mContext);
//                    tablepeoplecntTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                    tablepeoplecntTv2.setText(" : " + str_restaurant_tablepeoplecnt);
//                    tablepeoplecntTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
//                    GlobalMemberValues.setTextStyleOnClover(tablepeoplecntTv2);
//                    tablepeoplecntTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
//                    tablepeoplecntLn.addView(tablepeoplecntTv2);
//
//                    printingLn.addView(tablepeoplecntLn);
//                    // --------------------------------------------------------------------------------------------------------------------------------
//
//                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
//                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
//                    // ---------------------------------------------------------------------------------------------------------------------------------
//                }

                if (GlobalMemberValues.isOrderNumberSectionViewOn()) {
                    // 주문번호 ------------------------------------------------------------------------------------------------------------------------
                    LinearLayout salesCodeLn = new LinearLayout(MainActivity.mContext);
                    salesCodeLn.setLayoutParams(matchParentParams);
                    salesCodeLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView customerOrderNumLeftTv = new TextView(MainActivity.mContext);
                    customerOrderNumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    customerOrderNumLeftTv.setText("Order No.");
                    customerOrderNumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(customerOrderNumLeftTv);
                    customerOrderNumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesCodeLn.addView(customerOrderNumLeftTv);

                    TextView customerOrderNumRightTv = new TextView(MainActivity.mContext);
                    customerOrderNumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    customerOrderNumRightTv.setText(" : " + str_customerOrderNumber);
                    customerOrderNumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(customerOrderNumRightTv);
                    customerOrderNumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    salesCodeLn.addView(customerOrderNumRightTv);

                    printingLn.addView(salesCodeLn);
                    // --------------------------------------------------------------------------------------------------------------------------------

                    // 수령타입 -----------------------------------------------------------------------------------------------------------------------
                    LinearLayout receivingTypeLn = new LinearLayout(MainActivity.mContext);
                    receivingTypeLn.setLayoutParams(matchParentParams);
                    receivingTypeLn.setOrientation(LinearLayout.HORIZONTAL);

                    String tempDeliveryTakeaway = "HERE";
                    if (!GlobalMemberValues.isStrEmpty(str_deliverytakeaway)) {
                        switch (str_deliverytakeaway) {
                            case "H" : {
                                tempDeliveryTakeaway = "HERE";
                                break;
                            }
                            case "T" : {
                                tempDeliveryTakeaway = "TO GO";
                                break;
                            }
                            case "D" : {
                                tempDeliveryTakeaway = "DELIVERY";
                                break;
                            }
                        }
                    }

                    TextView receivingTypeLeftTv = new TextView(MainActivity.mContext);
                    receivingTypeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    receivingTypeLeftTv.setText("Pick Up Type");
                    receivingTypeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(receivingTypeLeftTv);
                    receivingTypeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    receivingTypeLn.addView(receivingTypeLeftTv);

                    TextView receivingTypeRightTv = new TextView(MainActivity.mContext);
                    receivingTypeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    receivingTypeRightTv.setText(" : " + tempDeliveryTakeaway);
                    receivingTypeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(receivingTypeRightTv);
                    receivingTypeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    receivingTypeLn.addView(receivingTypeRightTv);

                    printingLn.addView(receivingTypeLn);
                    // --------------------------------------------------------------------------------------------------------------------------------

                    if (GlobalMemberValues.mCustomerInfoShowYN) {

                        // 고객 이름 -------------------------------------------------------------------------------------------------------------------
                        if (!GlobalMemberValues.isStrEmpty(str_customername) || !str_customername.equals(" ")) {
                            LinearLayout customerPhoneLn = new LinearLayout(MainActivity.mContext);
                            customerPhoneLn.setLayoutParams(matchParentParams);
                            customerPhoneLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                            customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            customerNameLeftTv.setText("Customer Name.");
                            customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                            GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                            customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            customerPhoneLn.addView(customerNameLeftTv);

                            TextView customerNameRightTv = new TextView(MainActivity.mContext);
                            customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            customerNameRightTv.setText(" : " + str_customername);
                            customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                            GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                            customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            customerPhoneLn.addView(customerNameRightTv);

                            printingLn.addView(customerPhoneLn);
                        }
                        // --------------------------------------------------------------------------------------------------------------------------------
                        // 고객전화번호 -------------------------------------------------------------------------------------------------------------------
                        if (!GlobalMemberValues.isStrEmpty(str_customerphonenum) ) {
                            if (str_customerphonenum.contains("@")){

                            } else {
                                LinearLayout customerPhoneLn = new LinearLayout(MainActivity.mContext);
                                customerPhoneLn.setLayoutParams(matchParentParams);
                                customerPhoneLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                                customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                if (str_customerphonenum.contains("@")){
                                    customerNameLeftTv.setText("E-mail");
                                } else {
                                    customerNameLeftTv.setText("Phone No.");
                                }
                                customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                                GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                                customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                customerPhoneLn.addView(customerNameLeftTv);

                                TextView customerNameRightTv = new TextView(MainActivity.mContext);
                                customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                customerNameRightTv.setText(" : " + str_customerphonenum);
                                customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                                GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                                customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                customerPhoneLn.addView(customerNameRightTv);

                                printingLn.addView(customerPhoneLn);
                            }

                        }
                        // --------------------------------------------------------------------------------------------------------------------------------

                        // 고객주소 ------------------------------------------------------------------------------------------------------------------------
                        if (!GlobalMemberValues.isStrEmpty(str_customeraddress)) {
//                            String customerAddressAll = "";
//                            customerAddressAll = GlobalMemberValues.getPrintTxtCenterAlignment("<Address>", 44) + "\n";
//                            //titleText1 += str_customeraddress + "\n";
//                            String tempCustomerAddress[] = str_customeraddress.split("\n");
//                            customerAddressAll += GlobalMemberValues.getPrintTxtCenterAlignment2(tempCustomerAddress[0], 44) + "\n";
//                            if (tempCustomerAddress.length > 1) {
//                                customerAddressAll += GlobalMemberValues.getPrintTxtCenterAlignment2(tempCustomerAddress[1], 44) + "\n";
//                            }
//                            if (tempCustomerAddress.length > 2) {
//                                customerAddressAll += GlobalMemberValues.getPrintTxtCenterAlignment(tempCustomerAddress[2], 44) + "\n";
//                            }
//
//                            TextView customerAddrTv = new TextView(MainActivity.mContext);
//                            customerAddrTv.setLayoutParams(matchParentParams);
//                            customerAddrTv.setGravity(Gravity.CENTER);
//                            customerAddrTv.setText(customerAddressAll);
//                            customerAddrTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
//                            GlobalMemberValues.setTextStyleOnClover(customerAddrTv);
//                            printingLn.addView(customerAddrTv);
                            TextView addressTv = new TextView(MainActivity.mContext);
                            addressTv.setLayoutParams(matchParentParams);
                            addressTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                            addressTv.setText("<Address>");
                            addressTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                            GlobalMemberValues.setTextStyleOnClover(addressTv);
                            printingLn.addView(addressTv);
                            // --------------------------------------------------------------------------------------------------------------------
                            // Address Contents ------------------------------------------------------------------------------------------------------------
                            TextView addresscontentsTv = new TextView(MainActivity.mContext);
                            addresscontentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                            addresscontentsTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                            addresscontentsTv.setText(str_customeraddress);
                            addresscontentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                            GlobalMemberValues.setTextStyleOnClover(addresscontentsTv);
                            printingLn.addView(addresscontentsTv);
                        }
                        // --------------------------------------------------------------------------------------------------------------------------------
                    }

                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }


                // Receipt NO. --------------------------------------------------------------------------------------------------------------------
                // LinearLayout
                LinearLayout.LayoutParams matchParentParams_receiptno
                        = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32);
                matchParentParams_receiptno.setMargins(0, 0, 0, 0);

                LinearLayout receiptnoLn = new LinearLayout(MainActivity.mContext);
                receiptnoLn.setLayoutParams(matchParentParams_receiptno);
                receiptnoLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView receiptNoLeftTv = new TextView(MainActivity.mContext);
                receiptNoLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                receiptNoLeftTv.setText("Receipt No.");
                receiptNoLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(receiptNoLeftTv);
                receiptNoLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.8f));
                receiptnoLn.addView(receiptNoLeftTv);

                TextView receiptNoRightTv = new TextView(MainActivity.mContext);
                receiptNoRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                receiptNoRightTv.setText(" : " + str_receiptno);
                receiptNoRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(receiptNoRightTv);
                receiptNoRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                receiptnoLn.addView(receiptNoRightTv);

                printingLn.addView(receiptnoLn);
                // --------------------------------------------------------------------------------------------------------------------------------

                // Sale Date ----------------------------------------------------------------------------------------------------------------------
                // LinearLayout
                LinearLayout saledateLn = new LinearLayout(MainActivity.mContext);
                saledateLn.setLayoutParams(matchParentParams);
                saledateLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView saleDateLeftTv = new TextView(MainActivity.mContext);
                saleDateLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                saleDateLeftTv.setText("Sale Date");
                saleDateLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(saleDateLeftTv);
                saleDateLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.8f));
                saledateLn.addView(saleDateLeftTv);

                TextView saleDateRightTv = new TextView(MainActivity.mContext);
                saleDateRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                saleDateRightTv.setText(" : " + str_saledate + " " + str_saletime);
                saleDateRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(saleDateRightTv);
                saleDateRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                saledateLn.addView(saleDateRightTv);

                printingLn.addView(saledateLn);
                // --------------------------------------------------------------------------------------------------------------------------------

                /**
                 // Sale Time ----------------------------------------------------------------------------------------------------------------------
                 // LinearLayout
                 LinearLayout saletimeLn = new LinearLayout(MainActivity.mContext);
                 saletimeLn.setLayoutParams(matchParentParams);
                 saletimeLn.setOrientation(LinearLayout.HORIZONTAL);

                 TextView saleTimeLeftTv = new TextView(MainActivity.mContext);
                 saleTimeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 saleTimeLeftTv.setText("Sale Time");
                 saleTimeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                 GlobalMemberValues.setTextStyleOnClover(saleTimeLeftTv);
                 saleTimeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                 saletimeLn.addView(saleTimeLeftTv);

                 TextView saleTimeRightTv = new TextView(MainActivity.mContext);
                 saleTimeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 saleTimeRightTv.setText(" : " + str_saletime);
                 saleTimeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                 GlobalMemberValues.setTextStyleOnClover(saleTimeRightTv);
                 saleTimeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                 saletimeLn.addView(saleTimeRightTv);

                 printingLn.addView(saletimeLn);
                 // --------------------------------------------------------------------------------------------------------------------------------
                 **/

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                /** 세일아이템 관련 ***************************************************************************************************************/
                /**
                 LinearLayout saleitemlistLn = new LinearLayout(MainActivity.mContext);
                 saleitemlistLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                 saleitemlistLn.setOrientation(LinearLayout.HORIZONTAL);

                 // 세일아이템 타이틀 ---------------------------------------------------------------------------------------------------------------
                 TextView saleItemTv1 = new TextView(MainActivity.mContext);
                 saleItemTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 saleItemTv1.setText("Item Name");
                 saleItemTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv1);
                 saleItemTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv1);

                 TextView saleItemTv2 = new TextView(MainActivity.mContext);
                 saleItemTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                 saleItemTv2.setText("Qty");
                 saleItemTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv2);
                 saleItemTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv2);

                 TextView saleItemTv3 = new TextView(MainActivity.mContext);
                 saleItemTv3.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                 saleItemTv3.setText("Price");
                 saleItemTv3.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv3);
                 saleItemTv3.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv3);

                 TextView saleItemTv4 = new TextView(MainActivity.mContext);
                 saleItemTv4.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                 saleItemTv4.setText("Amount");
                 saleItemTv4.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv4);
                 saleItemTv4.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv4);

                 printingLn.addView(saleitemlistLn);
                 // --------------------------------------------------------------------------------------------------------------------------------

                 // 점선 ----------------------------------------------------------------------------------------------------------------------------
                 printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                 // ---------------------------------------------------------------------------------------------------------------------------------

                 **/



                double pickupDeliveryFee = 0.00;
                double subTotal = 0.00;
                double subTax = 0.00;
                double totalAmount = 0.00;
                double d_discountAmount = 0.0;

                if (!GlobalMemberValues.isStrEmpty(str_saleitemlist)) {
                    String[] strOrderItemsList = str_saleitemlist.split(GlobalMemberValues.STRSPLITTER_ORDERITEM1);
                    if (strOrderItemsList == null) {
                        is_item_array_null[0] = true;
                    }
                    //
                    ItemPrint itemPrint = new ItemPrint();
                    String printCode = itemPrint.makeTempPrintingCode();
                    for (int i = 0; i < strOrderItemsList.length; i++) {
                        String[] strOrderItems = strOrderItemsList[i].split(GlobalMemberValues.STRSPLITTER_ORDERITEM2);
                        boolean isResult = itemPrint.setAddItemQtyByDuplicate(printCode, strOrderItems);
                    }
                    strOrderItemsList = itemPrint.getItemPrintListArr(printCode);
                    //


                    for (int i = 0; i < strOrderItemsList.length; i++) {
                        String[] strOrderItems = strOrderItemsList[i].split(GlobalMemberValues.STRSPLITTER_ORDERITEM2);

                        // 상품명, 수량 정보 --------------------------------------------------------------------
                        String tempItemNameOptionAdd = strOrderItems[0];
                        String tempItemQty = strOrderItems[1];
                        String tempPrice = strOrderItems[4];
//                        String tempPriceAmount = strOrderItems[5];
                        String tempPriceAmount = strOrderItems[5];
                        String tempTaxAmount = "0.0";
                        if (strOrderItems.length > 7) {
                            tempTaxAmount = strOrderItems[7];
                        }
                        String tempTotalAmount = strOrderItems[4];

                        GlobalMemberValues.logWrite("saleitemstrarray", "tempItemNameOptionAdd : " + tempItemNameOptionAdd + "\n");

                        String[] strItemNAmeOptionAdd = tempItemNameOptionAdd.split(GlobalMemberValues.STRSPLITTER_ORDERITEM3);
                        String tempItemName = strItemNAmeOptionAdd[0];
                        String tempOptionTxt = "";
                        String tempAdditionalTxt1 = "";
                        String tempAdditionalTxt2 = "";
                        String tempItemIdx = "";
                        String tempKitchenMemo = "";
                        String tempOptionPrice = "";
                        String temptemp_additionalprice1 = "";
                        String temptemp_additionalprice2 = "";
                        String selectedDcExtraAllEach = "";
                        String selectedDcExtraType = "";
                        String dcextratype = "";
                        String dcextravalue = "";
                        String selectedDcExtraPrice = "";
                        if (strItemNAmeOptionAdd == null) return;
                        if (strItemNAmeOptionAdd.length > 1) {
                            tempOptionTxt = strItemNAmeOptionAdd[1];
                            if (strItemNAmeOptionAdd.length > 2) {
                                tempAdditionalTxt1 = strItemNAmeOptionAdd[2];
                            }
                            if (strItemNAmeOptionAdd.length > 3) {
                                tempAdditionalTxt2 = strItemNAmeOptionAdd[3];
                            }
                            if (strItemNAmeOptionAdd.length > 4) {
                                tempItemIdx = strItemNAmeOptionAdd[4];
                            }
                            if (strItemNAmeOptionAdd.length > 6) {
                                tempKitchenMemo = strItemNAmeOptionAdd[6];
                            }
                            if (strItemNAmeOptionAdd.length > 7) {
                                tempOptionPrice = strItemNAmeOptionAdd[7];
                            }
                            if (strItemNAmeOptionAdd.length > 8) {
                                temptemp_additionalprice1 = strItemNAmeOptionAdd[8];
                            }
                            if (strItemNAmeOptionAdd.length > 9) {
                                temptemp_additionalprice2 = strItemNAmeOptionAdd[9];
                            }
                            // discount / extra
                            if (strItemNAmeOptionAdd.length > 10) {
                                selectedDcExtraAllEach = strItemNAmeOptionAdd[10];
                            }
                            if (strItemNAmeOptionAdd.length > 11) {
                                selectedDcExtraType = strItemNAmeOptionAdd[11];
                            }
                            if (strItemNAmeOptionAdd.length > 12) {
                                dcextratype = strItemNAmeOptionAdd[12];
                            }
                            if (strItemNAmeOptionAdd.length > 13) {
                                dcextravalue = strItemNAmeOptionAdd[13];
                            }
                            if (strItemNAmeOptionAdd.length > 14) {
                                selectedDcExtraPrice = strItemNAmeOptionAdd[14];
                            }
                        }
                        // ---------------------------------------------------------------------------------

                        double d_tempPriceAmount = GlobalMemberValues.getDoubleAtString(tempPriceAmount);
                        d_tempPriceAmount = d_tempPriceAmount * Integer.parseInt(tempItemQty);
                        tempPriceAmount = GlobalMemberValues.getStringFormatNumber(d_tempPriceAmount,"2");
                        double d_tempTaxAmount = GlobalMemberValues.getDoubleAtString(tempTaxAmount);
                        d_tempTaxAmount = d_tempTaxAmount * Integer.parseInt(tempItemQty);
                        tempTaxAmount = GlobalMemberValues.getStringFormatNumber(d_tempTaxAmount,"2");

                        subTotal += GlobalMemberValues.getDoubleAtString(tempPriceAmount);
                        subTax += GlobalMemberValues.getDoubleAtString(tempTaxAmount);
                        totalAmount += GlobalMemberValues.getDoubleAtString(tempPriceAmount) + GlobalMemberValues.getDoubleAtString(tempTaxAmount);;

                        LinearLayout saleitemlistLn2 = new LinearLayout(MainActivity.mContext);
                        saleitemlistLn2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                        saleitemlistLn2.setOrientation(LinearLayout.HORIZONTAL);

                        // 세일아이템 타이틀 ---------------------------------------------------------------------------------------------------------------
                        // 기존 순서대로... (item name      qty      price      amount)
                        /**
                         TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
                         saleItemTvContents1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                         saleItemTvContents1.setText(Payment_stringBackSpace_Exch(16, tempItemName));
                         saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                         GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
                         saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER));
                         saleitemlistLn2.addView(saleItemTvContents1);

                         TextView saleItemTvContents2 = new TextView(MainActivity.mContext);
                         saleItemTvContents2.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                         saleItemTvContents2.setText(tempItemQty);
                         saleItemTvContents2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                         GlobalMemberValues.setTextStyleOnClover(saleItemTvContents2);
                         saleItemTvContents2.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                         saleitemlistLn2.addView(saleItemTvContents2);

                         TextView saleItemTvContents3 = new TextView(MainActivity.mContext);
                         saleItemTvContents3.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                         saleItemTvContents3.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(tempPrice));
                         saleItemTvContents3.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                         GlobalMemberValues.setTextStyleOnClover(saleItemTvContents3);
                         saleItemTvContents3.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER));
                         saleitemlistLn2.addView(saleItemTvContents3);

                         TextView saleItemTvContents4 = new TextView(MainActivity.mContext);
                         saleItemTvContents4.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                         saleItemTvContents4.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(tempPriceAmount));
                         saleItemTvContents4.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                         GlobalMemberValues.setTextStyleOnClover(saleItemTvContents4);
                         saleItemTvContents4.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                         saleitemlistLn2.addView(saleItemTvContents4);
                         **/
                        int tempHeight = 34;
//                        if (tempItemName.length() > 30 || GlobalMemberValues.getSizeToString(tempItemName) > 30) {
//                            tempHeight = (tempHeight * 2) + 4;
//                        }
                        for (int z = 25; z <= GlobalMemberValues.getSizeToString(tempItemName) ; z += 24){
                            tempHeight += 34;
                        }

                        // 새 순서대로... (qty           item name              amount)
                        if (tempItemName.equals(GlobalMemberValues.mCommonGratuityName)){
                            // common gratuity 의 경우 표시하지 않고 가격만 전달..
                            // else 의 경우 일반 아이템 작성
                            str_commongratuity = tempPriceAmount;
                        } else {
                            TextView saleItemTvContents2 = new TextView(MainActivity.mContext);
                            saleItemTvContents2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            saleItemTvContents2.setText(tempItemQty);
                            saleItemTvContents2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                            GlobalMemberValues.setTextStyleOnClover(saleItemTvContents2);
                            saleItemTvContents2.setLayoutParams(new LinearLayout.LayoutParams(0, 34, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                            saleitemlistLn2.addView(saleItemTvContents2);

//                        TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
//                        saleItemTvContents1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                        saleItemTvContents1.setText(Payment_stringBackSpace_Exch(30, tempItemName));
//                        saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
//                        GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
//                        saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, 34, (GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER + GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER)));
//                        saleitemlistLn2.addView(saleItemTvContents1);

                            TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
                            saleItemTvContents1.setGravity(Gravity.TOP | Gravity.LEFT);
                            //saleItemTvContents1.setText(Payment_stringBackSpace_Exch(30, str_itemname));
//                        saleItemTvContents1.setText(designTextForItem(str_itemname, 30));
                            saleItemTvContents1.setText(tempItemName);
                            saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                            GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
                            saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, tempHeight, (GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER + GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER - 0.1f)));
                            saleitemlistLn2.addView(saleItemTvContents1);


                            if (!GlobalMemberValues.isStrEmpty(tempOptionTxt)) {
                                double tempItemAmount = GlobalMemberValues.getDoubleAtString(tempPriceAmount);
                                if (GlobalMemberValues.MODIFIER_PRICEVIEW) {
                                    double tempOptionPriceSum = GlobalMemberValues.getDoubleAtString(tempOptionPrice)
                                            + GlobalMemberValues.getDoubleAtString(temptemp_additionalprice1) + GlobalMemberValues.getDoubleAtString(temptemp_additionalprice2);
                                    // jihun 추가 start
                                    if (tempItemQty.equals("1")){
                                        tempItemAmount -= tempOptionPriceSum;
                                    } else {
                                        tempItemAmount -= tempOptionPriceSum * Integer.parseInt(tempItemQty);
                                    }
                                    // jihun 추가 end

                                    tempPriceAmount = tempItemAmount + "";
                                }
                            }


                            TextView saleItemTvContents4 = new TextView(MainActivity.mContext);
                            saleItemTvContents4.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            saleItemTvContents4.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(tempPriceAmount));
                            saleItemTvContents4.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                            GlobalMemberValues.setTextStyleOnClover(saleItemTvContents4);
                            saleItemTvContents4.setLayoutParams(new LinearLayout.LayoutParams(0, 34, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                            saleitemlistLn2.addView(saleItemTvContents4);

                            // --------------------------------------------------------------------------------------------------------------------------------

                            printingLn.addView(saleitemlistLn2);
                        }


                        // Modifier -------------------------------------------------------------------------------------------------------------------------
                        if (GlobalMemberValues.isModifierPrintYN()) {
                            if (!GlobalMemberValues.isStrEmpty(tempOptionTxt) ||
                                    !GlobalMemberValues.isStrEmpty(tempAdditionalTxt1) || !GlobalMemberValues.isStrEmpty(tempAdditionalTxt2) ) {
                                if (tempOptionTxt.contains("-J-")){
                                    tempOptionTxt = tempOptionTxt.replace("-J-","\n");
                                }
                                if (tempAdditionalTxt1.contains("-J-")){
                                    tempAdditionalTxt1 = tempAdditionalTxt1.replace("-J-","\n");
                                }
                                if (tempAdditionalTxt2.contains("-J-")){
                                    tempAdditionalTxt2 = tempAdditionalTxt2.replace("-J-","\n");
                                }
                                if (!GlobalMemberValues.isStrEmpty(tempOptionTxt)) {
                                    /**
                                     tempOptionTxt = "" + GlobalMemberValues.getModifierTxt2(tempItemQty, tempOptionTxt, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                     TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                     optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                     optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                     optionmodifierTv.setText(tempOptionTxt);
                                     optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                                     GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                     printingLn.addView(optionmodifierTv);
                                     **/



                                    GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempOptionTxt, tempOptionPrice, false, false);
                                }
                                if (!GlobalMemberValues.isStrEmpty(tempAdditionalTxt1)) {
                                    /**
                                     tempAdditionalTxt1 += GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
                                     "[Add Ingredients]\n" + GlobalMemberValues.getModifierTxt2(tempItemQty, tempAdditionalTxt1, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                     TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                     optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                     optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                     optionmodifierTv.setText(tempAdditionalTxt1);
                                     optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                                     GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                     printingLn.addView(optionmodifierTv);
                                     **/

                                    GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempAdditionalTxt1, temptemp_additionalprice1, false, false);
                                }
                                if (!GlobalMemberValues.isStrEmpty(tempAdditionalTxt2)) {
                                    /**
                                     tempAdditionalTxt2 += GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
                                     "[General Modifier]\n" + GlobalMemberValues.getModifierTxt2(tempItemQty, tempAdditionalTxt2, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                     TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                     optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                     optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                     optionmodifierTv.setText(tempAdditionalTxt2);
                                     optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                                     GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                     printingLn.addView(optionmodifierTv);
                                     **/

                                    GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempAdditionalTxt1, temptemp_additionalprice2, false, false);
                                }

                                /**
                                 TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                 optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                 optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                 optionmodifierTv.setText("\n   ");
                                 optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                                 GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                 printingLn.addView(optionmodifierTv);
                                 **/


                            }
                        }
                        // --------------------------------------------------------------------------------------------------------------------------------
                        // special request memo
                        if (!GlobalMemberValues.isStrEmpty(tempKitchenMemo) && !tempKitchenMemo.equals("nokitchenmemo")) {
                            String str_tempKitchenMemo = "--- Special Request ---\n" + "\t" + tempKitchenMemo;
                            for (int z = 25; z <= GlobalMemberValues.getSizeToString(str_tempKitchenMemo) ; z += 24){
                                tempHeight += 28;
                            }

                            if (tempHeight/35 < GlobalMemberValues.countChar(str_tempKitchenMemo, '\n')){
                                tempHeight = 40 * GlobalMemberValues.countChar(str_tempKitchenMemo, '\n');
                            }

                            TextView contentsTv = new TextView(MainActivity.mContext);
                            contentsTv.setText(str_tempKitchenMemo);
                            contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                            GlobalMemberValues.setTextStyleOnClover(contentsTv);
                            contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight + 28));
                            printingLn.addView(contentsTv);


//                            TextView tempKitchenMemoTv = new TextView(MainActivity.mContext);
//                            tempKitchenMemoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
//                            tempKitchenMemoTv.setGravity(Gravity.LEFT|Gravity.TOP);
//                            tempKitchenMemoTv.setText("--- Special Request ---\n" + "\t" + tempKitchenMemo);
//                            tempKitchenMemoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
//                            GlobalMemberValues.setTextStyleOnClover(tempKitchenMemoTv);

//                            printingLn.addView(tempKitchenMemoTv);


//                            GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempAdditionalTxt1, temptemp_additionalprice2, false);
                        }

                        // discount / extra
                        if (!selectedDcExtraAllEach.isEmpty()){
                            if (selectedDcExtraAllEach.equals("ALL")){
                                String str_all_aheadtxt = "";
                                if (selectedDcExtraType.equals("DC")){
                                    // all dc
                                    str_all_aheadtxt = "ALL Discount "+ dcextravalue + dcextratype;
                                    str_discountYN = "All D/C Total";
                                } else {
                                    // add ex
                                    str_all_aheadtxt = "ALL Extra "+ dcextravalue + dcextratype;
                                    str_discountYN = "Extra Total";
                                }
                                if (strOrderItemsList.length - 1 == i){

                                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));

                                    TextView contentsTv = new TextView(MainActivity.mContext);
                                    contentsTv.setText(" > " + str_all_aheadtxt);
                                    contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                                    GlobalMemberValues.setTextStyleOnClover(contentsTv);
                                    contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight));
                                    printingLn.addView(contentsTv);
                                }

                            } else if (selectedDcExtraAllEach.equals("EACH")){
                                String str_each_aheadtxt = "";
                                if (selectedDcExtraType.equals("DC")){
                                    // each dc
                                    str_each_aheadtxt = "Each Discount " + dcextravalue + dcextratype;
                                    str_discountYN = "Each D/C Total";
                                } else {
                                    // each ex
                                    str_each_aheadtxt = "Each Extra " + dcextravalue + dcextratype;
                                    str_discountYN = "Extra Total";
                                }

                                TextView contentsTv = new TextView(MainActivity.mContext);
                                contentsTv.setText(" > " + str_each_aheadtxt);
                                contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                                GlobalMemberValues.setTextStyleOnClover(contentsTv);
                                contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight));
                                printingLn.addView(contentsTv);
                            }

                            d_discountAmount = d_discountAmount + GlobalMemberValues.getDoubleAtString(selectedDcExtraPrice);
                            str_discountextra_total = GlobalMemberValues.getStringFormatNumber(d_discountAmount, "2");
                        }

                        // discount / extra
                    }
                    itemPrint.deleteItemPrintingList(printCode);
                }
                /**********************************************************************************************************************************/

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                if (str_deliverytakeaway.equals("D")) {
                    // 기본 배송비가 얼마인지 구한다.
                    double store_deliverycharge = GlobalMemberValues.getDoubleAtString(
                            MainActivity.mDbInit.dbExecuteReadReturnString("select deliverycharge from salon_storegeneral")
                    );

                    // 배송비 무료 기준금액
                    double store_deliveryfreemoney = GlobalMemberValues.getDoubleAtString(
                            MainActivity.mDbInit.dbExecuteReadReturnString("select deliveryfree from salon_storegeneral")
                    );

                    if (totalAmount > 0) {
                        if (totalAmount < store_deliveryfreemoney) {
                            pickupDeliveryFee = store_deliverycharge;
                        }
                    }
                } else {
                    if (str_deliverytakeaway.equals("T")) {
                        // Pickup (Togo) 포장 비용이 있을 경우
                        double store_pickupcharge = GlobalMemberValues.getDoubleAtString(
                                MainActivity.mDbInit.dbExecuteReadReturnString("select pickupcharge from salon_storegeneral")
                        );
                        pickupDeliveryFee = store_pickupcharge;
                    }
                }

                totalAmount += pickupDeliveryFee;


                // 230421
                str_split_idx = GlobalMemberValues.getDataInJsonData(data, "split_idx");
//                String noneT_tableIDX = str_restaurant_tableidx.replace("T", "");
//                String tempHoldCode = TableSaleMain.getHoldCodeByTableidx(noneT_tableIDX, TableSaleMain.mSubTableNum);
//                int getBillCnt = GlobalMemberValues.getIntAtString(MssqlDatabase.getResultSetValueToString(
//                        " select count(*) from bill_list where holdcode = '" + tempHoldCode + "' "
//                ));

                subTotal = GlobalMemberValues.getDoubleAtString(MssqlDatabase.getResultSetValueToString(" select subtotalamt from bill_list where holdcode = '" + tempHoldCode + "' and idx = '" + str_split_idx + "'"));
                subTax = GlobalMemberValues.getDoubleAtString(MssqlDatabase.getResultSetValueToString(" select taxamt from bill_list where holdcode = '" + tempHoldCode + "' and idx = '" + str_split_idx + "'"));
                str_commongratuity = MssqlDatabase.getResultSetValueToString(" select gratuityamt from bill_list where holdcode = '" + tempHoldCode + "' and idx = '" + str_split_idx + "'");
                str_discountextra_total = GlobalMemberValues.getCommaStringForDouble(MssqlDatabase.getResultSetValueToString(" select dcextraAmt from bill_list where holdcode = '" + tempHoldCode + "' and idx = '" + str_split_idx + "'"));


                // Sub Total ----------------------------------------------------------------------------------------------------------------------
                LinearLayout subtotalLn = new LinearLayout(MainActivity.mContext);
                subtotalLn.setLayoutParams(matchParentParams);
                subtotalLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                customerNameLeftTv.setText("Sub Total");
                customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                subtotalLn.addView(customerNameLeftTv);

                TextView customerNameRightTv = new TextView(MainActivity.mContext);
                customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                customerNameRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(subTotal + ""));
                customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                subtotalLn.addView(customerNameRightTv);

                printingLn.addView(subtotalLn);
                // ---------------------------------------------------------------------------------------------------------------------------------
                // Tax -------------------------------------------------------------------------------------------------------------------------------------
                LinearLayout taxLn = new LinearLayout(MainActivity.mContext);
                taxLn.setLayoutParams(matchParentParams);
                taxLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView dcextratotalTv = new TextView(MainActivity.mContext);
                dcextratotalTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                dcextratotalTv.setText("Tax");
                dcextratotalTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(dcextratotalTv);
                dcextratotalTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                taxLn.addView(dcextratotalTv);

                TextView dcextratotalLeftTv = new TextView(MainActivity.mContext);
                dcextratotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                dcextratotalLeftTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(subTax + ""));
                dcextratotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(dcextratotalLeftTv);
                dcextratotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                taxLn.addView(dcextratotalLeftTv);

                printingLn.addView(taxLn);
                // ---------------------------------------------------------------------------------------------------------------------------------
                // Common Gratuity -----------------------------------------------------------------------------------------------------------------------
                if (GlobalMemberValues.getDoubleAtString(str_commongratuity) != 0) {
                    LinearLayout commongratuityLn = new LinearLayout(MainActivity.mContext);
                    commongratuityLn.setLayoutParams(matchParentParams);
                    commongratuityLn.setOrientation(LinearLayout.HORIZONTAL);

                    // 04242023 --------------------------------------------------------------------------
                    String tempCGtype = MainActivity.mDbInit.dbExecuteReadReturnString(
                            " select gratuitytype from salon_storegeneral "
                    );
                    if (GlobalMemberValues.isStrEmpty(tempCGtype)) {
                        tempCGtype = "%";
                    }

                    double tempGratuityvalue = GlobalMemberValues.getDoubleAtString(MainActivity.mDbInit.dbExecuteReadReturnString(
                            " select gratuityvalue from salon_storegeneral "
                    ));

                    String tempCGName = "";
                    if (tempCGtype == "%" || tempCGtype.equals("%")) {
                        tempCGName = tempGratuityvalue + tempCGtype;
                    } else {
                        tempCGName = tempCGtype + tempGratuityvalue;
                    }

                    String commonGratuityStr = "Gratuity " + tempCGName;
                    // 04242023 --------------------------------------------------------------------------

                    TextView commongratuityTv = new TextView(MainActivity.mContext);
                    commongratuityTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);

                    // 04242023
                    commongratuityTv.setText(commonGratuityStr);

                    commongratuityTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(commongratuityTv);
                    commongratuityTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    commongratuityLn.addView(commongratuityTv);


                    TextView commongratuityRightTv = new TextView(MainActivity.mContext);
                    commongratuityRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    commongratuityRightTv.setText(finalTempDollarStr + GlobalMemberValues.setDoubleToString(GlobalMemberValues.getDoubleAtString(str_commongratuity),2));
                    commongratuityRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(commongratuityRightTv);
                    commongratuityRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    commongratuityLn.addView(commongratuityRightTv);

                    printingLn.addView(commongratuityLn);
                }
                // ---------------------------------------------------------------------------------------------------------------------------------

                // ---------------------------------------------------------------------------------------------------------------------------------
                // discount / extra
                if (!str_discountextra_total.equals("") && GlobalMemberValues.getDoubleAtString(str_discountextra_total) != 0){
                    if (str_discountYN.isEmpty()){
                        str_discountYN = "D/C";
                    }
                    LinearLayout discountLn = new LinearLayout(MainActivity.mContext);
                    discountLn.setLayoutParams(matchParentParams);
                    discountLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView dcextratotalTv2 = new TextView(MainActivity.mContext);
                    dcextratotalTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    dcextratotalTv2.setText(str_discountYN);
                    dcextratotalTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(dcextratotalTv2);
                    dcextratotalTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    discountLn.addView(dcextratotalTv2);

                    if (str_discountYN.contains("D/C")){
                        str_discountextra_total = "-" + str_discountextra_total;
                    }

                    TextView dcextratotalLeftTv2 = new TextView(MainActivity.mContext);
                    dcextratotalLeftTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    dcextratotalLeftTv2.setText(finalTempDollarStr + str_discountextra_total);
                    dcextratotalLeftTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(dcextratotalLeftTv2);
                    dcextratotalLeftTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    discountLn.addView(dcextratotalLeftTv2);

                    printingLn.addView(discountLn);
                }
                // ---------------------------------------------------------------------------------------------------------------------------------
                if (pickupDeliveryFee > 0) {
                    if (str_deliverytakeaway.equals("D")) {
                        main_Text +=  "Delivery Fee        ";
                    } else {
                        main_Text +=  "To Go Fee         ";
                    }

                    LinearLayout deliverytogofeeLn = new LinearLayout(MainActivity.mContext);
                    deliverytogofeeLn.setLayoutParams(matchParentParams);
                    deliverytogofeeLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView deliveryToGoFeeLeftTv = new TextView(MainActivity.mContext);
                    deliveryToGoFeeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    deliveryToGoFeeLeftTv.setText(main_Text);
                    deliveryToGoFeeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(deliveryToGoFeeLeftTv);
                    deliveryToGoFeeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    deliverytogofeeLn.addView(deliveryToGoFeeLeftTv);

                    TextView deliveryToGoFeeRightTv = new TextView(MainActivity.mContext);
                    deliveryToGoFeeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    deliveryToGoFeeRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(pickupDeliveryFee + ""));
                    deliveryToGoFeeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(deliveryToGoFeeRightTv);
                    deliveryToGoFeeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    deliverytogofeeLn.addView(deliveryToGoFeeRightTv);

                    printingLn.addView(deliverytogofeeLn);
                }


                // pay amount 구하기.
                double temp_payAmount = 0.00;
                if (!GlobalMemberValues.getDataInJsonData(data, "allitem_totalamount").equals("")) {
                    temp_payAmount = new BigDecimal(totalAmount).setScale(2, RoundingMode.HALF_EVEN).doubleValue();
//                    totalAmount = GlobalMemberValues.getDoubleAtString(GlobalMemberValues.getDataInJsonData(data, "allitem_totalamount"));
                }
                totalAmount = GlobalMemberValues.getDoubleAtString(MssqlDatabase.getResultSetValueToString(" select totalamountAmt from bill_list where holdcode = '" + tempHoldCode + "' and idx = '" + str_split_idx + "'"));

                // Total Amount --------------------------------------------------------------------------------------------------------------------
                LinearLayout totalAmountLn = new LinearLayout(MainActivity.mContext);
                totalAmountLn.setLayoutParams(matchParentParams);
                totalAmountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView totalAmountLeftTv = new TextView(MainActivity.mContext);
                totalAmountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                totalAmountLeftTv.setText("Total Amount");
                totalAmountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(totalAmountLeftTv);
                totalAmountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                totalAmountLn.addView(totalAmountLeftTv);

                TextView totalAmountRightTv = new TextView(MainActivity.mContext);
                totalAmountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                totalAmountRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(totalAmount + ""));
                totalAmountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(totalAmountRightTv);
                totalAmountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                totalAmountLn.addView(totalAmountRightTv);

                printingLn.addView(totalAmountLn);
                // ---------------------------------------------------------------------------------------------------------------------------------

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                // Pay Amount --------------------------------------------------------------------------------------------------------------------
                // 230426 pay amount 제거
//                if (temp_payAmount != 0.00) {
//
//                    double payAmount = GlobalMemberValues.getDoubleAtString(GlobalMemberValues.getDataInJsonData(data, "split_price"));
//                    if (temp_payAmount == totalAmount){
//                        if (payAmount != 0.00) {
//                            temp_payAmount = payAmount;
//                        }
//                    }
//
//                    LinearLayout payAmountLn = new LinearLayout(MainActivity.mContext);
//                    payAmountLn.setLayoutParams(matchParentParams);
//                    payAmountLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                    TextView payAmountLeftTv = new TextView(MainActivity.mContext);
//                    payAmountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                    payAmountLeftTv.setText("Pay Amount");
//                    payAmountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
//                    GlobalMemberValues.setTextStyleOnClover(payAmountLeftTv);
//                    payAmountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                    payAmountLn.addView(payAmountLeftTv);
//
//                    // 12282022
//                    temp_payAmount = GlobalMemberValues.getDoubleAtString(GlobalMemberValues.getDataInJsonData(data, "bill_list_billamount"));
//
//                    TextView payAmountRightTv = new TextView(MainActivity.mContext);
//                    payAmountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
//                    payAmountRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(temp_payAmount + ""));
//                    payAmountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
//                    GlobalMemberValues.setTextStyleOnClover(payAmountRightTv);
//                    payAmountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
//                    payAmountLn.addView(payAmountRightTv);
//
//                    printingLn.addView(payAmountLn);
//                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
//                }



                // qr code -----------------------------------------------------------------------------------------
//if (globalMemberValues.getPOSType().equals("R") && globalMemberValues.isPOSWebPay() && temp_payAmount == 0.00) {
                if (globalMemberValues.getPOSType().equals("R") && globalMemberValues.isPOSWebPay()){
                    LinearLayout tablepayLn = new LinearLayout(MainActivity.mContext);
                    tablepayLn.setLayoutParams(matchParentParams);
                    tablepayLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView tablepayTv = new TextView(MainActivity.mContext);
                    tablepayTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                    tablepayTv.setText("Scan the QR code below to pay at the table");
                    tablepayTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, (GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER  - 5));
                    GlobalMemberValues.setTextStyleOnClover(tablepayTv);
                    tablepayTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    tablepayLn.addView(tablepayTv);

                    printingLn.addView(tablepayLn);


                    String tempAppHost = "m";
                    if (GlobalMemberValues.CLOUD_HOST.indexOf("csecu") != -1) {
                        tempAppHost = "app";
                    }
                    String tempAppStr = GlobalMemberValues.CLOUD_SERVER_URL_BASIC;
                    String qrcodeStr = GlobalMemberValues.getReplaceText(tempAppStr, GlobalMemberValues.CLOUD_HOST, tempAppHost);
                    qrcodeStr += "index_sitedoor.asp?n=" + GlobalMemberValues.STORE_INDEX +
                            "-J-" + str_restaurant_tablename +
                            "-J-" + GlobalMemberValues.getReplaceText(str_restaurant_tableidx, "T", "") +
                            "-J-" + "Y" +
                            "-J-" + GlobalMemberValues.STATION_CODE +
                            "-J-" + str_restaurant_tableholdcode +
                            "-J-" + GlobalMemberValues.SALON_NAME +
                            "-J-" + str_restaurant_tablename +
                            "-J-" + "$" + GlobalMemberValues.getCommaStringForDouble(totalAmount + "");

                    GlobalMemberValues.logWrite("qrcodejjjlog", "qrcode txt : " + qrcodeStr + "\n");

                    ImageView qrImage = new ImageView(MainActivity.mContext);
                    qrImage.setImageBitmap(GlobalMemberValues.generateRQCode(qrcodeStr));
                    printingLn.addView(qrImage);
                }
                // ------------------------------------------------------------------------------------------------

                // receipt footer 프린터 --------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_receiptfooter)) {
                    TextView footerTv = new TextView(MainActivity.mContext);
                    footerTv.setLayoutParams(matchParentParams);
                    footerTv.setGravity(Gravity.CENTER);
                    footerTv.setText(str_receiptfooter);
                    footerTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                    GlobalMemberValues.setTextStyleOnClover(footerTv);
                    printingLn.addView(footerTv);

                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }
                // ------------------------------------------------------------------------------------------------

                TextView footerTv = new TextView(MainActivity.mContext);
                footerTv.setLayoutParams(matchParentParams);
                footerTv.setGravity(Gravity.CENTER);
                footerTv.setText("Printed Time " + getDate() + " " + getTime());
                footerTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER );
                GlobalMemberValues.setTextStyleOnClover(footerTv);
                printingLn.addView(footerTv);
            }
        };
        thread.start();
        try {
            thread.join();
        } catch(InterruptedException e) {
        }
        if (is_item_array_null[0] == true){
            is_item_array_null[0] = false;
            return null;
        }

        return printingLn;
    }

    public static LinearLayout makingLinearLayoutForTableSaleView_onlyView(final JSONObject data) {
        if (data == null) {
            return  null;
        }

        GlobalMemberValues.logWrite("cloverprintinglog", "받은 데이터 : " + data.toString() + "\n");

        final LinearLayout.LayoutParams matchParentParams
                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32);
        matchParentParams.setMargins(0, 0, 0, 0);

        final LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
        printingLn.setLayoutParams(new LinearLayout.LayoutParams(GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, LinearLayout.LayoutParams.MATCH_PARENT));
        printingLn.setOrientation(LinearLayout.VERTICAL);
        printingLn.setBackgroundColor(Color.parseColor("#ffffff"));

        // 가격표시앞에 $ 표시여부
        String tempDollarStr = "";
        if (GlobalMemberValues.ISDISPLAYPRICEDOLLAR) {
            tempDollarStr = "$";
        }
        final String finalTempDollarStr = tempDollarStr;

        Thread thread = new Thread(){
            @SuppressLint("LongLogTag")
            @Override
            public void run(){
                String str_receiptno = "";
                String str_ordertype = "";

                String titleText1 = "";
                String titleText2 = "";
                String titleText3 = "";
                String main_Text = "";

                String memo_Text = "";

                String customerText = "";

                String str_saledate = "";
                String str_saletime = "";

                String str_saleitemlist = "";

                String str_customername = "";
                String str_customerphonenum = "";
                String str_customeraddress = "";

                String str_deliverytakeaway = "";
                String str_deliverydate = "";

                String str_customermemo = "";

                String str_kitchenreprintyn = "N";

                String str_receiptfooter = "";

                String str_customerOrderNumber = "";
                String str_customerPagerNumber = "";

                String str_phoneOrder = "";
                String str_phoneOrderNumber = "";
                String str_phoneorderholecode = "";

                String str_storestate = "";
                String str_storename = "";
                String str_storecity = "";
                String str_storezip = "";
                String str_storephone = "";
                String str_storeaddress2 = "";
                String str_storeaddress1 = "";

                // Restaurant 관련
                String str_restaurant_tableidx = "";
                String str_restaurant_tablename = "";
                String str_restaurant_tablepeoplecnt = "";
                String str_restaurant_tableholdcode = "";

                //discount / extra
                String str_discountextra_total = "";
                String str_discountYN = "";

                String str_commongratuity = "";

                String str_split_idx = "";


                str_storestate = GlobalMemberValues.getDataInJsonData(data, "storestate");
                str_storename  = GlobalMemberValues.getDataInJsonData(data, "storename");
                str_storecity = GlobalMemberValues.getDataInJsonData(data, "storecity");
                str_storezip = GlobalMemberValues.getDataInJsonData(data, "storezip");
                str_storeaddress2 = GlobalMemberValues.getDataInJsonData(data, "storeaddress2");
                str_storeaddress1 = GlobalMemberValues.getDataInJsonData(data, "storeaddress1");
                str_storephone = GlobalMemberValues.getDataInJsonData(data, "storephone");
                str_saledate = GlobalMemberValues.getDataInJsonData(data, "saledate");
                str_saletime = GlobalMemberValues.getDataInJsonData(data, "saletime");
                str_receiptno = GlobalMemberValues.getDataInJsonData(data, "receiptno");
                str_saleitemlist = GlobalMemberValues.getDataInJsonData(data, "saleitemlist");
                str_customername = GlobalMemberValues.getDataInJsonData(data, "customername");
                str_customerphonenum = GlobalMemberValues.getDataInJsonData(data, "customerphonenum");
                str_customeraddress = GlobalMemberValues.getDataInJsonData(data, "customeraddress");
                str_deliverytakeaway = GlobalMemberValues.getDataInJsonData(data, "deliverytakeaway");
                str_deliverydate = GlobalMemberValues.getDataInJsonData(data, "deliverydate");
                str_ordertype = GlobalMemberValues.getDataInJsonData(data, "ordertype");
                str_customermemo = GlobalMemberValues.getDataInJsonData(data, "customermemo");
                str_receiptfooter = GlobalMemberValues.getDataInJsonData(data, "receiptfooter");
                str_customerOrderNumber = GlobalMemberValues.getDataInJsonData(data, "customerordernumber");
                str_customerPagerNumber = GlobalMemberValues.getDataInJsonData(data, "customerpagernumber");
                str_phoneOrder = GlobalMemberValues.getDataInJsonData(data, "phoneorder");
                str_phoneOrderNumber = GlobalMemberValues.getDataInJsonData(data, "phoneordernumber");

                // Restaurant 관련
                str_restaurant_tableidx = GlobalMemberValues.getDataInJsonData(data, "restaurant_tableidx");
                str_restaurant_tablename = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablename");
                str_restaurant_tablepeoplecnt = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablepeoplecnt");
                str_restaurant_tableholdcode = GlobalMemberValues.getDataInJsonData(data, "restaurant_tableholdcode");

                GlobalMemberValues globalMemberValues = new GlobalMemberValues();

                str_split_idx = GlobalMemberValues.getDataInJsonData(data, "split_idx");
                String noneT_tableIDX = str_restaurant_tableidx.replace("T", "");
                String tempHoldCode = TableSaleMain.getHoldCodeByTableidx(noneT_tableIDX, TableSaleMain.mSubTableNum);
                int getBillCnt = GlobalMemberValues.getIntAtString(MssqlDatabase.getResultSetValueToString(
                        " select count(*) from bill_list where holdcode = '" + tempHoldCode + "' "
                ));


                // Restaurant 관련
                if (!GlobalMemberValues.isStrEmpty(str_restaurant_tablename)) {
                    TextView pagerNoTv = new TextView(MainActivity.mContext);
                    pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100));
                    pagerNoTv.setGravity(Gravity.CENTER);
                    pagerNoTv.setText(str_restaurant_tablename);
                    pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW + 60);
                    pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                    printingLn.addView(pagerNoTv);

                    // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                }

                if (!GlobalMemberValues.isStrEmpty(str_phoneOrder) && str_phoneOrder.equals("Y")) {
                    str_customerOrderNumber = str_phoneOrderNumber;
                }

                // 로고 프린팅
                String logoprintingonreceiptyn = MainActivity.mDbInit.dbExecuteReadReturnString(
                        " select logoprintingonreceiptyn from salon_storestationsettings_deviceprinter ");
                if (GlobalMemberValues.isStrEmpty(logoprintingonreceiptyn)) {
                    logoprintingonreceiptyn = "N";
                }
                if (logoprintingonreceiptyn == "Y" || logoprintingonreceiptyn.equals("Y")) {
                    File path = GlobalMemberValues.ADFILELOCALPATH;
                    File isFile = new File(path, "receiptlogoimg.png"); //파일명까지 포함함 경로의 File 객체 생성
                    String adImage = isFile.getPath();
                    if (new File(adImage).exists()) {
                        ImageView logoimg = new ImageView(MainActivity.mContext);
                        logoimg.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 200));
                        logoimg.setImageBitmap(BitmapFactory.decodeFile(isFile.getAbsolutePath()));
                        //logoimg.setScaleType(ImageView.ScaleType.FIT_CENTER);
                        printingLn.addView(logoimg);

                        // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                        printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 30));
                        // ------------------------------------------------------------------------------------------------------------------------------
                    }
                }

                // Store 이름
                TextView storenameTv = new TextView(MainActivity.mContext);
                storenameTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                storenameTv.setGravity(Gravity.CENTER);
                storenameTv.setText("*** " + str_storename + " ***");
                storenameTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW + 10);
                storenameTv.setPaintFlags(storenameTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                GlobalMemberValues.setTextStyleOnClover(storenameTv);
                printingLn.addView(storenameTv);

                // Store 주소 1, 2
                TextView storeaddrTv = new TextView(MainActivity.mContext);
                storeaddrTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                storeaddrTv.setGravity(Gravity.CENTER);
                storeaddrTv.setText(str_storeaddress1 + " "+ str_storeaddress2);
                storeaddrTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(storeaddrTv);
                printingLn.addView(storeaddrTv);

                // Store 주소 나머지
                TextView storeaddretcTv = new TextView(MainActivity.mContext);
                storeaddretcTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                storeaddretcTv.setGravity(Gravity.CENTER);
                storeaddretcTv.setText(str_storecity + " " + str_storestate + " "+ str_storezip);
                storeaddretcTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(storeaddretcTv);
                printingLn.addView(storeaddretcTv);

                // Store 전화번호
                TextView storetelTv = new TextView(MainActivity.mContext);
                storetelTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                storetelTv.setGravity(Gravity.CENTER);
                storetelTv.setText("(TEL) "+ telNumberExch(str_storephone));
                storetelTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(storetelTv);
                printingLn.addView(storetelTv);

                GlobalMemberValues.logWrite("cloverdatacheckreturnlog", "스토어명 : " + str_storename + "\n");
                GlobalMemberValues.logWrite("cloverdatacheckreturnlog", "전화번호 : " + telNumberExch(str_storephone) + "\n");

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                // Restaurant 관련
                if (!GlobalMemberValues.isStrEmpty(str_restaurant_tablename)) {
                    LinearLayout tableinfoLn = new LinearLayout(MainActivity.mContext);
                    tableinfoLn.setLayoutParams(matchParentParams);
                    tableinfoLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView tableinfoTv1 = new TextView(MainActivity.mContext);
                    tableinfoTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    tableinfoTv1.setText("Table Info.");
                    tableinfoTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(tableinfoTv1);
                    tableinfoTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    tableinfoLn.addView(tableinfoTv1);

                    TextView tableinfoTv2 = new TextView(MainActivity.mContext);
                    tableinfoTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    tableinfoTv2.setText(" : " + str_restaurant_tablename);
                    tableinfoTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(tableinfoTv2);
                    tableinfoTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    tableinfoLn.addView(tableinfoTv2);

                    printingLn.addView(tableinfoLn);
                    // --------------------------------------------------------------------------------------------------------------------------------

                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }

                // Restaurant 관련
//                if ((globalMemberValues.getPOSType().toUpperCase() == "R" || globalMemberValues.getPOSType().toUpperCase().equals("R"))
//                        && GlobalMemberValues.now_saletypeisrestaurant) {
//                    LinearLayout tablepeoplecntLn = new LinearLayout(MainActivity.mContext);
//                    tablepeoplecntLn.setLayoutParams(matchParentParams);
//                    tablepeoplecntLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                    TextView tablepeoplecntTv1 = new TextView(MainActivity.mContext);
//                    tablepeoplecntTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                    tablepeoplecntTv1.setText("Customer Count");
//                    tablepeoplecntTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
//                    GlobalMemberValues.setTextStyleOnClover(tablepeoplecntTv1);
//                    tablepeoplecntTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                    tablepeoplecntLn.addView(tablepeoplecntTv1);
//
//                    TextView tablepeoplecntTv2 = new TextView(MainActivity.mContext);
//                    tablepeoplecntTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                    tablepeoplecntTv2.setText(" : " + str_restaurant_tablepeoplecnt);
//                    tablepeoplecntTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
//                    GlobalMemberValues.setTextStyleOnClover(tablepeoplecntTv2);
//                    tablepeoplecntTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
//                    tablepeoplecntLn.addView(tablepeoplecntTv2);
//
//                    printingLn.addView(tablepeoplecntLn);
//                    // --------------------------------------------------------------------------------------------------------------------------------
//
//                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
//                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
//                    // ---------------------------------------------------------------------------------------------------------------------------------
//                }

                if (GlobalMemberValues.isOrderNumberSectionViewOn()) {
                    // 주문번호 ------------------------------------------------------------------------------------------------------------------------
                    LinearLayout salesCodeLn = new LinearLayout(MainActivity.mContext);
                    salesCodeLn.setLayoutParams(matchParentParams);
                    salesCodeLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView customerOrderNumLeftTv = new TextView(MainActivity.mContext);
                    customerOrderNumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    customerOrderNumLeftTv.setText("Order No.");
                    customerOrderNumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(customerOrderNumLeftTv);
                    customerOrderNumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    salesCodeLn.addView(customerOrderNumLeftTv);

                    TextView customerOrderNumRightTv = new TextView(MainActivity.mContext);
                    customerOrderNumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    customerOrderNumRightTv.setText(" : " + str_customerOrderNumber);
                    customerOrderNumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(customerOrderNumRightTv);
                    customerOrderNumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    salesCodeLn.addView(customerOrderNumRightTv);

                    printingLn.addView(salesCodeLn);
                    // --------------------------------------------------------------------------------------------------------------------------------

                    // 수령타입 -----------------------------------------------------------------------------------------------------------------------
                    LinearLayout receivingTypeLn = new LinearLayout(MainActivity.mContext);
                    receivingTypeLn.setLayoutParams(matchParentParams);
                    receivingTypeLn.setOrientation(LinearLayout.HORIZONTAL);

                    String tempDeliveryTakeaway = "HERE";
                    if (!GlobalMemberValues.isStrEmpty(str_deliverytakeaway)) {
                        switch (str_deliverytakeaway) {
                            case "H" : {
                                tempDeliveryTakeaway = "HERE";
                                break;
                            }
                            case "T" : {
                                tempDeliveryTakeaway = "TO GO";
                                break;
                            }
                            case "D" : {
                                tempDeliveryTakeaway = "DELIVERY";
                                break;
                            }
                        }
                    }

                    TextView receivingTypeLeftTv = new TextView(MainActivity.mContext);
                    receivingTypeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    receivingTypeLeftTv.setText("Pick Up Type");
                    receivingTypeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(receivingTypeLeftTv);
                    receivingTypeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    receivingTypeLn.addView(receivingTypeLeftTv);

                    TextView receivingTypeRightTv = new TextView(MainActivity.mContext);
                    receivingTypeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    receivingTypeRightTv.setText(" : " + tempDeliveryTakeaway);
                    receivingTypeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(receivingTypeRightTv);
                    receivingTypeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    receivingTypeLn.addView(receivingTypeRightTv);

                    printingLn.addView(receivingTypeLn);
                    // --------------------------------------------------------------------------------------------------------------------------------

                    if (GlobalMemberValues.mCustomerInfoShowYN) {

                        // 고객 이름 -------------------------------------------------------------------------------------------------------------------
                        if (!GlobalMemberValues.isStrEmpty(str_customername) || !str_customername.equals(" ")) {
                            LinearLayout customerPhoneLn = new LinearLayout(MainActivity.mContext);
                            customerPhoneLn.setLayoutParams(matchParentParams);
                            customerPhoneLn.setOrientation(LinearLayout.HORIZONTAL);

                            TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                            customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            customerNameLeftTv.setText("Customer Name.");
                            customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                            GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                            customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            customerPhoneLn.addView(customerNameLeftTv);

                            TextView customerNameRightTv = new TextView(MainActivity.mContext);
                            customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            customerNameRightTv.setText(" : " + str_customername);
                            customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                            GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                            customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                            customerPhoneLn.addView(customerNameRightTv);

                            printingLn.addView(customerPhoneLn);
                        }
                        // --------------------------------------------------------------------------------------------------------------------------------
                        // 고객전화번호 -------------------------------------------------------------------------------------------------------------------
                        if (!GlobalMemberValues.isStrEmpty(str_customerphonenum) ) {
                            if (str_customerphonenum.contains("@")){

                            } else {
                                LinearLayout customerPhoneLn = new LinearLayout(MainActivity.mContext);
                                customerPhoneLn.setLayoutParams(matchParentParams);
                                customerPhoneLn.setOrientation(LinearLayout.HORIZONTAL);

                                TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                                customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                if (str_customerphonenum.contains("@")){
                                    customerNameLeftTv.setText("E-mail");
                                } else {
                                    customerNameLeftTv.setText("Phone No.");
                                }
                                customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                                GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                                customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                                customerPhoneLn.addView(customerNameLeftTv);

                                TextView customerNameRightTv = new TextView(MainActivity.mContext);
                                customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                                customerNameRightTv.setText(" : " + str_customerphonenum);
                                customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                                GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                                customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                                customerPhoneLn.addView(customerNameRightTv);

                                printingLn.addView(customerPhoneLn);
                            }

                        }
                        // --------------------------------------------------------------------------------------------------------------------------------

                        // 고객주소 ------------------------------------------------------------------------------------------------------------------------
                        if (!GlobalMemberValues.isStrEmpty(str_customeraddress)) {
//                            String customerAddressAll = "";
//                            customerAddressAll = GlobalMemberValues.getPrintTxtCenterAlignment("<Address>", 44) + "\n";
//                            //titleText1 += str_customeraddress + "\n";
//                            String tempCustomerAddress[] = str_customeraddress.split("\n");
//                            customerAddressAll += GlobalMemberValues.getPrintTxtCenterAlignment2(tempCustomerAddress[0], 44) + "\n";
//                            if (tempCustomerAddress.length > 1) {
//                                customerAddressAll += GlobalMemberValues.getPrintTxtCenterAlignment2(tempCustomerAddress[1], 44) + "\n";
//                            }
//                            if (tempCustomerAddress.length > 2) {
//                                customerAddressAll += GlobalMemberValues.getPrintTxtCenterAlignment(tempCustomerAddress[2], 44) + "\n";
//                            }
//
//                            TextView customerAddrTv = new TextView(MainActivity.mContext);
//                            customerAddrTv.setLayoutParams(matchParentParams);
//                            customerAddrTv.setGravity(Gravity.CENTER);
//                            customerAddrTv.setText(customerAddressAll);
//                            customerAddrTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
//                            GlobalMemberValues.setTextStyleOnClover(customerAddrTv);
//                            printingLn.addView(customerAddrTv);
                            TextView addressTv = new TextView(MainActivity.mContext);
                            addressTv.setLayoutParams(matchParentParams);
                            addressTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                            addressTv.setText("<Address>");
                            addressTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                            GlobalMemberValues.setTextStyleOnClover(addressTv);
                            printingLn.addView(addressTv);
                            // --------------------------------------------------------------------------------------------------------------------
                            // Address Contents ------------------------------------------------------------------------------------------------------------
                            TextView addresscontentsTv = new TextView(MainActivity.mContext);
                            addresscontentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                            addresscontentsTv.setGravity(Gravity.CENTER_VERTICAL|Gravity.LEFT);
                            addresscontentsTv.setText(str_customeraddress);
                            addresscontentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                            GlobalMemberValues.setTextStyleOnClover(addresscontentsTv);
                            printingLn.addView(addresscontentsTv);
                        }
                        // --------------------------------------------------------------------------------------------------------------------------------
                    }

                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }


                // Receipt NO. --------------------------------------------------------------------------------------------------------------------
                // LinearLayout
                LinearLayout.LayoutParams matchParentParams_receiptno
                        = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 32);
                matchParentParams_receiptno.setMargins(0, 0, 0, 0);

                LinearLayout receiptnoLn = new LinearLayout(MainActivity.mContext);
                receiptnoLn.setLayoutParams(matchParentParams_receiptno);
                receiptnoLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView receiptNoLeftTv = new TextView(MainActivity.mContext);
                receiptNoLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                receiptNoLeftTv.setText("Receipt No.");
                receiptNoLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(receiptNoLeftTv);
                receiptNoLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.8f));
                receiptnoLn.addView(receiptNoLeftTv);

                TextView receiptNoRightTv = new TextView(MainActivity.mContext);
                receiptNoRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                receiptNoRightTv.setText(" : " + str_receiptno);
                receiptNoRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(receiptNoRightTv);
                receiptNoRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                receiptnoLn.addView(receiptNoRightTv);

                printingLn.addView(receiptnoLn);
                // --------------------------------------------------------------------------------------------------------------------------------

                // Sale Date ----------------------------------------------------------------------------------------------------------------------
                // LinearLayout
                LinearLayout saledateLn = new LinearLayout(MainActivity.mContext);
                saledateLn.setLayoutParams(matchParentParams);
                saledateLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView saleDateLeftTv = new TextView(MainActivity.mContext);
                saleDateLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                saleDateLeftTv.setText("Sale Date");
                saleDateLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(saleDateLeftTv);
                saleDateLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.8f));
                saledateLn.addView(saleDateLeftTv);

                TextView saleDateRightTv = new TextView(MainActivity.mContext);
                saleDateRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                saleDateRightTv.setText(" : " + str_saledate + " " + str_saletime);
                saleDateRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(saleDateRightTv);
                saleDateRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 2.0f));
                saledateLn.addView(saleDateRightTv);

                printingLn.addView(saledateLn);
                // --------------------------------------------------------------------------------------------------------------------------------

                /**
                 // Sale Time ----------------------------------------------------------------------------------------------------------------------
                 // LinearLayout
                 LinearLayout saletimeLn = new LinearLayout(MainActivity.mContext);
                 saletimeLn.setLayoutParams(matchParentParams);
                 saletimeLn.setOrientation(LinearLayout.HORIZONTAL);

                 TextView saleTimeLeftTv = new TextView(MainActivity.mContext);
                 saleTimeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 saleTimeLeftTv.setText("Sale Time");
                 saleTimeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                 GlobalMemberValues.setTextStyleOnClover(saleTimeLeftTv);
                 saleTimeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                 saletimeLn.addView(saleTimeLeftTv);

                 TextView saleTimeRightTv = new TextView(MainActivity.mContext);
                 saleTimeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 saleTimeRightTv.setText(" : " + str_saletime);
                 saleTimeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                 GlobalMemberValues.setTextStyleOnClover(saleTimeRightTv);
                 saleTimeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                 saletimeLn.addView(saleTimeRightTv);

                 printingLn.addView(saletimeLn);
                 // --------------------------------------------------------------------------------------------------------------------------------
                 **/

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                /** 세일아이템 관련 ***************************************************************************************************************/
                /**
                 LinearLayout saleitemlistLn = new LinearLayout(MainActivity.mContext);
                 saleitemlistLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 30));
                 saleitemlistLn.setOrientation(LinearLayout.HORIZONTAL);

                 // 세일아이템 타이틀 ---------------------------------------------------------------------------------------------------------------
                 TextView saleItemTv1 = new TextView(MainActivity.mContext);
                 saleItemTv1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 saleItemTv1.setText("Item Name");
                 saleItemTv1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv1);
                 saleItemTv1.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv1);

                 TextView saleItemTv2 = new TextView(MainActivity.mContext);
                 saleItemTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                 saleItemTv2.setText("Qty");
                 saleItemTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv2);
                 saleItemTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv2);

                 TextView saleItemTv3 = new TextView(MainActivity.mContext);
                 saleItemTv3.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                 saleItemTv3.setText("Price");
                 saleItemTv3.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv3);
                 saleItemTv3.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv3);

                 TextView saleItemTv4 = new TextView(MainActivity.mContext);
                 saleItemTv4.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                 saleItemTv4.setText("Amount");
                 saleItemTv4.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                 GlobalMemberValues.setTextStyleOnClover(saleItemTv4);
                 saleItemTv4.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                 saleitemlistLn.addView(saleItemTv4);

                 printingLn.addView(saleitemlistLn);
                 // --------------------------------------------------------------------------------------------------------------------------------

                 // 점선 ----------------------------------------------------------------------------------------------------------------------------
                 printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                 // ---------------------------------------------------------------------------------------------------------------------------------

                 **/



                double pickupDeliveryFee = 0.00;
                double subTotal = 0.00;
                double subTax = 0.00;
                double totalAmount = 0.00;
                double d_discountAmount = 0.0;

                if (!GlobalMemberValues.isStrEmpty(str_saleitemlist)) {
                    String[] strOrderItemsList = str_saleitemlist.split(GlobalMemberValues.STRSPLITTER_ORDERITEM1);

                    //
                    ItemPrint itemPrint = new ItemPrint();
                    String printCode = itemPrint.makeTempPrintingCode();
                    for (int i = 0; i < strOrderItemsList.length; i++) {
                        String[] strOrderItems = strOrderItemsList[i].split(GlobalMemberValues.STRSPLITTER_ORDERITEM2);
                        boolean isResult = itemPrint.setAddItemQtyByDuplicate(printCode, strOrderItems);
                    }
                    strOrderItemsList = itemPrint.getItemPrintListArr(printCode);
                    //

                    for (int i = 0; i < strOrderItemsList.length; i++) {
                        String[] strOrderItems = strOrderItemsList[i].split(GlobalMemberValues.STRSPLITTER_ORDERITEM2);



                        // 상품명, 수량 정보 --------------------------------------------------------------------
                        String tempItemNameOptionAdd = strOrderItems[0];
                        String tempItemQty = strOrderItems[1];
                        String tempPrice = strOrderItems[4];
//                        String tempPriceAmount = strOrderItems[5];
                        String tempPriceAmount = strOrderItems[5];
                        String tempTaxAmount = "0.0";
                        if (strOrderItems.length > 7) {
                            tempTaxAmount = strOrderItems[7];
                        }
                        String tempTotalAmount = strOrderItems[4];

                        GlobalMemberValues.logWrite("saleitemstrarray", "tempItemNameOptionAdd : " + tempItemNameOptionAdd + "\n");

                        String[] strItemNAmeOptionAdd = tempItemNameOptionAdd.split(GlobalMemberValues.STRSPLITTER_ORDERITEM3);
                        String tempItemName = strItemNAmeOptionAdd[0];
                        String tempOptionTxt = "";
                        String tempAdditionalTxt1 = "";
                        String tempAdditionalTxt2 = "";
                        String tempItemIdx = "";
                        String tempKitchenMemo = "";
                        String tempOptionPrice = "";
                        String temptemp_additionalprice1 = "";
                        String temptemp_additionalprice2 = "";
                        String selectedDcExtraAllEach = "";
                        String selectedDcExtraType = "";
                        String dcextratype = "";
                        String dcextravalue = "";
                        String selectedDcExtraPrice = "";
                        if (strItemNAmeOptionAdd.length > 1) {
                            tempOptionTxt = strItemNAmeOptionAdd[1];
                            if (strItemNAmeOptionAdd.length > 2) {
                                tempAdditionalTxt1 = strItemNAmeOptionAdd[2];
                            }
                            if (strItemNAmeOptionAdd.length > 3) {
                                tempAdditionalTxt2 = strItemNAmeOptionAdd[3];
                            }
                            if (strItemNAmeOptionAdd.length > 4) {
                                tempItemIdx = strItemNAmeOptionAdd[4];
                            }
                            if (strItemNAmeOptionAdd.length > 6) {
                                tempKitchenMemo = strItemNAmeOptionAdd[6];
                            }
                            if (strItemNAmeOptionAdd.length > 7) {
                                tempOptionPrice = strItemNAmeOptionAdd[7];
                            }
                            if (strItemNAmeOptionAdd.length > 8) {
                                temptemp_additionalprice1 = strItemNAmeOptionAdd[8];
                            }
                            if (strItemNAmeOptionAdd.length > 9) {
                                temptemp_additionalprice2 = strItemNAmeOptionAdd[9];
                            }
                            // discount / extra
                            if (strItemNAmeOptionAdd.length > 10) {
                                selectedDcExtraAllEach = strItemNAmeOptionAdd[10];
                            }
                            if (strItemNAmeOptionAdd.length > 11) {
                                selectedDcExtraType = strItemNAmeOptionAdd[11];
                            }
                            if (strItemNAmeOptionAdd.length > 12) {
                                dcextratype = strItemNAmeOptionAdd[12];
                            }
                            if (strItemNAmeOptionAdd.length > 13) {
                                dcextravalue = strItemNAmeOptionAdd[13];
                            }
                            if (strItemNAmeOptionAdd.length > 14) {
                                selectedDcExtraPrice = strItemNAmeOptionAdd[14];
                            }
                        }
                        // ---------------------------------------------------------------------------------

                        double d_tempPriceAmount = GlobalMemberValues.getDoubleAtString(tempPriceAmount);
                        d_tempPriceAmount = d_tempPriceAmount * Integer.parseInt(tempItemQty);
                        tempPriceAmount = GlobalMemberValues.getStringFormatNumber(d_tempPriceAmount,"2");
                        double d_tempTaxAmount = GlobalMemberValues.getDoubleAtString(tempTaxAmount);
                        d_tempTaxAmount = d_tempTaxAmount * Integer.parseInt(tempItemQty);
                        tempTaxAmount = GlobalMemberValues.getStringFormatNumber(d_tempTaxAmount,"2");

                        subTotal += GlobalMemberValues.getDoubleAtString(tempPriceAmount);
                        subTax += GlobalMemberValues.getDoubleAtString(tempTaxAmount);
                        totalAmount += GlobalMemberValues.getDoubleAtString(tempPriceAmount) + GlobalMemberValues.getDoubleAtString(tempTaxAmount);;

                        LinearLayout saleitemlistLn2 = new LinearLayout(MainActivity.mContext);
                        saleitemlistLn2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                        saleitemlistLn2.setOrientation(LinearLayout.HORIZONTAL);

                        // 세일아이템 타이틀 ---------------------------------------------------------------------------------------------------------------
                        // 기존 순서대로... (item name      qty      price      amount)
                        /**
                         TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
                         saleItemTvContents1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                         saleItemTvContents1.setText(Payment_stringBackSpace_Exch(16, tempItemName));
                         saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                         GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
                         saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER));
                         saleitemlistLn2.addView(saleItemTvContents1);

                         TextView saleItemTvContents2 = new TextView(MainActivity.mContext);
                         saleItemTvContents2.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER);
                         saleItemTvContents2.setText(tempItemQty);
                         saleItemTvContents2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                         GlobalMemberValues.setTextStyleOnClover(saleItemTvContents2);
                         saleItemTvContents2.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                         saleitemlistLn2.addView(saleItemTvContents2);

                         TextView saleItemTvContents3 = new TextView(MainActivity.mContext);
                         saleItemTvContents3.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                         saleItemTvContents3.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(tempPrice));
                         saleItemTvContents3.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                         GlobalMemberValues.setTextStyleOnClover(saleItemTvContents3);
                         saleItemTvContents3.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER));
                         saleitemlistLn2.addView(saleItemTvContents3);

                         TextView saleItemTvContents4 = new TextView(MainActivity.mContext);
                         saleItemTvContents4.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                         saleItemTvContents4.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(tempPriceAmount));
                         saleItemTvContents4.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                         GlobalMemberValues.setTextStyleOnClover(saleItemTvContents4);
                         saleItemTvContents4.setLayoutParams(new LinearLayout.LayoutParams(0, 30, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                         saleitemlistLn2.addView(saleItemTvContents4);
                         **/
                        int tempHeight = 34;
//                        if (tempItemName.length() > 30 || GlobalMemberValues.getSizeToString(tempItemName) > 30) {
//                            tempHeight = (tempHeight * 2) + 4;
//                        }
                        for (int z = 25; z <= GlobalMemberValues.getSizeToString(tempItemName) ; z += 24){
                            tempHeight += 34;
                        }

                        // 새 순서대로... (qty           item name              amount)
                        if (tempItemName.equals(GlobalMemberValues.mCommonGratuityName)){
                            // common gratuity 의 경우 표시하지 않고 가격만 전달..
                            // else 의 경우 일반 아이템 작성
                            str_commongratuity = tempPriceAmount;
                        } else {
                            TextView saleItemTvContents2 = new TextView(MainActivity.mContext);
                            saleItemTvContents2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            saleItemTvContents2.setText(tempItemQty);
                            saleItemTvContents2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                            GlobalMemberValues.setTextStyleOnClover(saleItemTvContents2);
                            saleItemTvContents2.setLayoutParams(new LinearLayout.LayoutParams(0, 34, GlobalMemberValues.PRINTINGITMETITLE2_ONCLOVER));
                            saleitemlistLn2.addView(saleItemTvContents2);

//                        TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
//                        saleItemTvContents1.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                        saleItemTvContents1.setText(Payment_stringBackSpace_Exch(30, tempItemName));
//                        saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
//                        GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
//                        saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, 34, (GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER + GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER)));
//                        saleitemlistLn2.addView(saleItemTvContents1);

                            TextView saleItemTvContents1 = new TextView(MainActivity.mContext);
                            saleItemTvContents1.setGravity(Gravity.TOP | Gravity.LEFT);
                            //saleItemTvContents1.setText(Payment_stringBackSpace_Exch(30, str_itemname));
//                        saleItemTvContents1.setText(designTextForItem(str_itemname, 30));
                            saleItemTvContents1.setText(tempItemName);
                            saleItemTvContents1.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                            GlobalMemberValues.setTextStyleOnClover(saleItemTvContents1);
                            saleItemTvContents1.setLayoutParams(new LinearLayout.LayoutParams(0, tempHeight, (GlobalMemberValues.PRINTINGITMETITLE1_ONCLOVER + GlobalMemberValues.PRINTINGITMETITLE3_ONCLOVER - 0.1f)));
                            saleitemlistLn2.addView(saleItemTvContents1);


                            if (!GlobalMemberValues.isStrEmpty(tempOptionTxt)) {
                                double tempItemAmount = GlobalMemberValues.getDoubleAtString(tempPriceAmount);
                                if (GlobalMemberValues.MODIFIER_PRICEVIEW) {
                                    double tempOptionPriceSum = GlobalMemberValues.getDoubleAtString(tempOptionPrice)
                                            + GlobalMemberValues.getDoubleAtString(temptemp_additionalprice1) + GlobalMemberValues.getDoubleAtString(temptemp_additionalprice2);
                                    // jihun 추가 start
                                    if (tempItemQty.equals("1")){
                                        tempItemAmount -= tempOptionPriceSum;
                                    } else {
                                        tempItemAmount -= tempOptionPriceSum * Integer.parseInt(tempItemQty);
                                    }
                                    // jihun 추가 end

                                    tempPriceAmount = tempItemAmount + "";
                                }
                            }


                            TextView saleItemTvContents4 = new TextView(MainActivity.mContext);
                            saleItemTvContents4.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                            saleItemTvContents4.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(tempPriceAmount));
                            saleItemTvContents4.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                            GlobalMemberValues.setTextStyleOnClover(saleItemTvContents4);
                            saleItemTvContents4.setLayoutParams(new LinearLayout.LayoutParams(0, 34, GlobalMemberValues.PRINTINGITMETITLE4_ONCLOVER));
                            saleitemlistLn2.addView(saleItemTvContents4);

                            // --------------------------------------------------------------------------------------------------------------------------------

                            printingLn.addView(saleitemlistLn2);
                        }


                        // Modifier -------------------------------------------------------------------------------------------------------------------------
                        if (GlobalMemberValues.isModifierPrintYN()) {
                            if (!GlobalMemberValues.isStrEmpty(tempOptionTxt) ||
                                    !GlobalMemberValues.isStrEmpty(tempAdditionalTxt1) || !GlobalMemberValues.isStrEmpty(tempAdditionalTxt2) ) {
                                if (tempOptionTxt.contains("-J-")){
                                    tempOptionTxt = tempOptionTxt.replace("-J-","\n");
                                }
                                if (tempAdditionalTxt1.contains("-J-")){
                                    tempAdditionalTxt1 = tempAdditionalTxt1.replace("-J-","\n");
                                }
                                if (tempAdditionalTxt2.contains("-J-")){
                                    tempAdditionalTxt2 = tempAdditionalTxt2.replace("-J-","\n");
                                }
                                if (!GlobalMemberValues.isStrEmpty(tempOptionTxt)) {
                                    /**
                                     tempOptionTxt = "" + GlobalMemberValues.getModifierTxt2(tempItemQty, tempOptionTxt, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                     TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                     optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                     optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                     optionmodifierTv.setText(tempOptionTxt);
                                     optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                                     GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                     printingLn.addView(optionmodifierTv);
                                     **/



                                    GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempOptionTxt, tempOptionPrice, false, false);
                                }
                                if (!GlobalMemberValues.isStrEmpty(tempAdditionalTxt1)) {
                                    /**
                                     tempAdditionalTxt1 += GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
                                     "[Add Ingredients]\n" + GlobalMemberValues.getModifierTxt2(tempItemQty, tempAdditionalTxt1, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                     TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                     optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                     optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                     optionmodifierTv.setText(tempAdditionalTxt1);
                                     optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                                     GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                     printingLn.addView(optionmodifierTv);
                                     **/

                                    GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempAdditionalTxt1, temptemp_additionalprice1, false, false);
                                }
                                if (!GlobalMemberValues.isStrEmpty(tempAdditionalTxt2)) {
                                    /**
                                     tempAdditionalTxt2 += GlobalMemberValues.getSpaceString(GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING) +
                                     "[General Modifier]\n" + GlobalMemberValues.getModifierTxt2(tempItemQty, tempAdditionalTxt2, GlobalMemberValues.MODIFIERSPACESUONLAYOUTPRINTING);

                                     TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                     optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                     optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                     optionmodifierTv.setText(tempAdditionalTxt2);
                                     optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                                     GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                     printingLn.addView(optionmodifierTv);
                                     **/

                                    GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempAdditionalTxt1, temptemp_additionalprice2, false, false);
                                }

                                /**
                                 TextView optionmodifierTv = new TextView(MainActivity.mContext);
                                 optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                                 optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                                 optionmodifierTv.setText("\n   ");
                                 optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                                 GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                                 printingLn.addView(optionmodifierTv);
                                 **/


                            }
                        }
                        // --------------------------------------------------------------------------------------------------------------------------------
                        // special request memo
                        if (!GlobalMemberValues.isStrEmpty(tempKitchenMemo) && !tempKitchenMemo.equals("nokitchenmemo")) {
                            String str_tempKitchenMemo = "--- Special Request ---\n" + "\t" + tempKitchenMemo;
                            for (int z = 25; z <= GlobalMemberValues.getSizeToString(str_tempKitchenMemo) ; z += 24){
                                tempHeight += 28;
                            }

                            if (tempHeight/35 < GlobalMemberValues.countChar(str_tempKitchenMemo, '\n')){
                                tempHeight = 40 * GlobalMemberValues.countChar(str_tempKitchenMemo, '\n');
                            }

                            TextView contentsTv = new TextView(MainActivity.mContext);
                            contentsTv.setText(str_tempKitchenMemo);
                            contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                            GlobalMemberValues.setTextStyleOnClover(contentsTv);
                            contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight + 28));
                            printingLn.addView(contentsTv);


//                            TextView tempKitchenMemoTv = new TextView(MainActivity.mContext);
//                            tempKitchenMemoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
//                            tempKitchenMemoTv.setGravity(Gravity.LEFT|Gravity.TOP);
//                            tempKitchenMemoTv.setText("--- Special Request ---\n" + "\t" + tempKitchenMemo);
//                            tempKitchenMemoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
//                            GlobalMemberValues.setTextStyleOnClover(tempKitchenMemoTv);

//                            printingLn.addView(tempKitchenMemoTv);


//                            GlobalMemberValues.addModifierValueInLn(printingLn, tempItemQty, tempAdditionalTxt1, temptemp_additionalprice2, false);
                        }

                        // discount / extra
                        if (!selectedDcExtraAllEach.isEmpty()){
                            if (selectedDcExtraAllEach.equals("ALL")){
                                String str_all_aheadtxt = "";
                                if (selectedDcExtraType.equals("DC")){
                                    // all dc
                                    str_all_aheadtxt = "ALL Discount "+ dcextravalue + dcextratype;
                                    str_discountYN = "All D/C Total";
                                } else {
                                    // add ex
                                    str_all_aheadtxt = "ALL Extra "+ dcextravalue + dcextratype;
                                    str_discountYN = "Extra Total";
                                }
                                if (strOrderItemsList.length - 1 == i){

                                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));

                                    TextView contentsTv = new TextView(MainActivity.mContext);
                                    contentsTv.setText(" > " + str_all_aheadtxt);
                                    contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                                    GlobalMemberValues.setTextStyleOnClover(contentsTv);
                                    contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight));
                                    printingLn.addView(contentsTv);
                                }

                            } else if (selectedDcExtraAllEach.equals("EACH")){
                                String str_each_aheadtxt = "";
                                if (selectedDcExtraType.equals("DC")){
                                    // each dc
                                    str_each_aheadtxt = "Each Discount " + dcextravalue + dcextratype;
                                    str_discountYN = "Each D/C Total";
                                } else {
                                    // each ex
                                    str_each_aheadtxt = "Each Extra " + dcextravalue + dcextratype;
                                    str_discountYN = "Extra Total";
                                }

                                TextView contentsTv = new TextView(MainActivity.mContext);
                                contentsTv.setText(" > " + str_each_aheadtxt);
                                contentsTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                                GlobalMemberValues.setTextStyleOnClover(contentsTv);
                                contentsTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, tempHeight));
                                printingLn.addView(contentsTv);
                            }

                            d_discountAmount = d_discountAmount + GlobalMemberValues.getDoubleAtString(selectedDcExtraPrice);
                            str_discountextra_total = GlobalMemberValues.getStringFormatNumber(d_discountAmount, "2");
                        }

                        // discount / extra
                    }
                    itemPrint.deleteItemPrintingList(printCode);
                }
                /**********************************************************************************************************************************/

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                if (str_deliverytakeaway.equals("D")) {
                    // 기본 배송비가 얼마인지 구한다.
                    double store_deliverycharge = GlobalMemberValues.getDoubleAtString(
                            MainActivity.mDbInit.dbExecuteReadReturnString("select deliverycharge from salon_storegeneral")
                    );

                    // 배송비 무료 기준금액
                    double store_deliveryfreemoney = GlobalMemberValues.getDoubleAtString(
                            MainActivity.mDbInit.dbExecuteReadReturnString("select deliveryfree from salon_storegeneral")
                    );

                    if (totalAmount > 0) {
                        if (totalAmount < store_deliveryfreemoney) {
                            pickupDeliveryFee = store_deliverycharge;
                        }
                    }
                } else {
                    if (str_deliverytakeaway.equals("T")) {
                        // Pickup (Togo) 포장 비용이 있을 경우
                        double store_pickupcharge = GlobalMemberValues.getDoubleAtString(
                                MainActivity.mDbInit.dbExecuteReadReturnString("select pickupcharge from salon_storegeneral")
                        );
                        pickupDeliveryFee = store_pickupcharge;
                    }
                }

                totalAmount += pickupDeliveryFee;


                // 230421
                str_split_idx = GlobalMemberValues.getDataInJsonData(data, "split_idx");
//                String noneT_tableIDX = str_restaurant_tableidx.replace("T", "");
//                String tempHoldCode = TableSaleMain.getHoldCodeByTableidx(noneT_tableIDX, TableSaleMain.mSubTableNum);
//                int getBillCnt = GlobalMemberValues.getIntAtString(MssqlDatabase.getResultSetValueToString(
//                        " select count(*) from bill_list where holdcode = '" + tempHoldCode + "' "
//                ));

                subTotal = GlobalMemberValues.getDoubleAtString(MssqlDatabase.getResultSetValueToString(" select subtotalamt from bill_list where holdcode = '" + tempHoldCode + "' and idx = '" + str_split_idx + "'"));
                subTax = GlobalMemberValues.getDoubleAtString(MssqlDatabase.getResultSetValueToString(" select taxamt from bill_list where holdcode = '" + tempHoldCode + "' and idx = '" + str_split_idx + "'"));
                str_commongratuity = MssqlDatabase.getResultSetValueToString(" select gratuityamt from bill_list where holdcode = '" + tempHoldCode + "' and idx = '" + str_split_idx + "'");
                str_discountextra_total = GlobalMemberValues.getCommaStringForDouble(MssqlDatabase.getResultSetValueToString(" select dcextraAmt from bill_list where holdcode = '" + tempHoldCode + "' and idx = '" + str_split_idx + "'"));



                // Sub Total ----------------------------------------------------------------------------------------------------------------------
                 LinearLayout subtotalLn = new LinearLayout(MainActivity.mContext);
                subtotalLn.setLayoutParams(matchParentParams);
                subtotalLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView customerNameLeftTv = new TextView(MainActivity.mContext);
                customerNameLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                customerNameLeftTv.setText("Sub Total");
                customerNameLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(customerNameLeftTv);
                customerNameLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                subtotalLn.addView(customerNameLeftTv);

                TextView customerNameRightTv = new TextView(MainActivity.mContext);
                customerNameRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                customerNameRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(subTotal + ""));
                customerNameRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(customerNameRightTv);
                customerNameRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                subtotalLn.addView(customerNameRightTv);

                printingLn.addView(subtotalLn);
                // ---------------------------------------------------------------------------------------------------------------------------------
                // Tax -------------------------------------------------------------------------------------------------------------------------------------
                LinearLayout taxLn = new LinearLayout(MainActivity.mContext);
                taxLn.setLayoutParams(matchParentParams);
                taxLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView dcextratotalTv = new TextView(MainActivity.mContext);
                dcextratotalTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                dcextratotalTv.setText("Tax");
                dcextratotalTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(dcextratotalTv);
                dcextratotalTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                taxLn.addView(dcextratotalTv);

                TextView dcextratotalLeftTv = new TextView(MainActivity.mContext);
                dcextratotalLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                dcextratotalLeftTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(subTax + ""));
                dcextratotalLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(dcextratotalLeftTv);
                dcextratotalLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                taxLn.addView(dcextratotalLeftTv);

                printingLn.addView(taxLn);
                // ---------------------------------------------------------------------------------------------------------------------------------
                // Common Gratuity -----------------------------------------------------------------------------------------------------------------------
                if (GlobalMemberValues.getDoubleAtString(str_commongratuity) != 0) {
                    LinearLayout commongratuityLn = new LinearLayout(MainActivity.mContext);
                    commongratuityLn.setLayoutParams(matchParentParams);
                    commongratuityLn.setOrientation(LinearLayout.HORIZONTAL);

                    // 04242023 --------------------------------------------------------------------------
                    String tempCGtype = MainActivity.mDbInit.dbExecuteReadReturnString(
                            " select gratuitytype from salon_storegeneral "
                    );
                    if (GlobalMemberValues.isStrEmpty(tempCGtype)) {
                        tempCGtype = "%";
                    }

                    double tempGratuityvalue = GlobalMemberValues.getDoubleAtString(MainActivity.mDbInit.dbExecuteReadReturnString(
                            " select gratuityvalue from salon_storegeneral "
                    ));

                    String tempCGName = "";
                    if (tempCGtype == "%" || tempCGtype.equals("%")) {
                        tempCGName = tempGratuityvalue + tempCGtype;
                    } else {
                        tempCGName = tempCGtype + tempGratuityvalue;
                    }

                    String commonGratuityStr = "Gratuity " + tempCGName;
                    // 04242023 --------------------------------------------------------------------------

                    TextView commongratuityTv = new TextView(MainActivity.mContext);
                    commongratuityTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);

                    // 04242023
                    commongratuityTv.setText(commonGratuityStr);


                    commongratuityTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(commongratuityTv);
                    commongratuityTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    commongratuityLn.addView(commongratuityTv);


                    TextView commongratuityRightTv = new TextView(MainActivity.mContext);
                    commongratuityRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    commongratuityRightTv.setText(finalTempDollarStr + GlobalMemberValues.setDoubleToString(GlobalMemberValues.getDoubleAtString(str_commongratuity),2));
                    commongratuityRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(commongratuityRightTv);
                    commongratuityRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    commongratuityLn.addView(commongratuityRightTv);

                    printingLn.addView(commongratuityLn);
                }
                // ---------------------------------------------------------------------------------------------------------------------------------

                // ---------------------------------------------------------------------------------------------------------------------------------
                // discount / extra
                if (!str_discountextra_total.equals("") && GlobalMemberValues.getDoubleAtString(str_discountextra_total) != 0){
                    //
                    if (str_discountYN.isEmpty()){
                        str_discountYN = "D/C";
                    }

                    LinearLayout discountLn = new LinearLayout(MainActivity.mContext);
                    discountLn.setLayoutParams(matchParentParams);
                    discountLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView dcextratotalTv2 = new TextView(MainActivity.mContext);
                    dcextratotalTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    dcextratotalTv2.setText(str_discountYN);
                    dcextratotalTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(dcextratotalTv2);
                    dcextratotalTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    discountLn.addView(dcextratotalTv2);

                    if (str_discountYN.contains("D/C")){
                        str_discountextra_total = "-" + str_discountextra_total;
                    }

                    TextView dcextratotalLeftTv2 = new TextView(MainActivity.mContext);
                    dcextratotalLeftTv2.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    dcextratotalLeftTv2.setText(finalTempDollarStr + str_discountextra_total);
                    dcextratotalLeftTv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(dcextratotalLeftTv2);
                    dcextratotalLeftTv2.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    discountLn.addView(dcextratotalLeftTv2);

                    printingLn.addView(discountLn);
                }
                // ---------------------------------------------------------------------------------------------------------------------------------
                if (pickupDeliveryFee > 0) {
                    if (str_deliverytakeaway.equals("D")) {
                        main_Text +=  "Delivery Fee        ";
                    } else {
                        main_Text +=  "To Go Fee         ";
                    }

                    LinearLayout deliverytogofeeLn = new LinearLayout(MainActivity.mContext);
                    deliverytogofeeLn.setLayoutParams(matchParentParams);
                    deliverytogofeeLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView deliveryToGoFeeLeftTv = new TextView(MainActivity.mContext);
                    deliveryToGoFeeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    deliveryToGoFeeLeftTv.setText(main_Text);
                    deliveryToGoFeeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(deliveryToGoFeeLeftTv);
                    deliveryToGoFeeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    deliverytogofeeLn.addView(deliveryToGoFeeLeftTv);

                    TextView deliveryToGoFeeRightTv = new TextView(MainActivity.mContext);
                    deliveryToGoFeeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                    deliveryToGoFeeRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(pickupDeliveryFee + ""));
                    deliveryToGoFeeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(deliveryToGoFeeRightTv);
                    deliveryToGoFeeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                    deliverytogofeeLn.addView(deliveryToGoFeeRightTv);

                    printingLn.addView(deliverytogofeeLn);
                }


                // pay amount 구하기.
                double temp_payAmount = 0.00;
                if (!GlobalMemberValues.getDataInJsonData(data, "allitem_totalamount").equals("")) {
                    temp_payAmount = new BigDecimal(totalAmount).setScale(2, RoundingMode.HALF_EVEN).doubleValue();
//                    totalAmount = GlobalMemberValues.getDoubleAtString(GlobalMemberValues.getDataInJsonData(data, "allitem_totalamount"));
                }
                totalAmount = GlobalMemberValues.getDoubleAtString(MssqlDatabase.getResultSetValueToString(" select totalamountAmt from bill_list where holdcode = '" + tempHoldCode + "' and idx = '" + str_split_idx + "'"));

                // Total Amount --------------------------------------------------------------------------------------------------------------------
                LinearLayout totalAmountLn = new LinearLayout(MainActivity.mContext);
                totalAmountLn.setLayoutParams(matchParentParams);
                totalAmountLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView totalAmountLeftTv = new TextView(MainActivity.mContext);
                totalAmountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                totalAmountLeftTv.setText("Total Amount");
                totalAmountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(totalAmountLeftTv);
                totalAmountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                totalAmountLn.addView(totalAmountLeftTv);

                TextView totalAmountRightTv = new TextView(MainActivity.mContext);
                totalAmountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                totalAmountRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(totalAmount + ""));
                totalAmountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(totalAmountRightTv);
                totalAmountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                totalAmountLn.addView(totalAmountRightTv);

                printingLn.addView(totalAmountLn);
                // ---------------------------------------------------------------------------------------------------------------------------------

                // 점선 ----------------------------------------------------------------------------------------------------------------------------
                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                // ---------------------------------------------------------------------------------------------------------------------------------

                // Pay Amount --------------------------------------------------------------------------------------------------------------------
                // 230426 pay amount 제거
//                if (temp_payAmount != 0.00) {
//
//                    double payAmount = GlobalMemberValues.getDoubleAtString(GlobalMemberValues.getDataInJsonData(data, "split_price"));
//                    if (temp_payAmount == totalAmount){
//                        if (payAmount != 0.00) {
//                            temp_payAmount = payAmount;
//                        }
//                    }
//
//                    LinearLayout payAmountLn = new LinearLayout(MainActivity.mContext);
//                    payAmountLn.setLayoutParams(matchParentParams);
//                    payAmountLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                    TextView payAmountLeftTv = new TextView(MainActivity.mContext);
//                    payAmountLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                    payAmountLeftTv.setText("Pay Amount");
//                    payAmountLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
//                    GlobalMemberValues.setTextStyleOnClover(payAmountLeftTv);
//                    payAmountLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                    payAmountLn.addView(payAmountLeftTv);
//
//                    // 12282022
//                    temp_payAmount = GlobalMemberValues.getDoubleAtString(GlobalMemberValues.getDataInJsonData(data, "bill_list_billamount"));
//
//                    TextView payAmountRightTv = new TextView(MainActivity.mContext);
//                    payAmountRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
//                    payAmountRightTv.setText(finalTempDollarStr + GlobalMemberValues.getCommaStringForDouble(temp_payAmount + ""));
//                    payAmountRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
//                    GlobalMemberValues.setTextStyleOnClover(payAmountRightTv);
//                    payAmountRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
//                    payAmountLn.addView(payAmountRightTv);
//
//                    printingLn.addView(payAmountLn);
//                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
//                }



                // qr code -----------------------------------------------------------------------------------------
//if (globalMemberValues.getPOSType().equals("R") && globalMemberValues.isPOSWebPay() && temp_payAmount == 0.00) {
                if (globalMemberValues.getPOSType().equals("R") && globalMemberValues.isPOSWebPay()){
                    LinearLayout tablepayLn = new LinearLayout(MainActivity.mContext);
                    tablepayLn.setLayoutParams(matchParentParams);
                    tablepayLn.setOrientation(LinearLayout.HORIZONTAL);

                    TextView tablepayTv = new TextView(MainActivity.mContext);
                    tablepayTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                    tablepayTv.setText("Scan the QR code below to pay at the table");
                    tablepayTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, (GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW - 5));
                    GlobalMemberValues.setTextStyleOnClover(tablepayTv);
                    tablepayTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    tablepayLn.addView(tablepayTv);

                    printingLn.addView(tablepayLn);


                    String tempAppHost = "m";
                    if (GlobalMemberValues.CLOUD_HOST.indexOf("csecu") != -1) {
                        tempAppHost = "app";
                    }
                    String tempAppStr = GlobalMemberValues.CLOUD_SERVER_URL_BASIC;
                    String qrcodeStr = GlobalMemberValues.getReplaceText(tempAppStr, GlobalMemberValues.CLOUD_HOST, tempAppHost);
                    qrcodeStr += "index_sitedoor.asp?n=" + GlobalMemberValues.STORE_INDEX +
                            "-J-" + str_restaurant_tablename +
                            "-J-" + GlobalMemberValues.getReplaceText(str_restaurant_tableidx, "T", "") +
                            "-J-" + "Y" +
                            "-J-" + GlobalMemberValues.STATION_CODE +
                            "-J-" + str_restaurant_tableholdcode +
                            "-J-" + GlobalMemberValues.SALON_NAME +
                            "-J-" + str_restaurant_tablename +
                            "-J-" + "$" + GlobalMemberValues.getCommaStringForDouble(totalAmount + "");

                    GlobalMemberValues.logWrite("qrcodejjjlog", "qrcode txt : " + qrcodeStr + "\n");

                    ImageView qrImage = new ImageView(MainActivity.mContext);
                    qrImage.setImageBitmap(GlobalMemberValues.generateRQCode(qrcodeStr));
                    printingLn.addView(qrImage);
                }
                // ------------------------------------------------------------------------------------------------

                // receipt footer 프린터 --------------------------------------------------------------------------
                if (!GlobalMemberValues.isStrEmpty(str_receiptfooter)) {
                    TextView footerTv = new TextView(MainActivity.mContext);
                    footerTv.setLayoutParams(matchParentParams);
                    footerTv.setGravity(Gravity.CENTER);
                    footerTv.setText(str_receiptfooter);
                    footerTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                    GlobalMemberValues.setTextStyleOnClover(footerTv);
                    printingLn.addView(footerTv);

                    // 점선 ----------------------------------------------------------------------------------------------------------------------------
                    printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
                    // ---------------------------------------------------------------------------------------------------------------------------------
                }
                // ------------------------------------------------------------------------------------------------

                TextView footerTv = new TextView(MainActivity.mContext);
                footerTv.setLayoutParams(matchParentParams);
                footerTv.setGravity(Gravity.CENTER);
                footerTv.setText("Printed Time " + getDate() + " " + getTime());
                footerTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_TABLESALEVIEW);
                GlobalMemberValues.setTextStyleOnClover(footerTv);
                printingLn.addView(footerTv);
            }
        };
        thread.start();
        try {
            thread.join();
        } catch(InterruptedException e) {}

        return printingLn;
    }

    public static LinearLayout makingLabelLinearLayout(final JSONObject data, final String printername) {
        if (data == null) {
            return  null;
        }



//        // 05152023
//        // 라벨프린팅 됐는지 여부 및 프린팅 된 데이터 저장
//        if (!GlobalMemberValues.isLabelReprint) {
//            if (!GlobalMemberValues.isPossibleLabelPrintingByJson(data)) {
//                return  null;
//            } else {
//                if (!GlobalMemberValues.getResultSaveLabelPrintingData(data)) {
//                    return null;
//                }
//            }
//        }



        GlobalMemberValues.logWrite("cloverprintinglog", "받은 데이터 : " + data.toString() + "\n");

        SharedPreferences pref = MainActivity.mContext.getSharedPreferences("labelprinter_info", MODE_PRIVATE);
        String temp_pager_number = pref.getString("labelprinter_info_pager_number", "Y");
        String temp_info_name = pref.getString("labelprinter_info_name", "3");
        String temp_modifier = pref.getString("labelprinter_info_modifier", "Y");
        String temp_item_name = pref.getString("labelprinter_info_item_name", "Y");
        String temp_order_type = pref.getString("labelprinter_info_order_type", "Y");
        int px = 350;//(int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, MainActivity.mContext.getResources().getDisplayMetrics());
        int fontSizePlus = 0;
//        String temp_order_printer_name = pref.getString("labelprinter_info_printer_name", "");
        if (printername.contains("58")){
            px = 530;
            fontSizePlus = 10;
        } else {
            px = 337;
        }

        final LinearLayout.LayoutParams matchParentParams
                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 34 + fontSizePlus);
        matchParentParams.setMargins(0, 0, 0, 0);

        final LinearLayout.LayoutParams matchParentParams_blink
                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 10);
        matchParentParams_blink.setMargins(0, 0, 0, 0);

        final LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
        printingLn.setLayoutParams(new LinearLayout.LayoutParams(px, LinearLayout.LayoutParams.MATCH_PARENT));

        printingLn.setOrientation(LinearLayout.VERTICAL);
        printingLn.setBackgroundColor(Color.parseColor("#ffffff"));

        final double[] mTotalTipAmount = {0};
        final ArrayList<String> tempArrListStrFile = new ArrayList<String>();
        int finalFontSizePlus = fontSizePlus;
        Thread thread2 = new Thread() {
            @SuppressLint("LongLogTag")
            @Override
            public void run(){
                String main_Text = "";

                String merchantcustomerText = "";

                String str_saledate = "";
                String str_receiptno = "";
                String str_change = "";
                String str_cashtendered = "";
                String str_employeename = "";
                JSONArray jsonArray_saleitemlist = new JSONArray();
                String str_itemqty = "";
                String str_itemname = "";
                String str_itemsvcidx = "";
                String str_itemamount = "";
                String str_itemprice = "";
                String str_itemdcextrastr = "";
                String str_itemtaxexempt = "";
                String str_subtotal = "";
                JSONArray jsonArray_creditcardtransaction = new JSONArray();
                String str_cardsalonsalescardidx = "";
                String str_cardchangeamount = "";
                String str_cardtype = "";
                String str_cardaid = "";
                String str_cardtvr = "";
                String str_cardtsi = "";
                String str_creditcardnumber = "";
                String str_cardrefnumber = "";
                String str_cardauthnumber = "";
                String str_storeaddress2 = "";
                String str_storeaddress1 = "";
                String str_giftcardtendered = "";
                String str_tax = "";
                String str_creditcardtendered = "";
                String str_checktendered = "";
                String str_pointtendered = "";
                String str_storestate = "";
                String str_storename = "";
                String str_storecity = "";
                String str_storezip = "";
                String str_saletime = "";
                String str_storephone = "";
                String str_totalamount = "";

                String str_customername = "";
                String str_customerphonenum = "";
                String str_customeraddress = "";
                String str_customermemo = "";

                String str_customerid = "";
                String str_customer_point_remaining = "";

                String str_alldiscountextrstr = "";
                String str_totalextradiscountprice="";

                String str_receiptprinttype = "";

                String str_cardsalesignatureimageyn = "N";

                String str_signatureTxt = "";

                String str_reprintyn = "N";

                String str_tipamount = "";

                String str_cardtipamount = "0";

                String str_optiontxt = "";
                String str_optionprice = "0.0";
                String str_additionaltxt1 = "";
                String str_additionalprice1 = "0.0";
                String str_additionaltxt2 = "";
                String str_additionalprice2 = "0.0";
                String str_kitchenmemo = "";
                String str_soldoutmemo = "";

                String str_deliverytakeaway = "";
                String str_deliverypickupfee = "";

                String str_receiptfooter = "";

                String str_customerOrderNumber = "";
                String str_customerPagerNumber = "";

                String str_returntipamount = "";
                String str_returnpickupdeliveryfee = "";

                String str_each_discount_extra_price = "";

                // Restaurant 관련
                String str_restaurant_tablename = "";
                String str_restaurant_tablepeoplecnt = "";

                double d_each_discount_total_price = 0;
                double d_each_extra_total_price = 0;

                // cardholder
                String str_cardholder = "";

                // tipcash
                String str_tipcash = "";
                // tipcard
                String str_tipcard = "";

                String str_service_fee = "";

                String str_earned_point = "";

                String str_itemCategoryName = "";
                String str_itemCategoryName2 = "";
                String str_itemCategoryName_temp = "";
                // delivery address
                String str_deliveryaddress = "";

                // billpayamount
                double d_billpayamount = 0.00;
                double d_billtotalamount = 0.00;

                String str_billcartidx = "";
                String str_billtype = "";

                String str_cancelreason = "";

                String str_togo_delivery = "";

                String str_ordertype_alignment_yn = "";

                String str_phoneordernumber = "";

                String str_item_total_num_forLabel = "";
                String str_item_num_forLabel = "";

                String str_deliveryDate = "";
                String str_additemYN = "";

                try {
                    str_saledate = GlobalMemberValues.getDataInJsonData(data, "saledate");
                    str_receiptno = GlobalMemberValues.getDataInJsonData(data, "receiptno");
                    str_cashtendered = GlobalMemberValues.getDataInJsonData(data, "cashtendered");
                    str_employeename = GlobalMemberValues.getDataInJsonData(data, "employeename");
                    str_subtotal = GlobalMemberValues.getDataInJsonData(data, "subtotal");
                    str_storeaddress2 = GlobalMemberValues.getDataInJsonData(data, "storeaddress2");
                    str_storeaddress1 = GlobalMemberValues.getDataInJsonData(data, "storeaddress1");
                    str_giftcardtendered = GlobalMemberValues.getDataInJsonData(data, "giftcardtendered");
                    str_tax = GlobalMemberValues.getDataInJsonData(data, "tax");
                    str_creditcardtendered = GlobalMemberValues.getDataInJsonData(data, "creditcardtendered");
                    str_checktendered = GlobalMemberValues.getDataInJsonData(data, "checktendered");
                    str_pointtendered = GlobalMemberValues.getDataInJsonData(data, "pointtendered");
                    str_storestate = GlobalMemberValues.getDataInJsonData(data, "storestate");
                    str_storename  = GlobalMemberValues.getDataInJsonData(data, "storename");
                    str_storecity = GlobalMemberValues.getDataInJsonData(data, "storecity");
                    str_storezip = GlobalMemberValues.getDataInJsonData(data, "storezip");
                    str_saletime = GlobalMemberValues.getDataInJsonData(data, "saletime");
                    str_storephone = GlobalMemberValues.getDataInJsonData(data, "storephone");
                    str_totalamount = GlobalMemberValues.getDataInJsonData(data, "totalamount");
                    str_customername = GlobalMemberValues.getDataInJsonData(data, "customername");

                    str_customerid = GlobalMemberValues.getDataInJsonData(data,"customerid");
                    str_customer_point_remaining = GlobalMemberValues.getDataInJsonData(data,"customer_point_remaining");

                    str_receiptprinttype = GlobalMemberValues.getDataInJsonData(data, "receiptprinttype");

                    str_change = GlobalMemberValues.getDataInJsonData(data, "change");
                    str_alldiscountextrstr = GlobalMemberValues.getDataInJsonData(data, "alldiscountextrstr");
                    str_totalextradiscountprice = GlobalMemberValues.getDataInJsonData(data, "totalextradiscountprice");

                    str_deliverypickupfee = GlobalMemberValues.getDataInJsonData(data, "deliverypickupfee");
                    str_receiptfooter = GlobalMemberValues.getDataInJsonData(data, "receiptfooter");
                    str_customerOrderNumber = GlobalMemberValues.getDataInJsonData(data, "customerordernumber");
                    str_customerPagerNumber = GlobalMemberValues.getDataInJsonData(data, "customerpagernumber");
                    str_tipamount = GlobalMemberValues.getDataInJsonData(data, "tipamount");
                    str_customerphonenum = GlobalMemberValues.getDataInJsonData(data, "customerphonenum");
                    str_customeraddress = GlobalMemberValues.getDataInJsonData(data, "customeraddress");

                    // jihun customer memo
                    str_customermemo = GlobalMemberValues.getDataInJsonData(data,"customermemo");

                    str_returntipamount = GlobalMemberValues.getDataInJsonData(data, "returntipamount");
                    str_returnpickupdeliveryfee = GlobalMemberValues.getDataInJsonData(data, "returnpickupdeliveryfee");

                    // Restaurant 관련
                    str_restaurant_tablename = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablename");
                    str_restaurant_tablepeoplecnt = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablepeoplecnt");

                    if (!GlobalMemberValues.getDataInJsonData(data, "tablename").isEmpty()) {
                        str_restaurant_tablename = GlobalMemberValues.getDataInJsonData(data, "tablename");
                    }
                    if (!GlobalMemberValues.getDataInJsonData(data, "tableidx").isEmpty()){
                        str_restaurant_tablepeoplecnt = GlobalMemberValues.getDataInJsonData(data, "tableidx");
                    }

                    if (data.toString().contains("reprintyn")) {
                        str_reprintyn = GlobalMemberValues.getDataInJsonData(data, "reprintyn");
                    } else {
                        str_reprintyn = "N";
                    }

                    if (data.toString().contains("deliverytakeaway")) {
                        str_deliverytakeaway = GlobalMemberValues.getDataInJsonData(data, "deliverytakeaway");
                    } else {
                        str_deliverytakeaway = "T";
                    }

                    if (data.getJSONArray("saleitemlist") != null) {
                        jsonArray_saleitemlist = data.getJSONArray("saleitemlist");
                    }

                    if (data.toString().contains("creditcardtransaction")) {
                        jsonArray_creditcardtransaction = data.getJSONArray("creditcardtransaction");
                    }

                    // tip cash tip card
                    if (data.toString().contains("tipcash")){
                        str_tipcash = GlobalMemberValues.getDataInJsonData(data, "tipcash");
                    }

                    if (data.toString().contains("tipcard")){
                        str_tipcard = GlobalMemberValues.getDataInJsonData(data, "tipcard");
                    }

                    // service fee
                    if (data.toString().contains("servicefee")){
                        str_service_fee = GlobalMemberValues.getDataInJsonData(data, "servicefee");
                    }
                    // earned point
                    if (data.toString().contains("earnedpoint")){
                        str_earned_point = GlobalMemberValues.getDataInJsonData(data,"earnedpoint");
                    }
                    // delivery address
                    if (data.toString().contains("deliveryaddress")){
                        str_deliveryaddress = GlobalMemberValues.getDataInJsonData(data,"deliveryaddress");
                    }
                    if (data.toString().contains("item_num_forLabel")){
                        str_item_num_forLabel = GlobalMemberValues.getDataInJsonData(data,"item_num_forLabel");
                    }
                    if (data.toString().contains("item_total_num_forLabel")){
                        str_item_total_num_forLabel = GlobalMemberValues.getDataInJsonData(data,"item_total_num_forLabel");
                    }

                    if (data.toString().contains("deliverydate")) {
                        str_deliveryDate = GlobalMemberValues.getDataInJsonData(data,"deliverydate");
                    }

                    if (data.toString().contains("phoneordernumber")) {
                        str_phoneordernumber = GlobalMemberValues.getDataInJsonData(data,"phoneordernumber");
                    }


                    d_billpayamount = data.optDouble("billpayamount", 0.00);
                    d_billtotalamount = data.optDouble("billtotalamount", 0.00);

                    str_billcartidx = data.optString("billcartidx", "");
                    str_billtype = data.optString("billtype","");

                    str_cancelreason = data.optString("cancelreason", "");

                } catch (JSONException e){
                    Log.e("PaymentPrint get str err!!!", e.toString());
                    GlobalMemberValues.logWrite("clovermakinglnerrorlog", "에러내용 : " + e.toString() + "\n");
                }

                if (GlobalMemberValues.isStrEmpty(str_customerOrderNumber)) {
                    str_customerOrderNumber = MainActivity.mDbInit.dbExecuteReadReturnString(
                            " select customerordernumber from salon_sales where salesCode = '" + str_receiptno + "' ");
                }
                if (GlobalMemberValues.isStrEmpty(str_customerOrderNumber)) {
                    str_customerOrderNumber = MssqlDatabase.getResultSetValueToString(
                            " select customerordernumber from salon_sales where salesCode = '" + str_receiptno + "' ");
                }



                if (str_deliveryDate != "" && !str_deliveryDate.equals(" :00")){
                    TextView tv_deliveryDate_title = new TextView(MainActivity.mContext);
                    tv_deliveryDate_title.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    tv_deliveryDate_title.setGravity(Gravity.CENTER);
                    tv_deliveryDate_title.setText("*** Pickup Time ***");
                    tv_deliveryDate_title.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    tv_deliveryDate_title.setPaintFlags(tv_deliveryDate_title.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    GlobalMemberValues.setTextStyleOnClover(tv_deliveryDate_title);
                    printingLn.addView(tv_deliveryDate_title);

                    TextView tv_deliveryDate = new TextView(MainActivity.mContext);
                    tv_deliveryDate.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                    tv_deliveryDate.setGravity(Gravity.CENTER);
                    tv_deliveryDate.setText(str_deliveryDate);
                    tv_deliveryDate.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10);
                    tv_deliveryDate.setPaintFlags(tv_deliveryDate.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    GlobalMemberValues.setTextStyleOnClover(tv_deliveryDate);
                    printingLn.addView(tv_deliveryDate);
                }

                String tempDeliveryTakeaway = "HERE";
                if (!GlobalMemberValues.isStrEmpty(str_deliverytakeaway)) {
                    switch (str_deliverytakeaway) {
                        case "H" : {
                            tempDeliveryTakeaway = "HERE";
                            break;
                        }
                        case "T" : {
                            tempDeliveryTakeaway = "TO GO";
                            break;
                        }
                        case "D" : {
                            tempDeliveryTakeaway = "DELIVERY";
                            break;
                        }
                    }
                }


                LinearLayout receivingLn = new LinearLayout(MainActivity.mContext);
                receivingLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 80));
                receivingLn.setOrientation(LinearLayout.HORIZONTAL);

                /**
                 if (GlobalMemberValues.getKitchenPrinterTextSize().equals("R")) {
                 TextView receivingLeftTv = new TextView(MainActivity.mContext);
                 receivingLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 receivingLeftTv.setText("Receiving");
                 receivingLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10 + tempAddTextSize);
                 GlobalMemberValues.setTextStyleOnClover(receivingLeftTv);
                 receivingLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                 receivingLn.addView(receivingLeftTv);
                 }
                 **/

                if (temp_pager_number.equals("Y")){
                    String pagenoTxt = GlobalMemberValues.getPagerNumberHeaderTxt() + str_customerPagerNumber + "\n";

                    TextView pagerNoTv = new TextView(MainActivity.mContext);
//                    pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 110));
                    pagerNoTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1));
                    pagerNoTv.setGravity(Gravity.CENTER);
                    pagerNoTv.setText(pagenoTxt);
//                    pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 70 + finalFontSizePlus);
                    pagerNoTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 50);
                    pagerNoTv.setPaintFlags(pagerNoTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    GlobalMemberValues.setTextStyleOnClover(pagerNoTv);
                    receivingLn.addView(pagerNoTv);
                }

                TextView receivingRightTv = new TextView(MainActivity.mContext);
                receivingRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                receivingRightTv.setText(tempDeliveryTakeaway);
                //receivingRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 10 + tempAddTextSize);
                receivingRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 50);
                GlobalMemberValues.setTextStyleOnClover(receivingRightTv);
                receivingRightTv.setPaintFlags(receivingRightTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);

                receivingRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                receivingLn.addView(receivingRightTv);

                printingLn.addView(receivingLn);
                // --------------------------------------------------------------------------------------------------------------------

                // Order No. ------------------------------------------------------------------------------------------------------------
                LinearLayout ordernumLn = new LinearLayout(MainActivity.mContext);
                ordernumLn.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50));
                ordernumLn.setOrientation(LinearLayout.HORIZONTAL);

                /**
                 if (GlobalMemberValues.getKitchenPrinterTextSize().equals("R")) {
                 TextView ordernumLeftTv = new TextView(MainActivity.mContext);
                 ordernumLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                 ordernumLeftTv.setText("Order No.");
                 ordernumLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 20 + tempAddTextSize);
                 GlobalMemberValues.setTextStyleOnClover(ordernumLeftTv);
                 ordernumLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                 ordernumLn.addView(ordernumLeftTv);
                 }
                 **/

                if (str_customerOrderNumber.isEmpty()){
                    str_customerOrderNumber = str_phoneordernumber;
                }

                TextView ordernumRightTv = new TextView(MainActivity.mContext);
                ordernumRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL);
                ordernumRightTv.setText("# " + str_customerOrderNumber);
                ordernumRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                GlobalMemberValues.setTextStyleOnClover(ordernumRightTv);
                ordernumRightTv.setPaintFlags(receivingRightTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);

                ordernumRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
                ordernumLn.addView(ordernumRightTv);

                printingLn.addView(ordernumLn);
                // --------------------------------------------------------------------------------------------------------------------
                // ---------------------------------------------------------------------------------------------------------------------------------




                TextView tempSpaceTv3 = new TextView(MainActivity.mContext);
                tempSpaceTv3.setLayoutParams(matchParentParams_blink);
                tempSpaceTv3.setGravity(Gravity.CENTER_HORIZONTAL|Gravity.TOP);
                tempSpaceTv3.setText("  ");
                GlobalMemberValues.setTextStyleOnClover(tempSpaceTv3);
                tempSpaceTv3.setPaintFlags(tempSpaceTv3.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                printingLn.addView(tempSpaceTv3);

                String temp_cust_f_name = "";
                String temp_cust_l_name = "";
                if (!str_customername.isEmpty() && str_customername.replace(" ", "").length() != 0){
                    String[] temp_name = str_customername.split(" ");
                    if (temp_name.length == 1){
                        temp_cust_f_name = temp_name[0];
                    } else if (temp_name.length == 2){
                        temp_cust_f_name = temp_name[0];
                        temp_cust_l_name = temp_name[1];
                    } else {
                        temp_cust_f_name = temp_name[0];
                        for (String temp_temp : temp_name){
                            temp_cust_l_name = temp_cust_l_name + " " +temp_temp;
                        }
                    }

                    switch (temp_info_name){
                        case "1" :
                            temp_cust_l_name = "";
                            break;
                        case "2" :
                            temp_cust_f_name = "";
                            break;
                    }

                    LinearLayout customer_name_ln = new LinearLayout(MainActivity.mContext);
                    customer_name_ln.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 60));
                    customer_name_ln.setOrientation(LinearLayout.HORIZONTAL);

                    TextView customer_name_title = new TextView(MainActivity.mContext);
                    customer_name_title.setGravity(Gravity.CENTER);
                    customer_name_title.setText(temp_cust_f_name + " " + temp_cust_l_name);
                    customer_name_title.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 20 + finalFontSizePlus);
                    GlobalMemberValues.setTextStyleOnClover(customer_name_title);
                    customer_name_title.setPaintFlags(customer_name_title.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    customer_name_title.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    customer_name_ln.addView(customer_name_title);

                    printingLn.addView(customer_name_ln);

                    TextView tempSpaceTv4 = new TextView(MainActivity.mContext);
                    tempSpaceTv4.setLayoutParams(matchParentParams_blink);
                    tempSpaceTv4.setGravity(Gravity.CENTER_HORIZONTAL|Gravity.TOP);
                    tempSpaceTv4.setText("  ");
                    GlobalMemberValues.setTextStyleOnClover(tempSpaceTv4);
                    tempSpaceTv4.setPaintFlags(tempSpaceTv4.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    printingLn.addView(tempSpaceTv4);

                }



                LinearLayout saleitem_ln = new LinearLayout(MainActivity.mContext);
                saleitem_ln.setLayoutParams(matchParentParams);
                saleitem_ln.setOrientation(LinearLayout.HORIZONTAL);

                TextView item_number_title = new TextView(MainActivity.mContext);
                item_number_title.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                item_number_title.setText("Item ");
                item_number_title.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + finalFontSizePlus);
                GlobalMemberValues.setTextStyleOnClover(item_number_title);
                item_number_title.setPaintFlags(item_number_title.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                item_number_title.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 0.7f));
                saleitem_ln.addView(item_number_title);

                TextView item_number_num = new TextView(MainActivity.mContext);
                item_number_num.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                item_number_num.setText(str_item_num_forLabel + " of " + str_item_total_num_forLabel);
                item_number_num.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + finalFontSizePlus);
                GlobalMemberValues.setTextStyleOnClover(item_number_num);
                item_number_num.setPaintFlags(item_number_num.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                item_number_num.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                saleitem_ln.addView(item_number_num);

                String temp_stationName = GlobalMemberValues.STATION_NAME;
                if (str_employeename.equals("Online Order")){
                    temp_stationName = str_employeename;
                }

                TextView stationNameTv = new TextView(MainActivity.mContext);
                stationNameTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
                stationNameTv.setText(temp_stationName);
                stationNameTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + finalFontSizePlus);
                GlobalMemberValues.setTextStyleOnClover(stationNameTv);
                stationNameTv.setPaintFlags(stationNameTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                stationNameTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                saleitem_ln.addView(stationNameTv);


                printingLn.addView(saleitem_ln);




                TextView tempSpaceTv1 = new TextView(MainActivity.mContext);
                tempSpaceTv1.setLayoutParams(matchParentParams_blink);
                tempSpaceTv1.setGravity(Gravity.CENTER_HORIZONTAL|Gravity.TOP);
                tempSpaceTv1.setText("  ");
                GlobalMemberValues.setTextStyleOnClover(tempSpaceTv1);
                tempSpaceTv1.setPaintFlags(tempSpaceTv1.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                printingLn.addView(tempSpaceTv1);


                // Receipt NO. --------------------------------------------------------------------------------------------------------------------
                // LinearLayout
//                LinearLayout receiptnoLn = new LinearLayout(MainActivity.mContext);
//                receiptnoLn.setLayoutParams(matchParentParams);
//                receiptnoLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                TextView receiptNoLeftTv = new TextView(MainActivity.mContext);
//                receiptNoLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                receiptNoLeftTv.setText("Receipt No.");
//                receiptNoLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                GlobalMemberValues.setTextStyleOnClover(receiptNoLeftTv);
//                receiptNoLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                receiptnoLn.addView(receiptNoLeftTv);
//
//                TextView receiptNoRightTv = new TextView(MainActivity.mContext);
//                receiptNoRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                receiptNoRightTv.setText(" : " + str_receiptno);
//                receiptNoRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, (GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER - 4));
//                GlobalMemberValues.setTextStyleOnClover(receiptNoRightTv);
//                receiptNoRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
//                receiptnoLn.addView(receiptNoRightTv);
//
//                printingLn.addView(receiptnoLn);
                // --------------------------------------------------------------------------------------------------------------------------------



                if (jsonArray_saleitemlist.length() != 0) {
                    int cnt = jsonArray_saleitemlist.length();
                    String str_item_cart_idx = "";
                    for (int i = 0; i < cnt; i++) {
                        try {
                            JSONObject dic_item = jsonArray_saleitemlist.getJSONObject(i);
                            str_itemqty = dic_item.getString("itemqty");
                            str_itemname = dic_item.getString("itemname");

                            if (dic_item.toString().contains("optiontxt")) {
                                str_optiontxt = dic_item.getString("optiontxt");
                            }

                            if (dic_item.toString().contains("additionaltxt1")) {
                                str_additionaltxt1 = dic_item.getString("additionaltxt1");
                            }

                            if (dic_item.toString().contains("additionaltxt2")) {
                                str_additionaltxt2 = dic_item.getString("additionaltxt2");
                            }

                            if (dic_item.toString().contains("kitchenmemo")) {
                                str_kitchenmemo = dic_item.getString("kitchenmemo");
                            }
                            if (dic_item.toString().contains("soldoutmemo")) {
                                str_soldoutmemo = dic_item.getString("soldoutmemo");
                            }

                            if (dic_item.toString().contains("itemCategoryName")) {
                                str_itemCategoryName = dic_item.getString("itemCategoryName");
                            }
                            if (dic_item.toString().contains("itemCategoryName2")) {
                                str_itemCategoryName2 = dic_item.getString("itemCategoryName2");
                            }
                            if (dic_item.toString().contains("togodelitype")){
                                str_togo_delivery = dic_item.getString("togodelitype");
                            }
                            if (dic_item.toString().contains("itemcartidx")){
                                str_item_cart_idx = dic_item.getString("itemcartidx");
                            }
                            if (dic_item.toString().contains("itemsvcidx")){
                                str_itemsvcidx = dic_item.getString("itemsvcidx");
                            }
                            if (dic_item.toString().contains("additem")){
                                str_additemYN = dic_item.getString("additem");
                            }

                        } catch (JSONException e) {
                            e.printStackTrace();
                        }

//                        LinearLayout saleitemlistLn2 = new LinearLayout(MainActivity.mContext);
//                        saleitemlistLn2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
//                        saleitemlistLn2.setOrientation(LinearLayout.HORIZONTAL);
//
                        if (str_additemYN.equals("Y")){
                            LinearLayout additem_ln = new LinearLayout(MainActivity.mContext);
                            additem_ln.setLayoutParams(matchParentParams);
                            additem_ln.setOrientation(LinearLayout.HORIZONTAL);

                            TextView additem_txt = new TextView(MainActivity.mContext);
                            additem_txt.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            additem_txt.setText(">> ADD ITEM <<");
                            additem_txt.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 2 + finalFontSizePlus);
                            GlobalMemberValues.setTextStyleOnClover(additem_txt);
                            additem_txt.setPaintFlags(additem_txt.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                            additem_txt.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            additem_ln.addView(additem_txt);

                            printingLn.addView(additem_ln);
                        }

                        if (temp_item_name.equals("Y")){

                            String str_short_item_name = GlobalMemberValues.getMenuNameForLabel(str_itemsvcidx);
                            if (!str_short_item_name.isEmpty()){
                                str_itemname = str_short_item_name;
                            }


                            int tempHeight = 0;
//                            for (int z = 20; z <= GlobalMemberValues.getSizeToString(str_itemname) ; z += 20){
//                                tempHeight += 50;
//                            }
                            if (str_itemname.contains("-J-")){
                                str_itemname = str_itemname.replace("-J-","\n");
                            }
                            if (printername.contains("58")){
                                if (GlobalMemberValues.getSizeToString(str_itemname) > 20){
                                    tempHeight = 50;
                                }
                            } else {
                                if (GlobalMemberValues.getSizeToString(str_itemname) > 18){
                                    tempHeight = 50;
                                }
                            }

                            LinearLayout itemname_ln = new LinearLayout(MainActivity.mContext);
                            itemname_ln.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 50 + finalFontSizePlus + tempHeight));
                            itemname_ln.setOrientation(LinearLayout.HORIZONTAL);

                            TextView itemname = new TextView(MainActivity.mContext);
                            itemname.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                            itemname.setText(str_itemname);
                            itemname.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + 2 + finalFontSizePlus);
                            GlobalMemberValues.setTextStyleOnClover(itemname);
                            itemname.setPaintFlags(itemname.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                            itemname.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                            itemname_ln.addView(itemname);

                            printingLn.addView(itemname_ln);
                        }



                        if (temp_modifier.equals("Y")){
                            if (!GlobalMemberValues.isStrEmpty(str_optiontxt) ||
                                    !GlobalMemberValues.isStrEmpty(str_additionaltxt1) || !GlobalMemberValues.isStrEmpty(str_additionaltxt2)) {
                                if (str_optiontxt.contains("-J-")){
                                    str_optiontxt = str_optiontxt.replace("-J-","\n");
                                }
                                if (str_additionaltxt1.contains("-J-")){
                                    str_additionaltxt1 = str_additionaltxt1.replace("-J-","\n");
                                }
                                if (str_additionaltxt2.contains("-J-")){
                                    str_additionaltxt2 = str_additionaltxt2.replace("-J-","\n");
                                }

                                if (!GlobalMemberValues.isStrEmpty(str_optiontxt)) {
                                    GlobalMemberValues.addModifierValueInLn_noPrice(printingLn, str_itemqty, str_optiontxt, finalFontSizePlus);
                                }
                                if (!GlobalMemberValues.isStrEmpty(str_additionaltxt1)) {

                                    GlobalMemberValues.addModifierValueInLn_noPrice(printingLn, str_itemqty, str_additionaltxt1, finalFontSizePlus);
                                }
                                if (!GlobalMemberValues.isStrEmpty(str_additionaltxt2)) {

                                    GlobalMemberValues.addModifierValueInLn_noPrice(printingLn, str_itemqty, str_additionaltxt2, finalFontSizePlus);
                                }
                            }
                        }

                        if (!GlobalMemberValues.isStrEmpty(str_kitchenmemo) && !str_kitchenmemo.equals("nokitchenmemo")) {
                            // 빈공간 -----------------------------------------------------------------------------------------------------------------------
                            printingLn.addView(GlobalMemberValues.getSpaceZoneViewForClover(MainActivity.mContext, 8));
                            // ---------------------------------------------------------------------------------------------------------------------------------


                            int i_kitchenmemo_height = 34;
                            //
                            for (int z = 25; z <= GlobalMemberValues.getSizeToString(str_kitchenmemo) ; z += 24){
                                i_kitchenmemo_height += 38;
                            }

                            if (i_kitchenmemo_height/35 < GlobalMemberValues.countChar(str_kitchenmemo, '\n')){
                                i_kitchenmemo_height = 50 * (GlobalMemberValues.countChar(str_kitchenmemo, '\n') + 1);
                            } else {
                                i_kitchenmemo_height = i_kitchenmemo_height + 50;
                            }
                            str_optiontxt = "[Memo]\n" + str_kitchenmemo;
//

                            TextView optionmodifierTv = new TextView(MainActivity.mContext);
                            optionmodifierTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, i_kitchenmemo_height));//i_kitchenmemo_height));ViewGroup.LayoutParams.WRAP_CONTENT
                            optionmodifierTv.setPadding(30,0,0,0);
                            optionmodifierTv.setGravity(Gravity.LEFT|Gravity.TOP);
                            optionmodifierTv.setText(str_optiontxt);
                            optionmodifierTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
                            GlobalMemberValues.setTextStyleOnClover(optionmodifierTv);

                            printingLn.addView(optionmodifierTv);
                        }



                    }
                }
                // 아이템 끝
                /**********************************************************************************************************************************/

                // Sale Date ----------------------------------------------------------------------------------------------------------------------
                // LinearLayout
//                LinearLayout saledateLn = new LinearLayout(MainActivity.mContext);
//                saledateLn.setLayoutParams(matchParentParams);
//                saledateLn.setOrientation(LinearLayout.HORIZONTAL);
//
//                TextView saleDateLeftTv = new TextView(MainActivity.mContext);
//                saleDateLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                saleDateLeftTv.setText("Sale Date");
//                saleDateLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                GlobalMemberValues.setTextStyleOnClover(saleDateLeftTv);
//                saleDateLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                saledateLn.addView(saleDateLeftTv);
//
//                TextView saleDateRightTv = new TextView(MainActivity.mContext);
//                saleDateRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                saleDateRightTv.setText(" : " + str_saledate + " " + str_saletime);
//                saleDateRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                GlobalMemberValues.setTextStyleOnClover(saleDateRightTv);
//                saleDateRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
//                saledateLn.addView(saleDateRightTv);
//
//                printingLn.addView(saledateLn);
                // --------------------------------------------------------------------------------------------------------------------------------

                TextView tempSpaceTv2 = new TextView(MainActivity.mContext);
                tempSpaceTv2.setLayoutParams(matchParentParams_blink);
                tempSpaceTv2.setGravity(Gravity.CENTER_HORIZONTAL|Gravity.TOP);
                tempSpaceTv2.setText("  ");
                GlobalMemberValues.setTextStyleOnClover(tempSpaceTv2);
                tempSpaceTv2.setPaintFlags(tempSpaceTv2.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                printingLn.addView(tempSpaceTv2);


                // Sale Time ----------------------------------------------------------------------------------------------------------------------
                // LinearLayout
                LinearLayout saletimeLn = new LinearLayout(MainActivity.mContext);
                saletimeLn.setLayoutParams(matchParentParams);
                saletimeLn.setOrientation(LinearLayout.HORIZONTAL);

                TextView saleTimeLeftTv = new TextView(MainActivity.mContext);
                saleTimeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                SimpleDateFormat oldformat = new SimpleDateFormat("HH:mm:ss");
                SimpleDateFormat newformat = new SimpleDateFormat("hh:mm:ss a");

                try{
                    Date old_date = oldformat.parse(str_saletime);
                    saleTimeLeftTv.setText(newformat.format(old_date));
                } catch (ParseException e){
                    saleTimeLeftTv.setText(str_saletime);
                }

                saleTimeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + finalFontSizePlus);
                GlobalMemberValues.setTextStyleOnClover(saleTimeLeftTv);
                saleTimeLeftTv.setPaintFlags(saleTimeLeftTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                saleTimeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                saletimeLn.addView(saleTimeLeftTv);

//                TextView saleTimeRightTv = new TextView(MainActivity.mContext);
//                saleTimeRightTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                saleTimeRightTv.setText(" " + str_saletime);
//                saleTimeRightTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + finalFontSizePlus);
//                GlobalMemberValues.setTextStyleOnClover(saleTimeRightTv);
//                saleTimeRightTv.setPaintFlags(saleTimeRightTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
//                saleTimeRightTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.5f));
//                saletimeLn.addView(saleTimeRightTv);

//                String temp_stationName = GlobalMemberValues.STATION_NAME;
//                if (str_employeename.equals("Online Order")){
//                    temp_stationName = str_employeename;
//                }
//
//                TextView stationNameTv = new TextView(MainActivity.mContext);
//                stationNameTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);
//                stationNameTv.setText(temp_stationName);
//                stationNameTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + finalFontSizePlus);
//                GlobalMemberValues.setTextStyleOnClover(stationNameTv);
//                stationNameTv.setPaintFlags(stationNameTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
//                stationNameTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                saletimeLn.addView(stationNameTv);
//
//                printingLn.addView(saletimeLn);
                // --------------------------------------------------------------------------------------------------------------------------------

//                LinearLayout station_name_ln = new LinearLayout(MainActivity.mContext);
//                station_name_ln.setLayoutParams(matchParentParams);
//                station_name_ln.setOrientation(LinearLayout.HORIZONTAL);
//
//                TextView stationNameTv = new TextView(MainActivity.mContext);
//                stationNameTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
//                stationNameTv.setText(GlobalMemberValues.STATION_NAME);
//                stationNameTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + finalFontSizePlus);
//                GlobalMemberValues.setTextStyleOnClover(stationNameTv);
//                stationNameTv.setPaintFlags(stationNameTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
//                stationNameTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
//                station_name_ln.addView(stationNameTv);
//
//                printingLn.addView(station_name_ln);


                // 수령타입 -----------------------------------------------------------------------------------------------------------------------
                LinearLayout receivingTypeLn = new LinearLayout(MainActivity.mContext);
                receivingTypeLn.setLayoutParams(matchParentParams);
                receivingTypeLn.setOrientation(LinearLayout.HORIZONTAL);

//                String tempDeliveryTakeaway = "HERE";
//                if (!GlobalMemberValues.isStrEmpty(str_deliverytakeaway)) {
//                    switch (str_deliverytakeaway) {
//                        case "H" : {
//                            tempDeliveryTakeaway = "HERE";
//                            break;
//                        }
//                        case "T" : {
//                            tempDeliveryTakeaway = "TO GO";
//                            break;
//                        }
//                        case "D" : {
//                            tempDeliveryTakeaway = "DELIVERY";
//                            break;
//                        }
//                    }
//                }

                if (temp_order_type.equals("Y")){
                    TextView receivingTypeLeftTv = new TextView(MainActivity.mContext);
                    receivingTypeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
                    receivingTypeLeftTv.setText(">> "+tempDeliveryTakeaway);
                    receivingTypeLeftTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER + finalFontSizePlus);
                    GlobalMemberValues.setTextStyleOnClover(receivingTypeLeftTv);
                    receivingTypeLeftTv.setPaintFlags(receivingTypeLeftTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                    receivingTypeLeftTv.setLayoutParams(new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.MATCH_PARENT, 1.0f));
                    receivingTypeLn.addView(receivingTypeLeftTv);

                    printingLn.addView(receivingTypeLn);
                }


//
//
//                // 점선 ----------------------------------------------------------------------------------------------------------------------------
//                printingLn.addView(GlobalMemberValues.getDotLineViewForClover(MainActivity.mContext));
//                // ---------------------------------------------------------------------------------------------------------------------------------
//
//
//                merchantcustomerText += "printed : " + getDate() + " " + getTime();
//
//                TextView merchantcustomercopyTv = new TextView(MainActivity.mContext);
//                merchantcustomercopyTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 140));
//                merchantcustomercopyTv.setGravity(Gravity.CENTER_HORIZONTAL|Gravity.TOP);
//                merchantcustomercopyTv.setText(merchantcustomerText);
//                merchantcustomercopyTv.setTextSize(TypedValue.COMPLEX_UNIT_PX, GlobalMemberValues.PRINTINGFONTSIZE_ONCLOVER);
//                GlobalMemberValues.setTextStyleOnClover(merchantcustomercopyTv);
//                merchantcustomercopyTv.setPaintFlags(merchantcustomercopyTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
//                printingLn.addView(merchantcustomercopyTv);
//
                TextView tempSpaceTv = new TextView(MainActivity.mContext);
                tempSpaceTv.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 0));
                tempSpaceTv.setGravity(Gravity.CENTER_HORIZONTAL|Gravity.TOP);
                tempSpaceTv.setText("  ");
                GlobalMemberValues.setTextStyleOnClover(tempSpaceTv);
                tempSpaceTv.setPaintFlags(tempSpaceTv.getPaintFlags() | Paint.FAKE_BOLD_TEXT_FLAG);
                printingLn.addView(tempSpaceTv);
                // ------------------------------------------------------------------------------------------------

            }
        };
        thread2.start();
        try {
            thread2.join();
        } catch(InterruptedException e) {}

        return printingLn;
    }

    public static boolean makingLabelLinearLayout_text(final JSONObject data, final String printername, com.epson.epos2.printer.Printer mPrinter) {
        if (data != null) {
            GlobalMemberValues.logWrite("cloverprintinglog", "받은 데이터 : " + data.toString() + "\n");
        }

        SharedPreferences pref = MainActivity.mContext.getSharedPreferences("labelprinter_info", MODE_PRIVATE);
        String temp_pager_number = pref.getString("labelprinter_info_pager_number", "Y");
        String temp_info_name = pref.getString("labelprinter_info_name", "3");
        String temp_modifier = pref.getString("labelprinter_info_modifier", "Y");
        String temp_item_name = pref.getString("labelprinter_info_item_name", "Y");
        String temp_order_type = pref.getString("labelprinter_info_order_type", "Y");
        int px = 350;//(int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, GlobalMemberValues.PRINTINGPAPERSIZE_ONCLOVER, MainActivity.mContext.getResources().getDisplayMetrics());
        int fontSizePlus = 0;
//        String temp_order_printer_name = pref.getString("labelprinter_info_printer_name", "");
        if (printername.contains("58")){
            px = 530;
            fontSizePlus = 10;
        } else {
            px = 337;
        }

        final LinearLayout.LayoutParams matchParentParams
                = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 34 + fontSizePlus);
        matchParentParams.setMargins(0, 0, 0, 0);

        final LinearLayout printingLn = new LinearLayout(MainActivity.mContext);
        printingLn.setLayoutParams(new LinearLayout.LayoutParams(px, LinearLayout.LayoutParams.MATCH_PARENT));

        printingLn.setOrientation(LinearLayout.VERTICAL);
        printingLn.setBackgroundColor(Color.parseColor("#ffffff"));

        final double[] mTotalTipAmount = {0};
        final ArrayList<String> tempArrListStrFile = new ArrayList<String>();
        int finalFontSizePlus = fontSizePlus;
        String main_Text = "";

        String merchantcustomerText = "";

        String str_saledate = "";
        String str_receiptno = "";
        String str_change = "";
        String str_cashtendered = "";
        String str_employeename = "";
        JSONArray jsonArray_saleitemlist = new JSONArray();
        String str_itemqty = "";
        String str_itemname = "";
        String str_itemsvcidx = "";
        String str_itemamount = "";
        String str_itemprice = "";
        String str_itemdcextrastr = "";
        String str_itemtaxexempt = "";
        String str_subtotal = "";
        JSONArray jsonArray_creditcardtransaction = new JSONArray();
        String str_cardsalonsalescardidx = "";
        String str_cardchangeamount = "";
        String str_cardtype = "";
        String str_cardaid = "";
        String str_cardtvr = "";
        String str_cardtsi = "";
        String str_creditcardnumber = "";
        String str_cardrefnumber = "";
        String str_cardauthnumber = "";
        String str_storeaddress2 = "";
        String str_storeaddress1 = "";
        String str_giftcardtendered = "";
        String str_tax = "";
        String str_creditcardtendered = "";
        String str_checktendered = "";
        String str_pointtendered = "";
        String str_storestate = "";
        String str_storename = "";
        String str_storecity = "";
        String str_storezip = "";
        String str_saletime = "";
        String str_storephone = "";
        String str_totalamount = "";

        String str_customername = "";
        String str_customerphonenum = "";
        String str_customeraddress = "";
        String str_customermemo = "";

        String str_customerid = "";
        String str_customer_point_remaining = "";

        String str_alldiscountextrstr = "";
        String str_totalextradiscountprice="";

        String str_receiptprinttype = "";

        String str_cardsalesignatureimageyn = "N";

        String str_signatureTxt = "";

        String str_reprintyn = "N";

        String str_tipamount = "";

        String str_cardtipamount = "0";

        String str_optiontxt = "";
        String str_optionprice = "0.0";
        String str_additionaltxt1 = "";
        String str_additionalprice1 = "0.0";
        String str_additionaltxt2 = "";
        String str_additionalprice2 = "0.0";
        String str_kitchenmemo = "";
        String str_soldoutmemo = "";

        String str_deliverytakeaway = "";
        String str_deliverypickupfee = "";

        String str_receiptfooter = "";

        String str_customerOrderNumber = "";
        String str_customerPagerNumber = "";

        String str_returntipamount = "";
        String str_returnpickupdeliveryfee = "";

        String str_each_discount_extra_price = "";

        // Restaurant 관련
        String str_restaurant_tablename = "";
        String str_restaurant_tablepeoplecnt = "";

        double d_each_discount_total_price = 0;
        double d_each_extra_total_price = 0;

        // cardholder
        String str_cardholder = "";

        // tipcash
        String str_tipcash = "";
        // tipcard
        String str_tipcard = "";

        String str_service_fee = "";

        String str_earned_point = "";

        String str_itemCategoryName = "";
        String str_itemCategoryName2 = "";
        String str_itemCategoryName_temp = "";
        // delivery address
        String str_deliveryaddress = "";

        // billpayamount
        double d_billpayamount = 0.00;
        double d_billtotalamount = 0.00;

        String str_billcartidx = "";
        String str_billtype = "";

        String str_cancelreason = "";

        String str_togo_delivery = "";

        String str_ordertype_alignment_yn = "";

        String str_item_total_num_forLabel = "";
        String str_item_num_forLabel = "";

        String str_deliveryDate = "";

        String str_phoneordernumber = "";

        String str_additemYN = "";

        try {
            str_saledate = GlobalMemberValues.getDataInJsonData(data, "saledate");
            str_receiptno = GlobalMemberValues.getDataInJsonData(data, "receiptno");
            str_cashtendered = GlobalMemberValues.getDataInJsonData(data, "cashtendered");
            str_employeename = GlobalMemberValues.getDataInJsonData(data, "employeename");
            str_subtotal = GlobalMemberValues.getDataInJsonData(data, "subtotal");
            str_storeaddress2 = GlobalMemberValues.getDataInJsonData(data, "storeaddress2");
            str_storeaddress1 = GlobalMemberValues.getDataInJsonData(data, "storeaddress1");
            str_giftcardtendered = GlobalMemberValues.getDataInJsonData(data, "giftcardtendered");
            str_tax = GlobalMemberValues.getDataInJsonData(data, "tax");
            str_creditcardtendered = GlobalMemberValues.getDataInJsonData(data, "creditcardtendered");
            str_checktendered = GlobalMemberValues.getDataInJsonData(data, "checktendered");
            str_pointtendered = GlobalMemberValues.getDataInJsonData(data, "pointtendered");
            str_storestate = GlobalMemberValues.getDataInJsonData(data, "storestate");
            str_storename  = GlobalMemberValues.getDataInJsonData(data, "storename");
            str_storecity = GlobalMemberValues.getDataInJsonData(data, "storecity");
            str_storezip = GlobalMemberValues.getDataInJsonData(data, "storezip");
            str_saletime = GlobalMemberValues.getDataInJsonData(data, "saletime");
            str_storephone = GlobalMemberValues.getDataInJsonData(data, "storephone");
            str_totalamount = GlobalMemberValues.getDataInJsonData(data, "totalamount");
            str_customername = GlobalMemberValues.getDataInJsonData(data, "customername");

            str_customerid = GlobalMemberValues.getDataInJsonData(data,"customerid");
            str_customer_point_remaining = GlobalMemberValues.getDataInJsonData(data,"customer_point_remaining");

            str_receiptprinttype = GlobalMemberValues.getDataInJsonData(data, "receiptprinttype");

            str_change = GlobalMemberValues.getDataInJsonData(data, "change");
            str_alldiscountextrstr = GlobalMemberValues.getDataInJsonData(data, "alldiscountextrstr");
            str_totalextradiscountprice = GlobalMemberValues.getDataInJsonData(data, "totalextradiscountprice");

            str_deliverypickupfee = GlobalMemberValues.getDataInJsonData(data, "deliverypickupfee");
            str_receiptfooter = GlobalMemberValues.getDataInJsonData(data, "receiptfooter");
            str_customerOrderNumber = GlobalMemberValues.getDataInJsonData(data, "customerordernumber");
            str_customerPagerNumber = GlobalMemberValues.getDataInJsonData(data, "customerpagernumber");
            str_tipamount = GlobalMemberValues.getDataInJsonData(data, "tipamount");
            str_customerphonenum = GlobalMemberValues.getDataInJsonData(data, "customerphonenum");
            str_customeraddress = GlobalMemberValues.getDataInJsonData(data, "customeraddress");

            // jihun customer memo
            str_customermemo = GlobalMemberValues.getDataInJsonData(data,"customermemo");

            str_returntipamount = GlobalMemberValues.getDataInJsonData(data, "returntipamount");
            str_returnpickupdeliveryfee = GlobalMemberValues.getDataInJsonData(data, "returnpickupdeliveryfee");

            // Restaurant 관련
            str_restaurant_tablename = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablename");
            str_restaurant_tablepeoplecnt = GlobalMemberValues.getDataInJsonData(data, "restaurant_tablepeoplecnt");

            if (!GlobalMemberValues.getDataInJsonData(data, "tablename").isEmpty()) {
                str_restaurant_tablename = GlobalMemberValues.getDataInJsonData(data, "tablename");
            }
            if (!GlobalMemberValues.getDataInJsonData(data, "tableidx").isEmpty()){
                str_restaurant_tablepeoplecnt = GlobalMemberValues.getDataInJsonData(data, "tableidx");
            }

            if (data.toString().contains("reprintyn")) {
                str_reprintyn = GlobalMemberValues.getDataInJsonData(data, "reprintyn");
            } else {
                str_reprintyn = "N";
            }

            if (data.toString().contains("deliverytakeaway")) {
                str_deliverytakeaway = GlobalMemberValues.getDataInJsonData(data, "deliverytakeaway");
            } else {
                str_deliverytakeaway = "T";
            }

            if (data.getJSONArray("saleitemlist") != null) {
                jsonArray_saleitemlist = data.getJSONArray("saleitemlist");
            }

            if (data.toString().contains("creditcardtransaction")) {
                jsonArray_creditcardtransaction = data.getJSONArray("creditcardtransaction");
            }

            // tip cash tip card
            if (data.toString().contains("tipcash")){
                str_tipcash = GlobalMemberValues.getDataInJsonData(data, "tipcash");
            }

            if (data.toString().contains("tipcard")){
                str_tipcard = GlobalMemberValues.getDataInJsonData(data, "tipcard");
            }

            // service fee
            if (data.toString().contains("servicefee")){
                str_service_fee = GlobalMemberValues.getDataInJsonData(data, "servicefee");
            }
            // earned point
            if (data.toString().contains("earnedpoint")){
                str_earned_point = GlobalMemberValues.getDataInJsonData(data,"earnedpoint");
            }
            // delivery address
            if (data.toString().contains("deliveryaddress")){
                str_deliveryaddress = GlobalMemberValues.getDataInJsonData(data,"deliveryaddress");
            }
            if (data.toString().contains("item_num_forLabel")){
                str_item_num_forLabel = GlobalMemberValues.getDataInJsonData(data,"item_num_forLabel");
            }
            if (data.toString().contains("item_total_num_forLabel")){
                str_item_total_num_forLabel = GlobalMemberValues.getDataInJsonData(data,"item_total_num_forLabel");
            }

            if (data.toString().contains("deliverydate")) {
                str_deliveryDate = GlobalMemberValues.getDataInJsonData(data,"deliverydate");
            }

            if (data.toString().contains("phoneordernumber")) {
                str_phoneordernumber = GlobalMemberValues.getDataInJsonData(data,"phoneordernumber");
            }

            d_billpayamount = data.optDouble("billpayamount", 0.00);
            d_billtotalamount = data.optDouble("billtotalamount", 0.00);

            str_billcartidx = data.optString("billcartidx", "");
            str_billtype = data.optString("billtype","");

            str_cancelreason = data.optString("cancelreason", "");

        } catch (JSONException e){

            GlobalMemberValues.logWrite("clovermakinglnerrorlog", "에러내용 : PaymentPrint get str err!!! " + e.toString() + "\n");
        }

        if (GlobalMemberValues.isStrEmpty(str_customerOrderNumber)) {
            str_customerOrderNumber = MainActivity.mDbInit.dbExecuteReadReturnString(
                    " select customerordernumber from salon_sales where salesCode = '" + str_receiptno + "' ");
        }
        if (GlobalMemberValues.isStrEmpty(str_customerOrderNumber)) {
            str_customerOrderNumber = MssqlDatabase.getResultSetValueToString(
                    " select customerordernumber from salon_sales where salesCode = '" + str_receiptno + "' ");
        }


        StringBuilder textData = new StringBuilder();


        try {
            if (str_deliveryDate != "" && !str_deliveryDate.equals(" :00")){
                mPrinter.addTextSize(3, 3);
                mPrinter.addFeedLine(1);
                textData.append("*** Pickup Time ***");
                mPrinter.addText(textData.toString());
                mPrinter.addTextSize(1, 1);
                textData.delete(0, textData.length());

                mPrinter.addTextSize(3, 3);
                mPrinter.addFeedLine(1);
                textData.append(str_deliveryDate);
                mPrinter.addText(textData.toString());
                mPrinter.addTextSize(1, 1);
                textData.delete(0, textData.length());
            }
            String tempDeliveryTakeaway = "HERE";
            if (!GlobalMemberValues.isStrEmpty(str_deliverytakeaway)) {
                switch (str_deliverytakeaway) {
                    case "H" : {
                        tempDeliveryTakeaway = "HERE";
                        break;
                    }
                    case "T" : {
                        tempDeliveryTakeaway = "TO GO";
                        break;
                    }
                    case "D" : {
                        tempDeliveryTakeaway = "DELIVERY";
                        break;
                    }
                }
            }

            if (temp_pager_number.equals("Y")){
                String pagenoTxt = GlobalMemberValues.getPagerNumberHeaderTxt() + str_customerPagerNumber + "\n";

                mPrinter.addTextSize(3, 3);
                mPrinter.addFeedLine(1);
                textData.append(pagenoTxt);
                mPrinter.addText(textData.toString());
                mPrinter.addTextSize(1, 1);
                textData.delete(0, textData.length());
            }
            mPrinter.addFeedLine(1);

            if (temp_order_type.equals("Y")){

                textData.append(">> "+tempDeliveryTakeaway+"\n");
                mPrinter.addText(textData.toString());
                textData.delete(0, textData.length());
                mPrinter.addFeedLine(1);
            }


            // phone order number
            if (str_customerOrderNumber.isEmpty()){
                textData.append("# " + str_phoneordernumber+"\n");
            } else {
                textData.append("# " + str_customerOrderNumber+"\n");
            }
            mPrinter.addText(textData.toString());
            mPrinter.addTextSize(1, 1);
            textData.delete(0, textData.length());

            // customer name
            String temp_cust_f_name = "";
            String temp_cust_l_name = "";
            if (!str_customername.isEmpty() && str_customername.replace(" ", "").length() != 0){
                String[] temp_name = str_customername.split(" ");
                if (temp_name.length == 1){
                    temp_cust_f_name = temp_name[0];
                } else if (temp_name.length == 2){
                    temp_cust_f_name = temp_name[0];
                    temp_cust_l_name = temp_name[1];
                } else {
                    temp_cust_f_name = temp_name[0];
                    for (String temp_temp : temp_name){
                        temp_cust_l_name = temp_cust_l_name + " " +temp_temp;
                    }
                }

                switch (temp_info_name){
                    case "1" :
                        temp_cust_l_name = "";
                        break;
                    case "2" :
                        temp_cust_f_name = "";
                        break;
                }

                textData.append(temp_cust_f_name + " " + temp_cust_l_name+"\n");
                mPrinter.addText(textData.toString());
                textData.delete(0, textData.length());
                mPrinter.addFeedLine(1);

            }

            // item of
            textData.append("Item " + str_item_num_forLabel + " of " + str_item_total_num_forLabel+"\n");
            mPrinter.addText(textData.toString());
            textData.delete(0, textData.length());
            mPrinter.addFeedLine(1);

            // is onlineorder?
            String temp_stationName = GlobalMemberValues.STATION_NAME;
            if (str_employeename.equals("Online Order")){
                temp_stationName = str_employeename;
            }
            textData.append(temp_stationName+"\n");
            mPrinter.addText(textData.toString());
            textData.delete(0, textData.length());
            mPrinter.addFeedLine(1);

            // item start
            if (jsonArray_saleitemlist.length() != 0) {
                int cnt = jsonArray_saleitemlist.length();
                String str_item_cart_idx = "";
                for (int i = 0; i < cnt; i++) {
                    try {
                        JSONObject dic_item = jsonArray_saleitemlist.getJSONObject(i);
                        str_itemqty = dic_item.getString("itemqty");
                        str_itemname = dic_item.getString("itemname");
//                            str_itemamount = dic_item.getString("itemamount");
//                            str_itemprice = dic_item.getString("itemprice");


//                            str_itemdcextrastr = dic_item.getString("itemdcextrastr");
                        if (dic_item.toString().contains("itemdcextrastr")) {
                            str_itemdcextrastr = dic_item.getString("itemdcextrastr");
                        }

//                            str_itemtaxexempt = dic_item.getString("itemtaxexempt");
                        if (dic_item.toString().contains("itemtaxexempt")) {
                            str_itemtaxexempt = dic_item.getString("itemtaxexempt");
                        }

                        if (dic_item.toString().contains("optiontxt")) {
                            str_optiontxt = dic_item.getString("optiontxt");
                        }
                        if (dic_item.toString().contains("optionprice")) {
                            str_optionprice = dic_item.getString("optionprice");
                        }
                        if (dic_item.toString().contains("additionaltxt1")) {
                            str_additionaltxt1 = dic_item.getString("additionaltxt1");
                        }
                        if (dic_item.toString().contains("additionalprice1")) {
                            str_additionalprice1 = dic_item.getString("additionalprice1");
                        }
                        if (dic_item.toString().contains("additionaltxt2")) {
                            str_additionaltxt2 = dic_item.getString("additionaltxt2");
                        }
                        if (dic_item.toString().contains("additionalprice2")) {
                            str_additionalprice2 = dic_item.getString("additionalprice2");
                        }
                        if (dic_item.toString().contains("kitchenmemo")) {
                            str_kitchenmemo = dic_item.getString("kitchenmemo");
                        }
                        if (dic_item.toString().contains("soldoutmemo")) {
                            str_soldoutmemo = dic_item.getString("soldoutmemo");
                        }
                        if (dic_item.toString().contains("itemdcextraprice")) {
                            str_each_discount_extra_price = dic_item.getString("itemdcextraprice");
                        }
                        if (dic_item.toString().contains("itemCategoryName")) {
                            str_itemCategoryName = dic_item.getString("itemCategoryName");
                        }
                        if (dic_item.toString().contains("itemCategoryName2")) {
                            str_itemCategoryName2 = dic_item.getString("itemCategoryName2");
                        }
                        if (dic_item.toString().contains("togodelitype")){
                            str_togo_delivery = dic_item.getString("togodelitype");
                        }

                        if (dic_item.toString().contains("itemcartidx")){
                            str_item_cart_idx = dic_item.getString("itemcartidx");
                        }

                        if (dic_item.toString().contains("itemsvcidx")){
                            str_itemsvcidx = dic_item.getString("itemsvcidx");
                        }

                        if (dic_item.toString().contains("additem")){
                            str_additemYN = dic_item.getString("additem");
                        }



                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

//                        LinearLayout saleitemlistLn2 = new LinearLayout(MainActivity.mContext);
//                        saleitemlistLn2.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
//                        saleitemlistLn2.setOrientation(LinearLayout.HORIZONTAL);

                    if (str_additemYN.equals("Y")){
                        textData.append(">> ADD ITEM <<"+"\n");
                        mPrinter.addText(textData.toString());
                        textData.delete(0, textData.length());
                    }





                    if (temp_item_name.equals("Y")){

                        String str_short_item_name = GlobalMemberValues.getMenuNameForLabel(str_itemsvcidx);
                        if (!str_short_item_name.isEmpty()){
                            str_itemname = str_short_item_name;
                        }


                        int tempHeight = 0;
//                            for (int z = 20; z <= GlobalMemberValues.getSizeToString(str_itemname) ; z += 20){
//                                tempHeight += 50;
//                            }
                        if (str_itemname.contains("-J-")){
                            str_itemname = str_itemname.replace("-J-","\n");
                        }
                        if (printername.contains("58")){
                            if (GlobalMemberValues.getSizeToString(str_itemname) > 20){
                                tempHeight = 50;
                            }
                        } else {
                            if (GlobalMemberValues.getSizeToString(str_itemname) > 18){
                                tempHeight = 50;
                            }
                        }


                        textData.append(str_itemname+"\n");
                        mPrinter.addText(textData.toString());
                        textData.delete(0, textData.length());
                    }



                    if (temp_modifier.equals("Y")){
                        if (!GlobalMemberValues.isStrEmpty(str_optiontxt) ||
                                !GlobalMemberValues.isStrEmpty(str_additionaltxt1) || !GlobalMemberValues.isStrEmpty(str_additionaltxt2)) {
                            if (str_optiontxt.contains("-J-")){
                                str_optiontxt = str_optiontxt.replace("-J-","\n");
                            }
                            if (str_additionaltxt1.contains("-J-")){
                                str_additionaltxt1 = str_additionaltxt1.replace("-J-","\n");
                            }
                            if (str_additionaltxt2.contains("-J-")){
                                str_additionaltxt2 = str_additionaltxt2.replace("-J-","\n");
                            }

                            if (!GlobalMemberValues.isStrEmpty(str_optiontxt)) {
                                GlobalMemberValues.addModifierValueInLn_noPrice_label_txt(textData, str_itemqty, str_optiontxt, finalFontSizePlus, mPrinter);
                            }
                            if (!GlobalMemberValues.isStrEmpty(str_additionaltxt1)) {

                                GlobalMemberValues.addModifierValueInLn_noPrice_label_txt(textData, str_itemqty, str_additionaltxt1, finalFontSizePlus, mPrinter);
                            }
                            if (!GlobalMemberValues.isStrEmpty(str_additionaltxt2)) {

                                GlobalMemberValues.addModifierValueInLn_noPrice_label_txt(textData, str_itemqty, str_additionaltxt2, finalFontSizePlus, mPrinter);
                            }
                        }
                    }




                }
            }


            TextView saleTimeLeftTv = new TextView(MainActivity.mContext);
            saleTimeLeftTv.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
            SimpleDateFormat oldformat = new SimpleDateFormat("HH:mm:ss");
            SimpleDateFormat newformat = new SimpleDateFormat("hh:mm:ss a");

            try{
                Date old_date = oldformat.parse(str_saletime);
                textData.append(newformat.format(old_date)+"\n");
            } catch (ParseException e){
                textData.append(str_saletime+"\n");
            }

            textData.append(str_itemname+"\n");
            mPrinter.addText(textData.toString());
            textData.delete(0, textData.length());
            mPrinter.addFeedLine(1);

            if (temp_order_type.equals("Y")){
                textData.append(">> "+tempDeliveryTakeaway+"\n");
                mPrinter.addText(textData.toString());
                textData.delete(0, textData.length());
                mPrinter.addFeedLine(1);
            }

            mPrinter.addFeedLine(2);

            mPrinter.addCut(com.epson.epos2.printer.Printer.CUT_FEED);
            return true;
        } catch (Exception e) {
            mPrinter.clearCommandBuffer();
            return false;
        }



        // ------------------------------------------------------------------------------------------------
    }
}
